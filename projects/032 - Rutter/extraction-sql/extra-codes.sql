--┌────────────────────────────────────────────────────┐
--│ Extra codes (diabetes and mental health referrals) │
--└────────────────────────────────────────────────────┘

-------- RESEARCH DATA ENGINEER CHECK -------------------------------

---------------------------------------------------------------------

/* Code sets including: 
	diabetes-clinic
	mental-health-service-referral
*/

-- OUTPUT: Data with the following fields
-- 	-   PatientId (int)
--  -   MatchedPatientId (int or NULL)
--	-	Concept
--	-	Date (YYYY-MM-DD 00:00:00)

------ Find the main cohort and the matched controls ---------

-- Set the start date
DECLARE @StartDate datetime;
SET @StartDate = '2019-07-09';
DECLARE @EndDate datetime;
SET @EndDate = '2022-03-31';


--Just want the output, not the messages
SET NOCOUNT ON;

------------------------------------------------------------------------------
--┌────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
--│ Define Cohort for RQ032: patients that had a diabetes intervention and are included in the MyWay Dataset   │
--└────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

-- OBJECTIVE: To build the cohort of patients needed for RQ032. This reduces duplication of code in the template scripts.

-- COHORT: Any patient in the DiabetesMyWay data, with 20:1 matched controls that have Type 2 Diabetes. More detail in the comments throughout this script.

-- INPUT: assumes there exists one temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: Temp tables as follows:
-- #MainCohort
-- #MatchedCohort
-- #PatientEventData

------------------------------------------------------------------------------------------------------------------------------------------------------------

--┌───────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
--│ Create table of patients who are registered with a GM GP, and haven't joined the database from June 2022 onwards  │
--└───────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘

-- INPUT REQUIREMENTS: @StartDate

DECLARE @TempEndDate datetime;
SET @TempEndDate = '2022-06-01'; -- THIS TEMP END DATE IS DUE TO THE POST-COPI GOVERNANCE REQUIREMENTS 

IF OBJECT_ID('tempdb..#PatientsToInclude') IS NOT NULL DROP TABLE #PatientsToInclude;
SELECT FK_Patient_Link_ID INTO #PatientsToInclude
FROM RLS.vw_Patient_GP_History
GROUP BY FK_Patient_Link_ID
HAVING MIN(StartDate) < @TempEndDate; -- ENSURES NO PATIENTS THAT ENTERED THE DATABASE FROM JUNE 2022 ONWARDS ARE INCLUDED

-- Find all patients alive at start date
IF OBJECT_ID('tempdb..#PossiblePatients') IS NOT NULL DROP TABLE #PossiblePatients;
SELECT PK_Patient_Link_ID as FK_Patient_Link_ID, EthnicMainGroup, DeathDate INTO #PossiblePatients FROM [RLS].vw_Patient_Link
WHERE 
	(DeathDate IS NULL OR (DeathDate >= @StartDate AND DeathDate <= @TempEndDate))
	AND PK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientsToInclude);

-- Find all patients registered with a GP
IF OBJECT_ID('tempdb..#PatientsWithGP') IS NOT NULL DROP TABLE #PatientsWithGP;
SELECT DISTINCT FK_Patient_Link_ID INTO #PatientsWithGP FROM [RLS].vw_Patient
where FK_Reference_Tenancy_ID = 2;

-- Make cohort from patients alive at start date and registered with a GP
IF OBJECT_ID('tempdb..#Patients') IS NOT NULL DROP TABLE #Patients;
SELECT pp.* INTO #Patients FROM #PossiblePatients pp
INNER JOIN #PatientsWithGP gp on gp.FK_Patient_Link_ID = pp.FK_Patient_Link_ID;

------------------------------------------

-- OUTPUT: #Patients
-- >>> Codesets required... Inserting the code set code
--
--┌────────────────────┐
--│ Clinical code sets │
--└────────────────────┘

-- OBJECTIVE: To populate temporary tables with the existing clinical code sets.
--            See the [SQL-generation-process.md](SQL-generation-process.md) for more details.

-- INPUT: No pre-requisites

-- OUTPUT: Five temp tables as follows:
--  #AllCodes (Concept, Version, Code)
--  #CodeSets (FK_Reference_Coding_ID, Concept)
--  #SnomedSets (FK_Reference_SnomedCT_ID, FK_SNOMED_ID)
--  #VersionedCodeSets (FK_Reference_Coding_ID, Concept, Version)
--  #VersionedSnomedSets (FK_Reference_SnomedCT_ID, Version, FK_SNOMED_ID)

--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
--!!! DO NOT EDIT THIS FILE MANUALLY !!!
--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

--#region Clinical code sets

IF OBJECT_ID('tempdb..#AllCodes') IS NOT NULL DROP TABLE #AllCodes;
CREATE TABLE #AllCodes (
  [Concept] [varchar](255) NOT NULL,
  [Version] INT NOT NULL,
  [Code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
  [description] [varchar] (255) NULL 
);

IF OBJECT_ID('tempdb..#codesreadv2') IS NOT NULL DROP TABLE #codesreadv2;
CREATE TABLE #codesreadv2 (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesreadv2
VALUES ('diabetes-type-ii',1,'C1001',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),('diabetes-type-ii',1,'C100100',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),('diabetes-type-ii',1,'C1011',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes-type-ii',1,'C101100',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes-type-ii',1,'C1021',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes-type-ii',1,'C102100',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes-type-ii',1,'C1031',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes-type-ii',1,'C103100',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes-type-ii',1,'C1041',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes-type-ii',1,'C104100',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes-type-ii',1,'C1051',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes-type-ii',1,'C105100',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes-type-ii',1,'C1061',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes-type-ii',1,'C106100',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes-type-ii',1,'C1071',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes-type-ii',1,'C107100',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes-type-ii',1,'C109.',NULL,'Non-insulin dependent diabetes mellitus'),('diabetes-type-ii',1,'C109.00',NULL,'Non-insulin dependent diabetes mellitus'),('diabetes-type-ii',1,'C1090',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes-type-ii',1,'C109000',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes-type-ii',1,'C1091',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes-type-ii',1,'C109100',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes-type-ii',1,'C1092',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes-type-ii',1,'C109200',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes-type-ii',1,'C1093',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes-type-ii',1,'C109300',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes-type-ii',1,'C1094',NULL,'Non-insulin dependent diabetes mellitus with ulcer'),('diabetes-type-ii',1,'C109400',NULL,'Non-insulin dependent diabetes mellitus with ulcer'),('diabetes-type-ii',1,'C1095',NULL,'Non-insulin dependent diabetes mellitus with gangrene'),('diabetes-type-ii',1,'C109500',NULL,'Non-insulin dependent diabetes mellitus with gangrene'),('diabetes-type-ii',1,'C1096',NULL,'Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes-type-ii',1,'C109600',NULL,'Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes-type-ii',1,'C1097',NULL,'Non-insulin dependent diabetes mellitus - poor control'),('diabetes-type-ii',1,'C109700',NULL,'Non-insulin dependent diabetes mellitus - poor control'),('diabetes-type-ii',1,'C1099',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes-type-ii',1,'C109900',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes-type-ii',1,'C109A',NULL,'Non-insulin dependent diabetes mellitus with mononeuropathy'),('diabetes-type-ii',1,'C109A00',NULL,'Non-insulin dependent diabetes mellitus with mononeuropathy'),('diabetes-type-ii',1,'C109B',NULL,'Non-insulin dependent diabetes mellitus with polyneuropathy'),('diabetes-type-ii',1,'C109B00',NULL,'Non-insulin dependent diabetes mellitus with polyneuropathy'),('diabetes-type-ii',1,'C109C',NULL,'Non-insulin dependent diabetes mellitus with nephropathy'),('diabetes-type-ii',1,'C109C00',NULL,'Non-insulin dependent diabetes mellitus with nephropathy'),('diabetes-type-ii',1,'C109D',NULL,'Non-insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes-type-ii',1,'C109D00',NULL,'Non-insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes-type-ii',1,'C109E',NULL,'Non-insulin dependent diabetes mellitus with diabetic cataract'),('diabetes-type-ii',1,'C109E00',NULL,'Non-insulin dependent diabetes mellitus with diabetic cataract'),('diabetes-type-ii',1,'C109F',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes-type-ii',1,'C109F00',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes-type-ii',1,'C109G',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes-type-ii',1,'C109G00',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes-type-ii',1,'C109H',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes-type-ii',1,'C109H00',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes-type-ii',1,'C109J',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C109J00',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C109K',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes-type-ii',1,'C109K00',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10D.',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes-type-ii',1,'C10D.00',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes-type-ii',1,'C10F.',NULL,'Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10F.00',NULL,'Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10F0',NULL,'Type 2 diabetes mellitus with renal complications'),('diabetes-type-ii',1,'C10F000',NULL,'Type 2 diabetes mellitus with renal complications'),('diabetes-type-ii',1,'C10F1',NULL,'Type 2 diabetes mellitus with ophthalmic complications'),('diabetes-type-ii',1,'C10F100',NULL,'Type 2 diabetes mellitus with ophthalmic complications'),('diabetes-type-ii',1,'C10F2',NULL,'Type 2 diabetes mellitus with neurological complications'),('diabetes-type-ii',1,'C10F200',NULL,'Type 2 diabetes mellitus with neurological complications'),('diabetes-type-ii',1,'C10F3',NULL,'Type 2 diabetes mellitus with multiple complications'),('diabetes-type-ii',1,'C10F300',NULL,'Type 2 diabetes mellitus with multiple complications'),('diabetes-type-ii',1,'C10F4',NULL,'Type 2 diabetes mellitus with ulcer'),('diabetes-type-ii',1,'C10F400',NULL,'Type 2 diabetes mellitus with ulcer'),('diabetes-type-ii',1,'C10F5',NULL,'Type 2 diabetes mellitus with gangrene'),('diabetes-type-ii',1,'C10F500',NULL,'Type 2 diabetes mellitus with gangrene'),('diabetes-type-ii',1,'C10F6',NULL,'Type 2 diabetes mellitus with retinopathy'),('diabetes-type-ii',1,'C10F600',NULL,'Type 2 diabetes mellitus with retinopathy'),('diabetes-type-ii',1,'C10F7',NULL,'Type 2 diabetes mellitus - poor control'),('diabetes-type-ii',1,'C10F700',NULL,'Type 2 diabetes mellitus - poor control'),('diabetes-type-ii',1,'C10F9',NULL,'Type 2 diabetes mellitus without complication'),('diabetes-type-ii',1,'C10F900',NULL,'Type 2 diabetes mellitus without complication'),('diabetes-type-ii',1,'C10FA',NULL,'Type 2 diabetes mellitus with mononeuropathy'),('diabetes-type-ii',1,'C10FA00',NULL,'Type 2 diabetes mellitus with mononeuropathy'),('diabetes-type-ii',1,'C10FB',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes-type-ii',1,'C10FB00',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes-type-ii',1,'C10FC',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes-type-ii',1,'C10FC00',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes-type-ii',1,'C10FD',NULL,'Type 2 diabetes mellitus with hypoglycaemic coma'),('diabetes-type-ii',1,'C10FD00',NULL,'Type 2 diabetes mellitus with hypoglycaemic coma'),('diabetes-type-ii',1,'C10FE',NULL,'Type 2 diabetes mellitus with diabetic cataract'),('diabetes-type-ii',1,'C10FE00',NULL,'Type 2 diabetes mellitus with diabetic cataract'),('diabetes-type-ii',1,'C10FF',NULL,'Type 2 diabetes mellitus with peripheral angiopathy'),('diabetes-type-ii',1,'C10FF00',NULL,'Type 2 diabetes mellitus with peripheral angiopathy'),('diabetes-type-ii',1,'C10FG',NULL,'Type 2 diabetes mellitus with arthropathy'),('diabetes-type-ii',1,'C10FG00',NULL,'Type 2 diabetes mellitus with arthropathy'),('diabetes-type-ii',1,'C10FH',NULL,'Type 2 diabetes mellitus with neuropathic arthropathy'),('diabetes-type-ii',1,'C10FH00',NULL,'Type 2 diabetes mellitus with neuropathic arthropathy'),('diabetes-type-ii',1,'C10FJ',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10FJ00',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10FK',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10FK00',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes-type-ii',1,'C10FL',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes-type-ii',1,'C10FL00',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes-type-ii',1,'C10FM',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes-type-ii',1,'C10FM00',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes-type-ii',1,'C10FN',NULL,'Type 2 diabetes mellitus with ketoacidosis'),('diabetes-type-ii',1,'C10FN00',NULL,'Type 2 diabetes mellitus with ketoacidosis'),('diabetes-type-ii',1,'C10FP',NULL,'Type 2 diabetes mellitus with ketoacidotic coma'),('diabetes-type-ii',1,'C10FP00',NULL,'Type 2 diabetes mellitus with ketoacidotic coma'),('diabetes-type-ii',1,'C10FQ',NULL,'Type 2 diabetes mellitus with exudative maculopathy'),('diabetes-type-ii',1,'C10FQ00',NULL,'Type 2 diabetes mellitus with exudative maculopathy'),
('diabetes-type-ii',1,'C10FR',NULL,'Type 2 diabetes mellitus with gastroparesis'),('diabetes-type-ii',1,'C10FR00',NULL,'Type 2 diabetes mellitus with gastroparesis'),('diabetes-type-ii',1,'C10y1',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes-type-ii',1,'C10y100',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes-type-ii',1,'C10z1',NULL,'Diabetes mellitus, adult onset, with unspecified complication'),('diabetes-type-ii',1,'C10z100',NULL,'Diabetes mellitus, adult onset, with unspecified complication');
INSERT INTO #codesreadv2
VALUES ('gestational-diabetes',1,'L1808',NULL,'Gestational diabetes mellitus'),('gestational-diabetes',1,'L180800',NULL,'Gestational diabetes mellitus'),('gestational-diabetes',1,'L1809',NULL,'Gestational diabetes mellitus'),('gestational-diabetes',1,'L180900',NULL,'Gestational diabetes mellitus');
INSERT INTO #codesreadv2
VALUES ('polycystic-ovarian-syndrome',1,'12FA.',NULL,'FH: Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'12FA.00',NULL,'FH: Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'C164.',NULL,'Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'C164.00',NULL,'Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'C165.',NULL,'Polycystic ovarian syndrome'),('polycystic-ovarian-syndrome',1,'C165.00',NULL,'Polycystic ovarian syndrome');
INSERT INTO #codesreadv2
VALUES ('diabetes-clinic',1,'8CR2.',NULL,'Diabetes clinical management plan'),('diabetes-clinic',1,'8CR2.00',NULL,'Diabetes clinical management plan'),('diabetes-clinic',1,'8H7f.',NULL,'Referral to diabetes nurse'),('diabetes-clinic',1,'8H7f.00',NULL,'Referral to diabetes nurse'),('diabetes-clinic',1,'8Hj0.',NULL,'Referral to diabetes structured education programme'),('diabetes-clinic',1,'8Hj0.00',NULL,'Referral to diabetes structured education programme'),('diabetes-clinic',1,'8Hl4.',NULL,'Referral to community diabetes specialist nurse'),('diabetes-clinic',1,'8Hl4.00',NULL,'Referral to community diabetes specialist nurse'),('diabetes-clinic',1,'8Hlc.',NULL,'Referral to community diabetes service'),('diabetes-clinic',1,'8Hlc.00',NULL,'Referral to community diabetes service'),('diabetes-clinic',1,'8HTE1',NULL,'Referral to community diabetes clinic'),('diabetes-clinic',1,'8HTE100',NULL,'Referral to community diabetes clinic'),('diabetes-clinic',1,'9N0n.',NULL,'Seen in community diabetes specialist clinic'),('diabetes-clinic',1,'9N0n.00',NULL,'Seen in community diabetes specialist clinic'),('diabetes-clinic',1,'9OL..',NULL,'Diabetes clinic administration'),('diabetes-clinic',1,'9OL..00',NULL,'Diabetes clinic administration'),('diabetes-clinic',1,'9OLZ.',NULL,'Diabetes monitoring admin.NOS'),('diabetes-clinic',1,'9OLZ.00',NULL,'Diabetes monitoring admin.NOS');
INSERT INTO #codesreadv2
VALUES ('mental-health-service-referral',1,'64R7.','11','Child refer- clinical psychol.'),('mental-health-service-referral',1,'64R7.','11','Child refer- clinical psychol.'),('mental-health-service-referral',1,'8H23.',NULL,'Admit psychiatric emergency'),('mental-health-service-referral',1,'8H23.00',NULL,'Admit psychiatric emergency'),('mental-health-service-referral',1,'8H230',NULL,'Emerg psychiatric admiss MHA'),('mental-health-service-referral',1,'8H23000',NULL,'Emerg psychiatric admiss MHA'),('mental-health-service-referral',1,'8H2L.',NULL,'Admit psychogeriatric emergency'),('mental-health-service-referral',1,'8H2L.00',NULL,'Admit psychogeriatric emergency'),('mental-health-service-referral',1,'8H2T.',NULL,'Emergency voluntary psychiatric admission Mental Health Act'),('mental-health-service-referral',1,'8H2T.00',NULL,'Emergency voluntary psychiatric admission Mental Health Act'),('mental-health-service-referral',1,'8H38.',NULL,'Non-urgent psychiatric admisn.'),('mental-health-service-referral',1,'8H38.00',NULL,'Non-urgent psychiatric admisn.'),('mental-health-service-referral',1,'8H3Q.',NULL,'Non-urgent psychogeriatric admission'),('mental-health-service-referral',1,'8H3Q.00',NULL,'Non-urgent psychogeriatric admission'),('mental-health-service-referral',1,'8H49.',NULL,'Psychiatric referral'),('mental-health-service-referral',1,'8H49.00',NULL,'Psychiatric referral'),('mental-health-service-referral',1,'8H4D.',NULL,'Referral to psychogeriatrician'),('mental-health-service-referral',1,'8H4D.00',NULL,'Referral to psychogeriatrician'),('mental-health-service-referral',1,'8H4f.',NULL,'Referral to learning disabilities psychiatrist'),('mental-health-service-referral',1,'8H4f.00',NULL,'Referral to learning disabilities psychiatrist'),('mental-health-service-referral',1,'8H4P.',NULL,'Referral to child psychiatrist'),('mental-health-service-referral',1,'8H4P.00',NULL,'Referral to child psychiatrist'),('mental-health-service-referral',1,'8H7T.',NULL,'Refer to psychologist'),('mental-health-service-referral',1,'8H7T.00',NULL,'Refer to psychologist'),('mental-health-service-referral',1,'8Hc..',NULL,'Referral to mental health team'),('mental-health-service-referral',1,'8Hc..00',NULL,'Referral to mental health team'),('mental-health-service-referral',1,'8Hc0.',NULL,'Referral to community mental health team'),('mental-health-service-referral',1,'8Hc0.00',NULL,'Referral to community mental health team'),('mental-health-service-referral',1,'8Hc2.',NULL,'Referral to primary care mental health team'),('mental-health-service-referral',1,'8Hc2.00',NULL,'Referral to primary care mental health team'),('mental-health-service-referral',1,'8HHn.',NULL,'Referral to non NHS mental health community service'),('mental-health-service-referral',1,'8HHn.00',NULL,'Referral to non NHS mental health community service'),('mental-health-service-referral',1,'8HHo.',NULL,'Referral to older age communiy mental health team'),('mental-health-service-referral',1,'8HHo.00',NULL,'Referral to older age communiy mental health team'),('mental-health-service-referral',1,'8HHR.',NULL,'Referral to child and adolescent psychiatry service'),('mental-health-service-referral',1,'8HHR.00',NULL,'Referral to child and adolescent psychiatry service'),('mental-health-service-referral',1,'8HHs.',NULL,'Referral to psychosis early intervention service'),('mental-health-service-referral',1,'8HHs.00',NULL,'Referral to psychosis early intervention service'),('mental-health-service-referral',1,'8HHT.',NULL,'Referral to psychotherapist'),('mental-health-service-referral',1,'8HHT.00',NULL,'Referral to psychotherapist'),('mental-health-service-referral',1,'8HHu.',NULL,'Referral to primary care mental health gateway worker'),('mental-health-service-referral',1,'8HHu.00',NULL,'Referral to primary care mental health gateway worker'),('mental-health-service-referral',1,'8HHv.',NULL,'Referral to primary care mental health graduate worker'),('mental-health-service-referral',1,'8HHv.00',NULL,'Referral to primary care mental health graduate worker'),('mental-health-service-referral',1,'8HJ3.',NULL,'Psychiatric self-referral'),('mental-health-service-referral',1,'8HJ3.00',NULL,'Psychiatric self-referral'),('mental-health-service-referral',1,'8HlB.',NULL,'Urgent referral to psychiatrist'),('mental-health-service-referral',1,'8HlB.00',NULL,'Urgent referral to psychiatrist'),('mental-health-service-referral',1,'8HlD.',NULL,'Referral to forensic psychiatrist'),('mental-health-service-referral',1,'8HlD.00',NULL,'Referral to forensic psychiatrist'),('mental-health-service-referral',1,'8HVi.',NULL,'Private referral to psychologist'),('mental-health-service-referral',1,'8HVi.00',NULL,'Private referral to psychologist'),('mental-health-service-referral',1,'8HVO.',NULL,'Private referral to psychiatrist'),('mental-health-service-referral',1,'8HVO.00',NULL,'Private referral to psychiatrist'),('mental-health-service-referral',1,'8HVS.',NULL,'Private referral to psychogeriatrician'),('mental-health-service-referral',1,'8HVS.00',NULL,'Private referral to psychogeriatrician'),('mental-health-service-referral',1,'ZL5B.',NULL,'Referral to psychiatrist'),('mental-health-service-referral',1,'ZL5B.00',NULL,'Referral to psychiatrist'),('mental-health-service-referral',1,'ZL5B1',NULL,'Referral to child and adolescent psychiatrist'),('mental-health-service-referral',1,'ZL5B100',NULL,'Referral to child and adolescent psychiatrist'),('mental-health-service-referral',1,'ZL5B2',NULL,'Referral to forensic psychiatrist'),('mental-health-service-referral',1,'ZL5B200',NULL,'Referral to forensic psychiatrist'),('mental-health-service-referral',1,'ZL5B3',NULL,'Referral to liaison psychiatrist'),('mental-health-service-referral',1,'ZL5B300',NULL,'Referral to liaison psychiatrist'),('mental-health-service-referral',1,'ZL5B4',NULL,'Referral to rehabilitation psychiatrist'),('mental-health-service-referral',1,'ZL5B400',NULL,'Referral to rehabilitation psychiatrist'),('mental-health-service-referral',1,'ZL5B5',NULL,'Referral to psychiatrist for mental handicap'),('mental-health-service-referral',1,'ZL5B500',NULL,'Referral to psychiatrist for mental handicap'),('mental-health-service-referral',1,'ZL62A',NULL,'Referral to nurse behavioural therapist'),('mental-health-service-referral',1,'ZL62A00',NULL,'Referral to nurse behavioural therapist'),('mental-health-service-referral',1,'ZL62B',NULL,'Referral to nurse psychotherapist'),('mental-health-service-referral',1,'ZL62B00',NULL,'Referral to nurse psychotherapist'),('mental-health-service-referral',1,'ZL62E',NULL,'Referral to psychiatric nurse'),('mental-health-service-referral',1,'ZL62E00',NULL,'Referral to psychiatric nurse'),('mental-health-service-referral',1,'ZL77.',NULL,'Referral to psychotherapist'),('mental-health-service-referral',1,'ZL77.00',NULL,'Referral to psychotherapist'),('mental-health-service-referral',1,'ZL78.',NULL,'Referral to psychologist'),('mental-health-service-referral',1,'ZL78.00',NULL,'Referral to psychologist')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesreadv2;

IF OBJECT_ID('tempdb..#codesctv3') IS NOT NULL DROP TABLE #codesctv3;
CREATE TABLE #codesctv3 (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesctv3
VALUES ('diabetes-type-ii',1,'C1011',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes-type-ii',1,'C1021',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes-type-ii',1,'C1031',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes-type-ii',1,'C1041',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes-type-ii',1,'C1051',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes-type-ii',1,'C1061',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes-type-ii',1,'C1071',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes-type-ii',1,'C1090',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes-type-ii',1,'C1091',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes-type-ii',1,'C1092',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes-type-ii',1,'C1093',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes-type-ii',1,'C1094',NULL,'Non-insulin-dependent diabetes mellitus with ulcer'),('diabetes-type-ii',1,'C1095',NULL,'Non-insulin-dependent diabetes mellitus with gangrene'),('diabetes-type-ii',1,'C1096',NULL,'NIDDM - Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes-type-ii',1,'C1097',NULL,'Non-insulin-dependent diabetes mellitus - poor control'),('diabetes-type-ii',1,'C10y1',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes-type-ii',1,'C10z1',NULL,'Diabetes mellitus, adult onset, with unspecified complication'),('diabetes-type-ii',1,'X40J5',NULL,'Non-insulin-dependent diabetes mellitus'),('diabetes-type-ii',1,'X40J6',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes-type-ii',1,'X40JJ',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes-type-ii',1,'XE10F',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),('diabetes-type-ii',1,'XM19j',NULL,'[EDTA] Diabetes Type II (non-insulin-dependent) associated with renal failure'),('diabetes-type-ii',1,'XaELQ',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes-type-ii',1,'XaEnp',NULL,'Type II diabetes mellitus with mononeuropathy'),('diabetes-type-ii',1,'XaEnq',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes-type-ii',1,'XaF05',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes-type-ii',1,'XaFWI',NULL,'Type II diabetes mellitus with hypoglycaemic coma'),('diabetes-type-ii',1,'XaFmA',NULL,'Type II diabetes mellitus with diabetic cataract'),('diabetes-type-ii',1,'XaFn7',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes-type-ii',1,'XaFn8',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes-type-ii',1,'XaFn9',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes-type-ii',1,'XaIfG',NULL,'Type II diabetes on insulin'),('diabetes-type-ii',1,'XaIfI',NULL,'Type II diabetes on diet only'),('diabetes-type-ii',1,'XaIrf',NULL,'Hyperosmolar non-ketotic state in type II diabetes mellitus'),('diabetes-type-ii',1,'XaIzQ',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes-type-ii',1,'XaIzR',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes-type-ii',1,'XaJQp',NULL,'Type II diabetes mellitus with exudative maculopathy'),('diabetes-type-ii',1,'XaKyX',NULL,'Type II diabetes mellitus with gastroparesis');
INSERT INTO #codesctv3
VALUES ('gestational-diabetes',1,'L1808',NULL,'Gestational diabetes');
INSERT INTO #codesctv3
VALUES ('polycystic-ovarian-syndrome',1,'X406n',NULL,'Polycystic ovarian syndrome'),('polycystic-ovarian-syndrome',1,'X406n',NULL,'Polycystic ovary syndrome'),('polycystic-ovarian-syndrome',1,'XE10l',NULL,'PCO - Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'XE2p5',NULL,'(Polycystic ovaries) or (Stein-Leventhal syndrome)'),('polycystic-ovarian-syndrome',1,'XaJZG',NULL,'FH: Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'C164.',NULL,'Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'X406n',NULL,'PCOD - Polycystic ovarian disease'),('polycystic-ovarian-syndrome',1,'XE10l',NULL,'Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'X406n',NULL,'PCOS - Polycystic ovarian syndrome'),('polycystic-ovarian-syndrome',1,'XE2p5',NULL,'Polycystic ovaries'),('polycystic-ovarian-syndrome',1,'C164.',NULL,'(Polycystic ovaries) or (isosexual virilisation) or (Stein-Leventhal syndrome) or (multicystic ovaries)'),('polycystic-ovarian-syndrome',1,'X406n',NULL,'Polycystic ovarian disease');
INSERT INTO #codesctv3
VALUES ('diabetes-clinic',1,'9OL..',NULL,'Diabetes clinic administration'),('diabetes-clinic',1,'9OLZ.',NULL,'Diabetes monitoring admin.NOS'),('diabetes-clinic',1,'XaE46',NULL,'Referral to diabetes nurse'),('diabetes-clinic',1,'XaJYg',NULL,'Diabetes clinical management plan'),('diabetes-clinic',1,'XaKaM',NULL,'Seen in community diabetes specialist clinic'),('diabetes-clinic',1,'XaKGy',NULL,'Referral to diabetes structured education programme'),('diabetes-clinic',1,'XaMhQ',NULL,'Referral to community diabetes specialist nurse'),('diabetes-clinic',1,'XaYaB',NULL,'Referral to community diabetes service'),('diabetes-clinic',1,'XaZRZ',NULL,'Referral to community diabetes clinic'),('diabetes-clinic',1,'XE2Nd',NULL,'Diabetes monitoring admin.'),('diabetes-clinic',1,'XM1Rs',NULL,'Diabetes clinic administration');
INSERT INTO #codesctv3
VALUES ('mental-health-service-referral',1,'64R7.',NULL,'Child refer- clinical psychol.'),('mental-health-service-referral',1,'8H23.',NULL,'Admit psychiatric emergency'),('mental-health-service-referral',1,'8H230',NULL,'Emergency psychiatric admission MHA'),('mental-health-service-referral',1,'8H2L.',NULL,'Admit psychogeriatric emergency'),('mental-health-service-referral',1,'8H38.',NULL,'Non-urgent psychiatric admission'),('mental-health-service-referral',1,'8H3Q.',NULL,'Non-urgent psychogeriatric admission'),('mental-health-service-referral',1,'8H49.',NULL,'Referral to psychiatry service'),('mental-health-service-referral',1,'8H4D.',NULL,'Referral to psychiatrist for the elderly mentally ill'),('mental-health-service-referral',1,'8HJ3.',NULL,'Psychiatric self-referral'),('mental-health-service-referral',1,'8HVO.',NULL,'Private referral to psychiatrist'),('mental-health-service-referral',1,'8HVS.',NULL,'Private referral to psychogeriatrician'),('mental-health-service-referral',1,'XaAcy',NULL,'Referral to child and adolescent psychiatry service'),('mental-health-service-referral',1,'XaAgA',NULL,'Referral to child and adolescent psychiatrist'),('mental-health-service-referral',1,'XaAgB',NULL,'Referral to forensic psychiatrist'),('mental-health-service-referral',1,'XaAgE',NULL,'Referral to learning disabilities psychiatrist'),('mental-health-service-referral',1,'XaAhN',NULL,'Referral to psychotherapist'),('mental-health-service-referral',1,'XaBTD',NULL,'Referral to psychologist'),('mental-health-service-referral',1,'XaBvX',NULL,'Child referral - clinical psychologist'),('mental-health-service-referral',1,'XaIkd',NULL,'Referral to community mental health team'),('mental-health-service-referral',1,'XaIPw',NULL,'Referral to mental health team'),('mental-health-service-referral',1,'XaL0o',NULL,'Referral to non NHS mental health community service'),('mental-health-service-referral',1,'XaL0p',NULL,'Referral to older age community mental health team'),('mental-health-service-referral',1,'XaL19',NULL,'Referral to psychosis early intervention service'),('mental-health-service-referral',1,'XaLFk',NULL,'Referral to primary care mental health graduate worker'),('mental-health-service-referral',1,'XaLFL',NULL,'Referral to primary care mental health gateway worker'),('mental-health-service-referral',1,'XaMhM',NULL,'Referral to primary care mental health team'),('mental-health-service-referral',1,'XaNlN',NULL,'Emergency voluntary psychiatric admission under Mental Health Act'),('mental-health-service-referral',1,'XaPDH',NULL,'Urgent referral to psychiatrist'),('mental-health-service-referral',1,'XaZIW',NULL,'Private referral to psychologist'),('mental-health-service-referral',1,'XE1Sb',NULL,'Child: clinical psychologist')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesctv3;

IF OBJECT_ID('tempdb..#codessnomed') IS NOT NULL DROP TABLE #codessnomed;
CREATE TABLE #codessnomed (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codessnomed
VALUES ('diabetes-clinic',1,'279521000000108',NULL,'Referral to community diabetes specialist nurse (procedure)'),('diabetes-clinic',1,'312856000',NULL,'Referral to diabetes nurse (procedure)'),('diabetes-clinic',1,'415270003',NULL,'Referral to diabetes structured education programme (procedure)'),('diabetes-clinic',1,'416554009',NULL,'Seen in community diabetes specialist clinic (finding)'),('diabetes-clinic',1,'713671000000109',NULL,'Diabetes monitoring administration (record artifact)'),('diabetes-clinic',1,'713691000000108',NULL,'Diabetes clinic administration (record artifact)'),('diabetes-clinic',1,'736284000',NULL,'Diabetes clinical management plan (record artifact)'),('diabetes-clinic',1,'811391000000104',NULL,'Referral to community diabetes service (procedure)'),('diabetes-clinic',1,'841221000000102',NULL,'Referral to community diabetes clinic (procedure)');
INSERT INTO #codessnomed
VALUES ('mental-health-service-referral',1,'183455007',NULL,'Admit psychiatric emergency (procedure)'),('mental-health-service-referral',1,'183474004',NULL,'Admit psychogeriatric emergency (procedure)'),('mental-health-service-referral',1,'183489008',NULL,'Non-urgent psychiatric admission (procedure)'),('mental-health-service-referral',1,'183508000',NULL,'Non-urgent psychogeriatric admission (procedure)'),('mental-health-service-referral',1,'183524004',NULL,'Referral to psychiatry service (procedure)'),('mental-health-service-referral',1,'183528001',NULL,'Referral to psychiatrist for the elderly mentally ill (procedure)'),('mental-health-service-referral',1,'183690008',NULL,'Psychiatric self-referral (procedure)'),('mental-health-service-referral',1,'183904005',NULL,'Private referral to psychiatrist (procedure)'),('mental-health-service-referral',1,'183908008',NULL,'Private referral to psychogeriatrician (procedure)'),('mental-health-service-referral',1,'199081000000108',NULL,'Referral to non NHS mental health community service (procedure)'),('mental-health-service-referral',1,'199091000000105',NULL,'Referral to older age community mental health team (procedure)'),('mental-health-service-referral',1,'199191000000109',NULL,'Referral to psychosis early intervention service (procedure)'),('mental-health-service-referral',1,'200341000000105',NULL,'Referral to primary care mental health gateway worker (procedure)'),('mental-health-service-referral',1,'200351000000108',NULL,'Referral to primary care mental health graduate worker (procedure)'),('mental-health-service-referral',1,'24921000000109',NULL,'Referral to community mental health team (procedure)'),('mental-health-service-referral',1,'279381000000103',NULL,'Referral to primary care mental health team (procedure)'),('mental-health-service-referral',1,'306134009',NULL,'Referral to child and adolescent psychiatry service (procedure)'),('mental-health-service-referral',1,'306291008',NULL,'Referral to child and adolescent psychiatrist (procedure)'),('mental-health-service-referral',1,'306292001',NULL,'Referral to forensic psychiatrist (procedure)'),('mental-health-service-referral',1,'306294000',NULL,'Referral to psychiatrist for mental handicap (procedure)'),('mental-health-service-referral',1,'306343005',NULL,'Referral to psychotherapist (procedure)'),('mental-health-service-referral',1,'308459004',NULL,'Referral to psychologist (procedure)'),('mental-health-service-referral',1,'309627007',NULL,'Child referral - clinical psychologist (procedure)'),('mental-health-service-referral',1,'313891000000105',NULL,'Emergency voluntary psychiatric admission under Mental Health Act (procedure)'),('mental-health-service-referral',1,'354721000000107',NULL,'Urgent referral to psychiatrist (procedure)'),('mental-health-service-referral',1,'390866009',NULL,'Referral to mental health team (procedure)'),('mental-health-service-referral',1,'395661000000100',NULL,'Emergency psychiatric admission MHA (procedure)'),('mental-health-service-referral',1,'836021000000100',NULL,'Private referral to psychologist (procedure)')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codessnomed;

IF OBJECT_ID('tempdb..#codesemis') IS NOT NULL DROP TABLE #codesemis;
CREATE TABLE #codesemis (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesemis
VALUES ('gestational-diabetes',1,'^ESCTGE801661',NULL,'Gestational diabetes, delivered'),('gestational-diabetes',1,'^ESCTGE801662',NULL,'Gestational diabetes mellitus complicating pregnancy');
INSERT INTO #codesemis
VALUES ('diabetes-clinic',1,'^ESCTRE687299',NULL,'Referral to diabetes structured education program'),('diabetes-clinic',1,'EMISNQDI105',NULL,'Diabetic foot screening invitation'),('diabetes-clinic',1,'EMISNQDI118',NULL,'Diabetes monitoring in primary care'),('diabetes-clinic',1,'EMISNQDI119',NULL,'Diabetes monitoring in secondary care'),('diabetes-clinic',1,'EMISNQDI158',NULL,'Diabetes care planning test results sent to patient'),('diabetes-clinic',1,'EMISNQPA15',NULL,'Patient consent given for retinal screening'),('diabetes-clinic',1,'EMISNQPR444',NULL,'Pre-diabetes structured education programme declined'),('diabetes-clinic',1,'EMISNQUN46',NULL,'Unsuitable for DESMOND diabetes structured education programme');
INSERT INTO #codesemis
VALUES ('mental-health-service-referral',1,'^ESCT1248218',NULL,'Admit psychiatric emergency'),('mental-health-service-referral',1,'^ESCT1248219',NULL,'Admit psychogeriatric emergency'),('mental-health-service-referral',1,'^ESCT1248505',NULL,'Emerg psychiatric admiss MHA'),('mental-health-service-referral',1,'^ESCTEM810119',NULL,'Emergency informal psychiatric admission under Mental Health Act'),('mental-health-service-referral',1,'^ESCTEM813400',NULL,'Emergency psychiatric admission under Mental Health Act 1983 (England and Wales)'),('mental-health-service-referral',1,'^ESCTPS472327',NULL,'Psychiatric emergency hospital admission'),('mental-health-service-referral',1,'^ESCTPS472368',NULL,'Psychogeriatric emergency hospital admission'),('mental-health-service-referral',1,'^ESCTRE472433',NULL,'Referral to psychiatry service'),('mental-health-service-referral',1,'^ESCTRE472439',NULL,'Referral to psychiatrist for the elderly mentally ill'),('mental-health-service-referral',1,'^ESCTRE595428',NULL,'Referral to child and adolescent psychiatrist'),('mental-health-service-referral',1,'^ESCTRE595432',NULL,'Referral to psychiatrist for mental handicap'),('mental-health-service-referral',1,'^ESCTRE597888',NULL,'Referral to psychologist'),('mental-health-service-referral',1,'EMISNQPR144',NULL,'Private referral to psychologist'),('mental-health-service-referral',1,'EMISNQRE33',NULL,'Referral to child and adolescent psychiatry service'),('mental-health-service-referral',1,'EMISQEL1',NULL,'Elderly psychiatric emergency admission')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesemis;


IF OBJECT_ID('tempdb..#TempRefCodes') IS NOT NULL DROP TABLE #TempRefCodes;
CREATE TABLE #TempRefCodes (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, version INT NOT NULL, [description] VARCHAR(255));

-- Read v2 codes
INSERT INTO #TempRefCodes
SELECT PK_Reference_Coding_ID, dcr.concept, dcr.[version], dcr.[description]
FROM [SharedCare].[Reference_Coding] rc
INNER JOIN #codesreadv2 dcr on dcr.code = rc.MainCode
WHERE CodingType='ReadCodeV2'
AND (dcr.term IS NULL OR dcr.term = rc.Term)
and PK_Reference_Coding_ID != -1;

-- CTV3 codes
INSERT INTO #TempRefCodes
SELECT PK_Reference_Coding_ID, dcc.concept, dcc.[version], dcc.[description]
FROM [SharedCare].[Reference_Coding] rc
INNER JOIN #codesctv3 dcc on dcc.code = rc.MainCode
WHERE CodingType='CTV3'
and PK_Reference_Coding_ID != -1;

-- EMIS codes with a FK Reference Coding ID
INSERT INTO #TempRefCodes
SELECT FK_Reference_Coding_ID, ce.concept, ce.[version], ce.[description]
FROM [SharedCare].[Reference_Local_Code] rlc
INNER JOIN #codesemis ce on ce.code = rlc.LocalCode
WHERE FK_Reference_Coding_ID != -1;

IF OBJECT_ID('tempdb..#TempSNOMEDRefCodes') IS NOT NULL DROP TABLE #TempSNOMEDRefCodes;
CREATE TABLE #TempSNOMEDRefCodes (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [version] INT NOT NULL, [description] VARCHAR(255));

-- SNOMED codes
INSERT INTO #TempSNOMEDRefCodes
SELECT PK_Reference_SnomedCT_ID, dcs.concept, dcs.[version], dcs.[description]
FROM SharedCare.Reference_SnomedCT rs
INNER JOIN #codessnomed dcs on dcs.code = rs.ConceptID;

-- EMIS codes with a FK SNOMED ID but without a FK Reference Coding ID
INSERT INTO #TempSNOMEDRefCodes
SELECT FK_Reference_SnomedCT_ID, ce.concept, ce.[version], ce.[description]
FROM [SharedCare].[Reference_Local_Code] rlc
INNER JOIN #codesemis ce on ce.code = rlc.LocalCode
WHERE FK_Reference_Coding_ID = -1
AND FK_Reference_SnomedCT_ID != -1;

-- De-duped tables
IF OBJECT_ID('tempdb..#CodeSets') IS NOT NULL DROP TABLE #CodeSets;
CREATE TABLE #CodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#SnomedSets') IS NOT NULL DROP TABLE #SnomedSets;
CREATE TABLE #SnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#VersionedCodeSets') IS NOT NULL DROP TABLE #VersionedCodeSets;
CREATE TABLE #VersionedCodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, Concept VARCHAR(255), [Version] INT, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#VersionedSnomedSets') IS NOT NULL DROP TABLE #VersionedSnomedSets;
CREATE TABLE #VersionedSnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, Concept VARCHAR(255), [Version] INT, [description] VARCHAR(255));

INSERT INTO #VersionedCodeSets
SELECT DISTINCT * FROM #TempRefCodes;

INSERT INTO #VersionedSnomedSets
SELECT DISTINCT * FROM #TempSNOMEDRefCodes;

INSERT INTO #CodeSets
SELECT FK_Reference_Coding_ID, c.concept, [description]
FROM #VersionedCodeSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM #VersionedCodeSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

INSERT INTO #SnomedSets
SELECT FK_Reference_SnomedCT_ID, c.concept, [description]
FROM #VersionedSnomedSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM #VersionedSnomedSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

--#endregion

-- >>> Following code sets injected: diabetes-type-ii v1/polycystic-ovarian-syndrome v1/gestational-diabetes v1
--┌─────┐
--│ Sex │
--└─────┘

-- OBJECTIVE: To get the Sex for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientSex (FK_Patient_Link_ID, Sex)
-- 	- FK_Patient_Link_ID - unique patient id
--	- Sex - M/F

-- ASSUMPTIONS:
--	- Patient data is obtained from multiple sources. Where patients have multiple sexes we determine the sex as follows:
--	-	If the patients has a sex in their primary care data feed we use that as most likely to be up to date
--	-	If every sex for a patient is the same, then we use that
--	-	If there is a single most recently updated sex in the database then we use that
--	-	Otherwise the patient's sex is considered unknown

-- Get all patients sex for the cohort
IF OBJECT_ID('tempdb..#AllPatientSexs') IS NOT NULL DROP TABLE #AllPatientSexs;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	Sex
INTO #AllPatientSexs
FROM SharedCare.Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND Sex IS NOT NULL;


-- If patients have a tenancy id of 2 we take this as their most likely Sex
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientSex') IS NOT NULL DROP TABLE #PatientSex;
SELECT FK_Patient_Link_ID, MIN(Sex) as Sex INTO #PatientSex FROM #AllPatientSexs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedSexPatients') IS NOT NULL DROP TABLE #UnmatchedSexPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedSexPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientSex;

-- If every Sex is the same for all their linked patient ids then we use that
INSERT INTO #PatientSex
SELECT FK_Patient_Link_ID, MIN(Sex) FROM #AllPatientSexs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedSexPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedSexPatients;
INSERT INTO #UnmatchedSexPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientSex;

-- If there is a unique most recent Sex then use that
INSERT INTO #PatientSex
SELECT p.FK_Patient_Link_ID, MIN(p.Sex) FROM #AllPatientSexs p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientSexs
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedSexPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Tidy up - helpful in ensuring the tempdb doesn't run out of space mid-query
DROP TABLE #AllPatientSexs;
DROP TABLE #UnmatchedSexPatients;
--┌───────────────┐
--│ Year of birth │
--└───────────────┘

-- OBJECTIVE: To get the year of birth for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientYearOfBirth (FK_Patient_Link_ID, YearOfBirth)
-- 	- FK_Patient_Link_ID - unique patient id
--	- YearOfBirth - INT

-- ASSUMPTIONS:
--	- Patient data is obtained from multiple sources. Where patients have multiple YOBs we determine the YOB as follows:
--	-	If the patients has a YOB in their primary care data feed we use that as most likely to be up to date
--	-	If every YOB for a patient is the same, then we use that
--	-	If there is a single most recently updated YOB in the database then we use that
--	-	Otherwise we take the highest YOB for the patient that is not in the future

-- Get all patients year of birth for the cohort
IF OBJECT_ID('tempdb..#AllPatientYearOfBirths') IS NOT NULL DROP TABLE #AllPatientYearOfBirths;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	YEAR(Dob) AS YearOfBirth
INTO #AllPatientYearOfBirths
FROM SharedCare.Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND Dob IS NOT NULL;


-- If patients have a tenancy id of 2 we take this as their most likely YOB
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientYearOfBirth') IS NOT NULL DROP TABLE #PatientYearOfBirth;
SELECT FK_Patient_Link_ID, MIN(YearOfBirth) as YearOfBirth INTO #PatientYearOfBirth FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedYobPatients') IS NOT NULL DROP TABLE #UnmatchedYobPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedYobPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- If every YOB is the same for all their linked patient ids then we use that
INSERT INTO #PatientYearOfBirth
SELECT FK_Patient_Link_ID, MIN(YearOfBirth) FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedYobPatients;
INSERT INTO #UnmatchedYobPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- If there is a unique most recent YOB then use that
INSERT INTO #PatientYearOfBirth
SELECT p.FK_Patient_Link_ID, MIN(p.YearOfBirth) FROM #AllPatientYearOfBirths p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientYearOfBirths
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedYobPatients;
INSERT INTO #UnmatchedYobPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- Otherwise just use the highest value (with the exception that can't be in the future)
INSERT INTO #PatientYearOfBirth
SELECT FK_Patient_Link_ID, MAX(YearOfBirth) FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
GROUP BY FK_Patient_Link_ID
HAVING MAX(YearOfBirth) <= YEAR(GETDATE());

-- Tidy up - helpful in ensuring the tempdb doesn't run out of space mid-query
DROP TABLE #AllPatientYearOfBirths;
DROP TABLE #UnmatchedYobPatients;

-- FIND PATIENTS WITH A DIAGNOSIS OF POLYCYSTIC OVARY SYNDROME OR GESTATIONAL DIABETES, TO EXCLUDE

IF OBJECT_ID('tempdb..#exclusions') IS NOT NULL DROP TABLE #exclusions;
SELECT DISTINCT gp.FK_Patient_Link_ID
INTO #exclusions
FROM [RLS].[vw_GP_Events] gp
WHERE SuppliedCode IN 
	(SELECT [Code] FROM #AllCodes WHERE [Concept] IN 
		('polycystic-ovarian-syndrome', 'gestational-diabetes') AND [Version] = 1)
			AND EventDate BETWEEN '2018-07-09' AND '2022-03-31'

-- CREATE TABLE OF ALL PATIENTS THAT HAVE ANY LIFETIME DIAGNOSES OF T2D AS OF 2019-07-09
-- THIS TABLE WILL BE JOINED TO IN FINAL TABLE TO PROVIDE ADDITIONAL DIABETES INFO FOR THE MYWAY PATIENTS
-- THIS TABLE WILL ALSO BE USED TO FIND CONTROL PATIENTS WHO HAVE T2D BUT DIDN'T HAVE INTERVENTION

IF OBJECT_ID('tempdb..#diabetes2_diagnoses') IS NOT NULL DROP TABLE #diabetes2_diagnoses;
SELECT gp.FK_Patient_Link_ID, 
	YearOfBirth, 
	Sex,
	EventDate
INTO #diabetes2_diagnoses
FROM [RLS].[vw_GP_Events] gp
LEFT OUTER JOIN #Patients p ON p.FK_Patient_Link_ID = gp.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientYearOfBirth yob ON yob.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientSex sex ON sex.FK_Patient_Link_ID = p.FK_Patient_Link_ID
WHERE (SuppliedCode IN (SELECT [Code] FROM #AllCodes WHERE [Concept] IN ('diabetes-type-ii') AND [Version] = 1)) AND 
	gp.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
    AND gp.FK_Patient_Link_ID NOT IN (SELECT FK_Patient_Link_ID FROM #exclusions)
	AND (gp.EventDate) <= @StartDate

-- Find earliest diagnosis of T2D for each patient

IF OBJECT_ID('tempdb..#EarliestDiagnosis_T2D') IS NOT NULL DROP TABLE #EarliestDiagnosis_T2D;
SELECT FK_Patient_Link_ID
	,EarliestDiagnosis_T2D = MIN(CAST(EventDate AS DATE))
INTO #EarliestDiagnosis_T2D
FROM #diabetes2_diagnoses
GROUP BY FK_Patient_Link_ID

-- DEFINE MAIN COHORT: PATIENTS IN THE MYWAY DATA

IF OBJECT_ID('tempdb..#MainCohort') IS NOT NULL DROP TABLE #MainCohort;
SELECT DISTINCT
	p.FK_Patient_Link_ID,
	YearOfBirth, 
	Sex,
	EthnicMainGroup
INTO #MainCohort
FROM #Patients p
LEFT OUTER JOIN #PatientYearOfBirth yob ON yob.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientSex sex ON sex.FK_Patient_Link_ID = p.FK_Patient_Link_ID
WHERE 
	p.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM MWDH.Live_Header) 		-- My Way Diabetes Patients
	AND p.FK_Patient_Link_ID NOT IN (SELECT FK_Patient_Link_ID FROM #exclusions)   -- Exclude pts with gestational diabetes
	AND YEAR(@StartDate) - yob.YearOfBirth >= 19									-- Over 18s only
	AND p.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientsToInclude) -- exclude new patients processed post-COPI notice


-- Define the population of potential matches for the cohort
IF OBJECT_ID('tempdb..#PotentialMatches') IS NOT NULL DROP TABLE #PotentialMatches;
SELECT DISTINCT FK_Patient_Link_ID, Sex, YearOfBirth
INTO #PotentialMatches
FROM #diabetes2_diagnoses
WHERE FK_Patient_Link_ID NOT IN (SELECT FK_Patient_Link_ID FROM #MainCohort)
AND FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientsToInclude) -- exclude new patients processed post-COPI notice


--┌────────────────────────────────────────────────────┐
--│ Cohort matching on year of birth / sex 					   │
--└────────────────────────────────────────────────────┘

-- OBJECTIVE: To take a primary cohort and find a 1:n matched cohort based on year of birth and sex.

-- INPUT: Takes two parameters
--  - yob-flex: integer - number of years each way that still allow a year of birth match
--  - num-matches: integer - number of matches for each patient in the cohort
-- Requires two temp tables to exist as follows:
-- #MainCohort (FK_Patient_Link_ID, Sex, YearOfBirth)
-- 	- FK_Patient_Link_ID - unique patient id
--	- Sex - M/F
--	- YearOfBirth - Integer
-- #PotentialMatches (FK_Patient_Link_ID, Sex, YearOfBirth)
-- 	- FK_Patient_Link_ID - unique patient id
--	- Sex - M/F
--	- YearOfBirth - Integer

-- OUTPUT: A temp table as follows:
-- #CohortStore (FK_Patient_Link_ID, YearOfBirth, Sex, MatchingPatientId, MatchingYearOfBirth)
--  - FK_Patient_Link_ID - unique patient id for primary cohort patient
--  - YearOfBirth - of the primary cohort patient
--  - Sex - of the primary cohort patient
--  - MatchingPatientId - id of the matched patient
--  - MatchingYearOfBirth - year of birth of the matched patient

-- TODO 
-- A few things to consider when doing matching:
--  - Consider removing "ghost patients" e.g. people without a primary care record
--  - Consider matching on practice. Patients in different locations might have different outcomes. Also
--    for primary care based diagnosing, practices might have different thoughts on severity, timing etc.
--  - For instances where lots of cases have no matches, consider allowing matching to occur with replacement.
--    I.e. a patient can match more than one person in the main cohort.

-- First we extend the #PrimaryCohort table to give each age-sex combo a unique number
-- and to avoid polluting the #MainCohort table
IF OBJECT_ID('tempdb..#Cases') IS NOT NULL DROP TABLE #Cases;
SELECT FK_Patient_Link_ID AS PatientId, YearOfBirth, Sex, Row_Number() OVER(PARTITION BY YearOfBirth, Sex ORDER BY FK_Patient_Link_ID) AS CaseRowNumber
INTO #Cases FROM #MainCohort;

-- Then we do the same with the #PotentialMatches
IF OBJECT_ID('tempdb..#Matches') IS NOT NULL DROP TABLE #Matches;
SELECT FK_Patient_Link_ID AS PatientId, YearOfBirth, Sex, Row_Number() OVER(PARTITION BY YearOfBirth, Sex ORDER BY FK_Patient_Link_ID) AS AssignedPersonNumber
INTO #Matches FROM #PotentialMatches;

-- Find the number of people with each characteristic in the main cohort
IF OBJECT_ID('tempdb..#CharacteristicCount') IS NOT NULL DROP TABLE #CharacteristicCount;
SELECT YearOfBirth, Sex, COUNT(*) AS [Count] INTO #CharacteristicCount FROM #Cases GROUP BY YearOfBirth, Sex;

-- Find the number of potential matches for each Age/Sex combination
-- The output of this is useful for seeing how many matches you can get
-- SELECT A.YearOfBirth, A.Sex, B.Count / A.Count AS NumberOfPotentialMatchesPerCohortPatient FROM (SELECT * FROM #CharacteristicCount) A LEFT OUTER JOIN (SELECT YearOfBirth, Sex, COUNT(*) AS [Count] FROM #Matches GROUP BY YearOfBirth, Sex) B ON B.YearOfBirth = A.YearOfBirth AND B.Sex = A.Sex ORDER BY NumberOfPotentialMatches,A.YearOfBirth,A.Sex;

-- The final table contains a row for each match, so e.g. if patient 1 has 4
-- matches then there will be 4 rows in the table for this.
IF OBJECT_ID('tempdb..#CohortStore') IS NOT NULL DROP TABLE #CohortStore;
CREATE TABLE #CohortStore(
  PatientId BIGINT, 
  YearOfBirth INT, 
  Sex nchar(1), 
  MatchingPatientId BIGINT,
  MatchingYearOfBirth INT
) ON [PRIMARY];

--1. First match try to match people exactly. We do this as follows:
--    - For each YOB/Sex combination we find all potential matches. E.g. all patients
--      in the potential matches with sex='F' and yob=1957
--    - We then try to assign a single match to all cohort members with sex='F' and yob=1957
--    - If there are still matches unused, we then assign a second match to all cohort members
--    - This continues until we either run out of matches, or successfully match everyone with
--      the desired number of matches.
DECLARE @Counter1 INT; 
SET @Counter1=1;
-- In this loop we find one match at a time for each patient in the cohort
WHILE ( @Counter1 <= 20)
BEGIN
  INSERT INTO #CohortStore
  SELECT c.PatientId, c.YearOfBirth, c.Sex, p.PatientId AS MatchedPatientId, c.YearOfBirth
  FROM #Cases c
    INNER JOIN #CharacteristicCount cc on cc.YearOfBirth = c.YearOfBirth and cc.Sex = c.Sex
    INNER JOIN #Matches p 
      ON p.Sex = c.Sex 
      AND p.YearOfBirth = c.YearOfBirth 
      -- This next line is the trick to only matching each person once
      AND p.AssignedPersonNumber = CaseRowNumber + (@counter1 - 1) * cc.[Count];

  -- We might not need this, but to be extra sure let's delete any patients who 
  -- we're already using to match people
  DELETE FROM #Matches WHERE PatientId IN (SELECT MatchingPatientId FROM #CohortStore);

  SET @Counter1  = @Counter1  + 1
END

--2. Now relax the yob restriction to get extra matches for people with no matches
DECLARE @LastRowInsert1 INT;
SET @LastRowInsert1=1;
WHILE ( @LastRowInsert1 > 0)
BEGIN
  INSERT INTO #CohortStore
  SELECT sub.PatientId, sub.YearOfBirth, sub.Sex, MatchedPatientId, MAX(m.YearOfBirth) FROM (
  SELECT c.PatientId, c.YearOfBirth, c.Sex, MAX(p.PatientId) AS MatchedPatientId, Row_Number() OVER(PARTITION BY MAX(p.PatientId) ORDER BY p.PatientId) AS AssignedPersonNumber
  FROM #Cases c
  INNER JOIN #Matches p 
    ON p.Sex = c.Sex 
    AND p.YearOfBirth >= c.YearOfBirth - 1
    AND p.YearOfBirth <= c.YearOfBirth + 1
  WHERE c.PatientId in (
    -- find patients who aren't currently matched
    select PatientId from #Cases except select PatientId from #CohortStore
  )
  GROUP BY c.PatientId, c.YearOfBirth, c.Sex, p.PatientId) sub
  INNER JOIN #Matches m 
    ON m.Sex = sub.Sex 
    AND m.PatientId = sub.MatchedPatientId
    AND m.YearOfBirth >= sub.YearOfBirth - 1
    AND m.YearOfBirth <= sub.YearOfBirth + 1
  WHERE sub.AssignedPersonNumber = 1
  GROUP BY sub.PatientId, sub.YearOfBirth, sub.Sex, MatchedPatientId;
  SELECT @LastRowInsert1=@@ROWCOUNT;

  DELETE FROM #Matches WHERE PatientId IN (SELECT MatchingPatientId FROM #CohortStore);
END

--3. Now relax the yob restriction to get extra matches for people with only 1, 2, 3, ... n-1 matches
DECLARE @Counter2 INT; 
SET @Counter2=1;
WHILE (@Counter2 < 20)
BEGIN
  DECLARE @LastRowInsert INT;
  SET @LastRowInsert=1;
  WHILE ( @LastRowInsert > 0)
  BEGIN

    IF OBJECT_ID('tempdb..#CohortPatientForEachMatchingPatient') IS NOT NULL DROP TABLE #CohortPatientForEachMatchingPatient;
    SELECT p.PatientId AS MatchedPatientId, c.PatientId, Row_Number() OVER(PARTITION BY p.PatientId ORDER BY p.PatientId) AS MatchedPatientNumber
    INTO #CohortPatientForEachMatchingPatient
    FROM #Matches p
    INNER JOIN #Cases c
      ON p.Sex = c.Sex 
      AND p.YearOfBirth >= c.YearOfBirth - 1
      AND p.YearOfBirth <= c.YearOfBirth + 1
    WHERE c.PatientId IN (
      -- find patients who only have @Counter2 matches
      SELECT PatientId FROM #CohortStore GROUP BY PatientId HAVING count(*) = @Counter2
    );

    IF OBJECT_ID('tempdb..#CohortPatientForEachMatchingPatientWithCohortNumbered') IS NOT NULL DROP TABLE #CohortPatientForEachMatchingPatientWithCohortNumbered;
    SELECT PatientId, MatchedPatientId, Row_Number() OVER(PARTITION BY PatientId ORDER BY MatchedPatientId) AS PatientNumber
    INTO #CohortPatientForEachMatchingPatientWithCohortNumbered
    FROM #CohortPatientForEachMatchingPatient
    WHERE MatchedPatientNumber = 1;

    INSERT INTO #CohortStore
    SELECT s.PatientId, c.YearOfBirth, c.Sex, MatchedPatientId, m.YearOfBirth FROM #CohortPatientForEachMatchingPatientWithCohortNumbered s
    LEFT OUTER JOIN #Cases c ON c.PatientId = s.PatientId
    LEFT OUTER JOIN #Matches m ON m.PatientId = MatchedPatientId
    WHERE PatientNumber = 1;

    SELECT @LastRowInsert=@@ROWCOUNT;

    DELETE FROM #Matches WHERE PatientId IN (SELECT MatchingPatientId FROM #CohortStore);
  END
  
  SET @Counter2  = @Counter2  + 1
END


-- Get the matched cohort detail - same as main cohort
IF OBJECT_ID('tempdb..#MatchedCohort') IS NOT NULL DROP TABLE #MatchedCohort;
SELECT 
  c.MatchingPatientId AS FK_Patient_Link_ID,
  Sex,
  MatchingYearOfBirth,
  EthnicMainGroup,
  PatientId AS PatientWhoIsMatched
INTO #MatchedCohort
FROM #CohortStore c
LEFT OUTER JOIN #Patients p ON p.FK_Patient_Link_ID = c.MatchingPatientId

-- Define a table with all the patient ids for the main cohort and the matched cohort
IF OBJECT_ID('tempdb..#PatientIds') IS NOT NULL DROP TABLE #PatientIds;
SELECT PatientId AS FK_Patient_Link_ID INTO #PatientIds FROM #CohortStore
UNION
SELECT MatchingPatientId FROM #CohortStore;


-- CREATE TABLE OF ALL GP EVENTS FOR MAIN AND MATCHED COHORTS - TO SPEED UP FUTURE QUERIES

IF OBJECT_ID('tempdb..#PatientEventData') IS NOT NULL DROP TABLE #PatientEventData;
SELECT 
  FK_Patient_Link_ID,
  CAST(EventDate AS DATE) AS EventDate,
  SuppliedCode,
  FK_Reference_SnomedCT_ID,
  FK_Reference_Coding_ID,
  [Value],
  [Units]
INTO #PatientEventData
FROM [RLS].vw_GP_Events
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientIds)
		AND FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientsToInclude) -- exclude new patients processed post-COPI notice

--Outputs from this reusable query:
-- #MainCohort
-- #MatchedCohort
-- #PatientEventData

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------

-- >>> Following code sets injected: diabetes-clinic v1/mental-health-service-referral v1

-- Get observation values for the main and matched cohort
IF OBJECT_ID('tempdb..#codes') IS NOT NULL DROP TABLE #codes;
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	Concept = CASE WHEN sn.Concept IS NOT NULL THEN sn.Concept ELSE co.Concept END
INTO #codes
FROM RLS.vw_GP_Events gp
LEFT JOIN #VersionedSnomedSets sn ON sn.FK_Reference_SnomedCT_ID = gp.FK_Reference_SnomedCT_ID
LEFT JOIN #VersionedCodeSets co ON co.FK_Reference_Coding_ID = gp.FK_Reference_Coding_ID
WHERE 
	(gp.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #MainCohort) 
		OR gp.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #MatchedCohort))
AND sn.Concept IN ('diabetes-clinic', 'mental-health-service-referral')
AND co.Concept IN ('diabetes-clinic', 'mental-health-service-referral')
AND EventDate BETWEEN '2016-04-01' AND @EndDate

-- DEDUPLICATE CODES TABLE

IF OBJECT_ID('tempdb..#codes_deduped') IS NOT NULL DROP TABLE #codes_deduped;
SELECT DISTINCT * 
INTO #codes_deduped 
FROM #codes

-- BRING TOGETHER FOR FINAL OUTPUT

SELECT	 
	PatientId = m.FK_Patient_Link_ID
	,MainCohortMatchedPatientId = NULL
	,EventDate
	,Concept
FROM #MainCohort m
INNER JOIN #codes_deduped o ON o.FK_Patient_Link_ID = m.FK_Patient_Link_ID 
 UNION
-- patients in matched cohort
SELECT	 
	PatientId = m.FK_Patient_Link_ID
	,MainCohortMatchedPatientId = m.PatientWhoIsMatched
	,EventDate
	,Concept
FROM #MatchedCohort m
INNER JOIN #codes_deduped o ON o.FK_Patient_Link_ID = m.FK_Patient_Link_ID
