--┌─────────────────────────────────────────────────────┐
--│ Patient information for those at risk of CKD        │
--└─────────────────────────────────────────────────────┘

------------ RESEARCH DATA ENGINEER CHECK ------------

------------------------------------------------------

-- PatientID
-- Year of birth (YYYY-MM)
-- Practice exit date (moved out of GM date) (YYYY-MM-DD)
-- Month and year of death (YYYY-MM)
-- Sex at birth (male/female)
-- Ethnicity (white/black/asian/mixed/other)
-- CCG of registered GP practice
-- Alcohol intake
-- Smoking status
-- BMI (closest to 2020-03-01)
-- BMI date
-- LSOA Code
-- IMD decile
-- First vaccination date (YYYY-MM or N/A)
-- Second vaccination date (YYYY-MM or N/A)
-- Third vaccination date (YYYY-MM or N/A)
-- Death within 28 days of Covid Diagnosis (Y/N)
-- Date of death due to Covid-19 (YYYY-MM or N/A)
-- Number of AE Episodes before 01.03.20
-- Number of AE Episodes after 01.03.20
-- Total AE Episodes (01.03.18 - 01.03.22)
-- Number of GP appointments before 01.03.20
-- Number of GP appointments after 01.03.20
-- Total GP appointments (01.03.18 - 01.03.22)
-- evidenceOfCKD_egfr (1/0)
-- evidenceOfCKD_acr (1/0)
-- atRiskOfCKD (1/0)
-- HypertensionAtStudyStart
-- HypertensionDuringStudyPeriod
-- DiabetesAtStudyStart
-- DiabetesDuringStudyPeriod

-- Set the start date
DECLARE @StartDate datetime;
DECLARE @EndDate datetime;
SET @StartDate = '2018-03-01';
SET @EndDate = '2022-03-01';

DECLARE @IndexDate datetime;
SET @IndexDate = '2020-03-01';

--Just want the output, not the messages
SET NOCOUNT ON;

-- Find all patients alive at start date
IF OBJECT_ID('tempdb..#PossiblePatients') IS NOT NULL DROP TABLE #PossiblePatients;
SELECT PK_Patient_Link_ID as FK_Patient_Link_ID, EthnicMainGroup, DeathDate INTO #PossiblePatients FROM [RLS].vw_Patient_Link
WHERE (DeathDate IS NULL OR DeathDate >= @StartDate);

-- Find all patients registered with a GP
IF OBJECT_ID('tempdb..#PatientsWithGP') IS NOT NULL DROP TABLE #PatientsWithGP;
SELECT DISTINCT FK_Patient_Link_ID INTO #PatientsWithGP FROM [RLS].vw_Patient
where FK_Reference_Tenancy_ID = 2;

-- Make cohort from patients alive at start date and registered with a GP
IF OBJECT_ID('tempdb..#Patients') IS NOT NULL DROP TABLE #Patients;
SELECT pp.* INTO #Patients FROM #PossiblePatients pp
INNER JOIN #PatientsWithGP gp on gp.FK_Patient_Link_ID = pp.FK_Patient_Link_ID;

--------------------------------------------------------------------------------------------------------
----------------------------------- DEFINE MAIN COHORT -----------------------------------------------
--------------------------------------------------------------------------------------------------------
-- COHORT WILL BE ANY PATIENT AT RISK OF CKD (HAS HYPERTENSION OR DIABETES)


-- LOAD CODESETS NEEDED FOR DEFINING COHORT

-- >>> Codesets required... Inserting the code set code
--
--┌────────────────────┐
--│ Clinical code sets │
--└────────────────────┘

-- OBJECTIVE: To populate temporary tables with the existing clinical code sets.
--            See the [SQL-generation-process.md](SQL-generation-process.md) for more details.

-- INPUT: No pre-requisites

-- OUTPUT: Five temp tables as follows:
--  #AllCodes (Concept, Version, Code)
--  #CodeSets (FK_Reference_Coding_ID, Concept)
--  #SnomedSets (FK_Reference_SnomedCT_ID, FK_SNOMED_ID)
--  #VersionedCodeSets (FK_Reference_Coding_ID, Concept, Version)
--  #VersionedSnomedSets (FK_Reference_SnomedCT_ID, Version, FK_SNOMED_ID)

--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
--!!! DO NOT EDIT THIS FILE MANUALLY !!!
--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

IF OBJECT_ID('tempdb..#AllCodes') IS NOT NULL DROP TABLE #AllCodes;
CREATE TABLE #AllCodes (
  [Concept] [varchar](255) NOT NULL,
  [Version] INT NOT NULL,
  [Code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
  [description] [varchar] (255) NULL 
);

IF OBJECT_ID('tempdb..#codesreadv2') IS NOT NULL DROP TABLE #codesreadv2;
CREATE TABLE #codesreadv2 (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesreadv2
VALUES ('diabetes',1,'C10..',NULL,'Diabetes mellitus'),('diabetes',1,'C10..00',NULL,'Diabetes mellitus'),('diabetes',1,'C100.',NULL,'Diabetes mellitus with no mention of complication'),('diabetes',1,'C100.00',NULL,'Diabetes mellitus with no mention of complication'),('diabetes',1,'C1000',NULL,'Diabetes mellitus, juvenile type, with no mention of complication'),('diabetes',1,'C100000',NULL,'Diabetes mellitus, juvenile type, with no mention of complication'),('diabetes',1,'C1001',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),('diabetes',1,'C100100',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),('diabetes',1,'C100z',NULL,'Diabetes mellitus NOS with no mention of complication'),('diabetes',1,'C100z00',NULL,'Diabetes mellitus NOS with no mention of complication'),('diabetes',1,'C101.',NULL,'Diabetes mellitus with ketoacidosis'),('diabetes',1,'C101.00',NULL,'Diabetes mellitus with ketoacidosis'),('diabetes',1,'C1010',NULL,'Diabetes mellitus, juvenile type, with ketoacidosis'),('diabetes',1,'C101000',NULL,'Diabetes mellitus, juvenile type, with ketoacidosis'),('diabetes',1,'C1011',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes',1,'C101100',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes',1,'C101y',NULL,'Other specified diabetes mellitus with ketoacidosis'),('diabetes',1,'C101y00',NULL,'Other specified diabetes mellitus with ketoacidosis'),('diabetes',1,'C101z',NULL,'Diabetes mellitus NOS with ketoacidosis'),('diabetes',1,'C101z00',NULL,'Diabetes mellitus NOS with ketoacidosis'),('diabetes',1,'C102.',NULL,'Diabetes mellitus with hyperosmolar coma'),('diabetes',1,'C102.00',NULL,'Diabetes mellitus with hyperosmolar coma'),('diabetes',1,'C1020',NULL,'Diabetes mellitus, juvenile type, with hyperosmolar coma'),('diabetes',1,'C102000',NULL,'Diabetes mellitus, juvenile type, with hyperosmolar coma'),('diabetes',1,'C1021',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes',1,'C102100',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes',1,'C102z',NULL,'Diabetes mellitus NOS with hyperosmolar coma'),('diabetes',1,'C102z00',NULL,'Diabetes mellitus NOS with hyperosmolar coma'),('diabetes',1,'C103.',NULL,'Diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C103.00',NULL,'Diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C1030',NULL,'Diabetes mellitus, juvenile type, with ketoacidotic coma'),('diabetes',1,'C103000',NULL,'Diabetes mellitus, juvenile type, with ketoacidotic coma'),('diabetes',1,'C1031',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes',1,'C103100',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes',1,'C103y',NULL,'Other specified diabetes mellitus with coma'),('diabetes',1,'C103y00',NULL,'Other specified diabetes mellitus with coma'),('diabetes',1,'C103z',NULL,'Diabetes mellitus NOS with ketoacidotic coma'),('diabetes',1,'C103z00',NULL,'Diabetes mellitus NOS with ketoacidotic coma'),('diabetes',1,'C104.',NULL,'Diabetes mellitus with renal manifestation'),('diabetes',1,'C104.00',NULL,'Diabetes mellitus with renal manifestation'),('diabetes',1,'C1040',NULL,'Diabetes mellitus, juvenile type, with renal manifestation'),('diabetes',1,'C104000',NULL,'Diabetes mellitus, juvenile type, with renal manifestation'),('diabetes',1,'C1041',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes',1,'C104100',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes',1,'C104y',NULL,'Other specified diabetes mellitus with renal complications'),('diabetes',1,'C104y00',NULL,'Other specified diabetes mellitus with renal complications'),('diabetes',1,'C104z',NULL,'Diabetes mellitus with nephropathy NOS'),('diabetes',1,'C104z00',NULL,'Diabetes mellitus with nephropathy NOS'),('diabetes',1,'C105.',NULL,'Diabetes mellitus with ophthalmic manifestation'),('diabetes',1,'C105.00',NULL,'Diabetes mellitus with ophthalmic manifestation'),('diabetes',1,'C1050',NULL,'Diabetes mellitus, juvenile type, with ophthalmic manifestation'),('diabetes',1,'C105000',NULL,'Diabetes mellitus, juvenile type, with ophthalmic manifestation'),('diabetes',1,'C1051',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes',1,'C105100',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes',1,'C105y',NULL,'Other specified diabetes mellitus with ophthalmic complications'),('diabetes',1,'C105y00',NULL,'Other specified diabetes mellitus with ophthalmic complications'),('diabetes',1,'C105z',NULL,'Diabetes mellitus NOS with ophthalmic manifestation'),('diabetes',1,'C105z00',NULL,'Diabetes mellitus NOS with ophthalmic manifestation'),('diabetes',1,'C106.',NULL,'Diabetes mellitus with neurological manifestation'),('diabetes',1,'C106.00',NULL,'Diabetes mellitus with neurological manifestation'),('diabetes',1,'C1060',NULL,'Diabetes mellitus, juvenile type, with neurological manifestation'),('diabetes',1,'C106000',NULL,'Diabetes mellitus, juvenile type, with neurological manifestation'),('diabetes',1,'C1061',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes',1,'C106100',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes',1,'C106y',NULL,'Other specified diabetes mellitus with neurological complications'),('diabetes',1,'C106y00',NULL,'Other specified diabetes mellitus with neurological complications'),('diabetes',1,'C106z',NULL,'Diabetes mellitus NOS with neurological manifestation'),('diabetes',1,'C106z00',NULL,'Diabetes mellitus NOS with neurological manifestation'),('diabetes',1,'C107.',NULL,'Diabetes mellitus with peripheral circulatory disorder'),('diabetes',1,'C107.00',NULL,'Diabetes mellitus with peripheral circulatory disorder'),('diabetes',1,'C1070',NULL,'Diabetes mellitus, juvenile type, with peripheral circulatory disorder'),('diabetes',1,'C107000',NULL,'Diabetes mellitus, juvenile type, with peripheral circulatory disorder'),('diabetes',1,'C1071',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes',1,'C107100',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes',1,'C1072',NULL,'Diabetes mellitus, adult with gangrene'),('diabetes',1,'C107200',NULL,'Diabetes mellitus, adult with gangrene'),('diabetes',1,'C107y',NULL,'Other specified diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C107y00',NULL,'Other specified diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C107z',NULL,'Diabetes mellitus NOS with peripheral circulatory disorder'),('diabetes',1,'C107z00',NULL,'Diabetes mellitus NOS with peripheral circulatory disorder'),('diabetes',1,'C108.',NULL,'Insulin dependent diabetes mellitus'),('diabetes',1,'C108.00',NULL,'Insulin dependent diabetes mellitus'),('diabetes',1,'C1080',NULL,'Insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C108000',NULL,'Insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C1081',NULL,'Insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C108100',NULL,'Insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C1082',NULL,'Insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C108200',NULL,'Insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C1083',NULL,'Insulin dependent diabetes mellitus with multiple complications'),('diabetes',1,'C108300',NULL,'Insulin dependent diabetes mellitus with multiple complications'),('diabetes',1,'C1084',NULL,'Unstable insulin dependent diabetes mellitus'),('diabetes',1,'C108400',NULL,'Unstable insulin dependent diabetes mellitus'),('diabetes',1,'C1085',NULL,'Insulin dependent diabetes mellitus with ulcer'),('diabetes',1,'C108500',NULL,'Insulin dependent diabetes mellitus with ulcer'),('diabetes',1,'C1086',NULL,'Insulin dependent diabetes mellitus with gangrene'),('diabetes',1,'C108600',NULL,'Insulin dependent diabetes mellitus with gangrene'),('diabetes',1,'C1087',NULL,'Insulin dependent diabetes mellitus with retinopathy'),('diabetes',1,'C108700',NULL,'Insulin dependent diabetes mellitus with retinopathy'),('diabetes',1,'C1088',NULL,'Insulin dependent diabetes mellitus - poor control'),('diabetes',1,'C108800',NULL,'Insulin dependent diabetes mellitus - poor control'),('diabetes',1,'C1089',NULL,'Insulin dependent diabetes maturity onset'),('diabetes',1,'C108900',NULL,'Insulin dependent diabetes maturity onset'),('diabetes',1,'C108A',NULL,'Insulin-dependent diabetes without complication'),('diabetes',1,'C108A00',NULL,'Insulin-dependent diabetes without complication'),('diabetes',1,'C108B',NULL,'Insulin dependent diabetes mellitus with mononeuropathy'),('diabetes',1,'C108B00',NULL,'Insulin dependent diabetes mellitus with mononeuropathy'),('diabetes',1,'C108C',NULL,'Insulin dependent diabetes mellitus with polyneuropathy'),('diabetes',1,'C108C00',NULL,'Insulin dependent diabetes mellitus with polyneuropathy'),('diabetes',1,'C108D',NULL,'Insulin dependent diabetes mellitus with nephropathy'),('diabetes',1,'C108D00',NULL,'Insulin dependent diabetes mellitus with nephropathy'),('diabetes',1,'C108E',NULL,'Insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C108E00',NULL,'Insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C108F',NULL,'Insulin dependent diabetes mellitus with diabetic cataract'),('diabetes',1,'C108F00',NULL,'Insulin dependent diabetes mellitus with diabetic cataract'),('diabetes',1,'C108G',NULL,'Insulin dependent diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C108G00',NULL,'Insulin dependent diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C108H',NULL,'Insulin dependent diabetes mellitus with arthropathy'),
('diabetes',1,'C108H00',NULL,'Insulin dependent diabetes mellitus with arthropathy'),('diabetes',1,'C108J',NULL,'Insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C108J00',NULL,'Insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C108y',NULL,'Other specified diabetes mellitus with multiple complications'),('diabetes',1,'C108y00',NULL,'Other specified diabetes mellitus with multiple complications'),('diabetes',1,'C108z',NULL,'Unspecified diabetes mellitus with multiple complications'),('diabetes',1,'C108z00',NULL,'Unspecified diabetes mellitus with multiple complications'),('diabetes',1,'C109.',NULL,'Non-insulin dependent diabetes mellitus'),('diabetes',1,'C109.00',NULL,'Non-insulin dependent diabetes mellitus'),('diabetes',1,'C1090',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C109000',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C1091',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C109100',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C1092',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C109200',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C1093',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes',1,'C109300',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes',1,'C1094',NULL,'Non-insulin dependent diabetes mellitus with ulcer'),('diabetes',1,'C109400',NULL,'Non-insulin dependent diabetes mellitus with ulcer'),('diabetes',1,'C1095',NULL,'Non-insulin dependent diabetes mellitus with gangrene'),('diabetes',1,'C109500',NULL,'Non-insulin dependent diabetes mellitus with gangrene'),('diabetes',1,'C1096',NULL,'Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes',1,'C109600',NULL,'Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes',1,'C1097',NULL,'Non-insulin dependent diabetes mellitus - poor control'),('diabetes',1,'C109700',NULL,'Non-insulin dependent diabetes mellitus - poor control'),('diabetes',1,'C1098',NULL,'Reavens syndrome'),('diabetes',1,'C109800',NULL,'Reavens syndrome'),('diabetes',1,'C1099',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes',1,'C109900',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes',1,'C109A',NULL,'Non-insulin dependent diabetes mellitus with mononeuropathy'),('diabetes',1,'C109A00',NULL,'Non-insulin dependent diabetes mellitus with mononeuropathy'),('diabetes',1,'C109B',NULL,'Non-insulin dependent diabetes mellitus with polyneuropathy'),('diabetes',1,'C109B00',NULL,'Non-insulin dependent diabetes mellitus with polyneuropathy'),('diabetes',1,'C109C',NULL,'Non-insulin dependent diabetes mellitus with nephropathy'),('diabetes',1,'C109C00',NULL,'Non-insulin dependent diabetes mellitus with nephropathy'),('diabetes',1,'C109D',NULL,'Non-insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C109D00',NULL,'Non-insulin dependent diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C109E',NULL,'Non-insulin dependent diabetes mellitus with diabetic cataract'),('diabetes',1,'C109E00',NULL,'Non-insulin dependent diabetes mellitus with diabetic cataract'),('diabetes',1,'C109F',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C109F00',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C109G',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes',1,'C109G00',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes',1,'C109H',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C109H00',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C109J',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes',1,'C109J00',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes',1,'C109K',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes',1,'C109K00',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes',1,'C10A.',NULL,'Malnutrition-related diabetes mellitus'),('diabetes',1,'C10A.00',NULL,'Malnutrition-related diabetes mellitus'),('diabetes',1,'C10A0',NULL,'Malnutrition-related diabetes mellitus with coma'),('diabetes',1,'C10A000',NULL,'Malnutrition-related diabetes mellitus with coma'),('diabetes',1,'C10A1',NULL,'Malnutrition-related diabetes mellitus with ketoacidosis'),('diabetes',1,'C10A100',NULL,'Malnutrition-related diabetes mellitus with ketoacidosis'),('diabetes',1,'C10A2',NULL,'Malnutrition-related diabetes mellitus with renal complications'),('diabetes',1,'C10A200',NULL,'Malnutrition-related diabetes mellitus with renal complications'),('diabetes',1,'C10A3',NULL,'Malnutrition-related diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10A300',NULL,'Malnutrition-related diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10A4',NULL,'Malnutrition-related diabetes mellitus with neurological complications'),('diabetes',1,'C10A400',NULL,'Malnutrition-related diabetes mellitus with neurological complications'),('diabetes',1,'C10A5',NULL,'Malnutrition-related diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C10A500',NULL,'Malnutrition-related diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C10A6',NULL,'Malnutrition-related diabetes mellitus with multiple complications'),('diabetes',1,'C10A600',NULL,'Malnutrition-related diabetes mellitus with multiple complications'),('diabetes',1,'C10A7',NULL,'Malnutrition-related diabetes mellitus without complications'),('diabetes',1,'C10A700',NULL,'Malnutrition-related diabetes mellitus without complications'),('diabetes',1,'C10AW',NULL,'Malnutrition-related diabetes mellitus with unspecified complications'),('diabetes',1,'C10AW00',NULL,'Malnutrition-related diabetes mellitus with unspecified complications'),('diabetes',1,'C10AX',NULL,'Malnutrition-related diabetes mellitus with other specified complications'),('diabetes',1,'C10AX00',NULL,'Malnutrition-related diabetes mellitus with other specified complications'),('diabetes',1,'C10B.',NULL,'Diabetes mellitus induced by steroids'),('diabetes',1,'C10B.00',NULL,'Diabetes mellitus induced by steroids'),('diabetes',1,'C10B0',NULL,'Steroid induced diabetes mellitus without complication'),('diabetes',1,'C10B000',NULL,'Steroid induced diabetes mellitus without complication'),('diabetes',1,'C10C.',NULL,'Diabetes mellitus autosomal dominant'),('diabetes',1,'C10C.00',NULL,'Diabetes mellitus autosomal dominant'),('diabetes',1,'C10D.',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes',1,'C10D.00',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes',1,'C10E.',NULL,'Type 1 diabetes mellitus'),('diabetes',1,'C10E.00',NULL,'Type 1 diabetes mellitus'),('diabetes',1,'C10E0',NULL,'Type 1 diabetes mellitus with renal complications'),('diabetes',1,'C10E000',NULL,'Type 1 diabetes mellitus with renal complications'),('diabetes',1,'C10E1',NULL,'Type 1 diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10E100',NULL,'Type 1 diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10E2',NULL,'Type 1 diabetes mellitus with neurological complications'),('diabetes',1,'C10E200',NULL,'Type 1 diabetes mellitus with neurological complications'),('diabetes',1,'C10E3',NULL,'Type 1 diabetes mellitus with multiple complications'),('diabetes',1,'C10E300',NULL,'Type 1 diabetes mellitus with multiple complications'),('diabetes',1,'C10E4',NULL,'Unstable type 1 diabetes mellitus'),('diabetes',1,'C10E400',NULL,'Unstable type 1 diabetes mellitus'),('diabetes',1,'C10E5',NULL,'Type 1 diabetes mellitus with ulcer'),('diabetes',1,'C10E500',NULL,'Type 1 diabetes mellitus with ulcer'),('diabetes',1,'C10E6',NULL,'Type 1 diabetes mellitus with gangrene'),('diabetes',1,'C10E600',NULL,'Type 1 diabetes mellitus with gangrene'),('diabetes',1,'C10E7',NULL,'Type 1 diabetes mellitus with retinopathy'),('diabetes',1,'C10E700',NULL,'Type 1 diabetes mellitus with retinopathy'),('diabetes',1,'C10E8',NULL,'Type 1 diabetes mellitus - poor control'),('diabetes',1,'C10E800',NULL,'Type 1 diabetes mellitus - poor control'),('diabetes',1,'C10E9',NULL,'Type 1 diabetes mellitus maturity onset'),('diabetes',1,'C10E900',NULL,'Type 1 diabetes mellitus maturity onset'),('diabetes',1,'C10EA',NULL,'Type 1 diabetes mellitus without complication'),('diabetes',1,'C10EA00',NULL,'Type 1 diabetes mellitus without complication'),('diabetes',1,'C10EB',NULL,'Type 1 diabetes mellitus with mononeuropathy'),('diabetes',1,'C10EB00',NULL,'Type 1 diabetes mellitus with mononeuropathy'),('diabetes',1,'C10EC',NULL,'Type 1 diabetes mellitus with polyneuropathy'),('diabetes',1,'C10EC00',NULL,'Type 1 diabetes mellitus with polyneuropathy'),('diabetes',1,'C10ED',NULL,'Type 1 diabetes mellitus with nephropathy'),('diabetes',1,'C10ED00',NULL,'Type 1 diabetes mellitus with nephropathy'),('diabetes',1,'C10EE',NULL,'Type 1 diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C10EE00',NULL,'Type 1 diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C10EF',NULL,'Type 1 diabetes mellitus with diabetic cataract'),('diabetes',1,'C10EF00',NULL,'Type 1 diabetes mellitus with diabetic cataract'),('diabetes',1,'C10EG',NULL,'Type 1 diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C10EG00',NULL,'Type 1 diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C10EH',NULL,'Type 1 diabetes mellitus with arthropathy'),('diabetes',1,'C10EH00',NULL,'Type 1 diabetes mellitus with arthropathy'),('diabetes',1,'C10EJ',NULL,'Type 1 diabetes mellitus with neuropathic arthropathy'),
('diabetes',1,'C10EJ00',NULL,'Type 1 diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C10EK',NULL,'Type 1 diabetes mellitus with persistent proteinuria'),('diabetes',1,'C10EK00',NULL,'Type 1 diabetes mellitus with persistent proteinuria'),('diabetes',1,'C10EL',NULL,'Type 1 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'C10EL00',NULL,'Type 1 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'C10EM',NULL,'Type 1 diabetes mellitus with ketoacidosis'),('diabetes',1,'C10EM00',NULL,'Type 1 diabetes mellitus with ketoacidosis'),('diabetes',1,'C10EN',NULL,'Type 1 diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C10EN00',NULL,'Type 1 diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C10EP',NULL,'Type 1 diabetes mellitus with exudative maculopathy'),('diabetes',1,'C10EP00',NULL,'Type 1 diabetes mellitus with exudative maculopathy'),('diabetes',1,'C10EQ',NULL,'Type 1 diabetes mellitus with gastroparesis'),('diabetes',1,'C10EQ00',NULL,'Type 1 diabetes mellitus with gastroparesis'),('diabetes',1,'C10ER',NULL,'Latent autoimmune diabetes mellitus in adult'),('diabetes',1,'C10ER00',NULL,'Latent autoimmune diabetes mellitus in adult'),('diabetes',1,'C10F.',NULL,'Type 2 diabetes mellitus'),('diabetes',1,'C10F.00',NULL,'Type 2 diabetes mellitus'),('diabetes',1,'C10F0',NULL,'Type 2 diabetes mellitus with renal complications'),('diabetes',1,'C10F000',NULL,'Type 2 diabetes mellitus with renal complications'),('diabetes',1,'C10F1',NULL,'Type 2 diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10F100',NULL,'Type 2 diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10F2',NULL,'Type 2 diabetes mellitus with neurological complications'),('diabetes',1,'C10F200',NULL,'Type 2 diabetes mellitus with neurological complications'),('diabetes',1,'C10F3',NULL,'Type 2 diabetes mellitus with multiple complications'),('diabetes',1,'C10F300',NULL,'Type 2 diabetes mellitus with multiple complications'),('diabetes',1,'C10F4',NULL,'Type 2 diabetes mellitus with ulcer'),('diabetes',1,'C10F400',NULL,'Type 2 diabetes mellitus with ulcer'),('diabetes',1,'C10F5',NULL,'Type 2 diabetes mellitus with gangrene'),('diabetes',1,'C10F500',NULL,'Type 2 diabetes mellitus with gangrene'),('diabetes',1,'C10F6',NULL,'Type 2 diabetes mellitus with retinopathy'),('diabetes',1,'C10F600',NULL,'Type 2 diabetes mellitus with retinopathy'),('diabetes',1,'C10F7',NULL,'Type 2 diabetes mellitus - poor control'),('diabetes',1,'C10F700',NULL,'Type 2 diabetes mellitus - poor control'),('diabetes',1,'C10F8',NULL,'Reavens syndrome'),('diabetes',1,'C10F800',NULL,'Reavens syndrome'),('diabetes',1,'C10F9',NULL,'Type 2 diabetes mellitus without complication'),('diabetes',1,'C10F900',NULL,'Type 2 diabetes mellitus without complication'),('diabetes',1,'C10FA',NULL,'Type 2 diabetes mellitus with mononeuropathy'),('diabetes',1,'C10FA00',NULL,'Type 2 diabetes mellitus with mononeuropathy'),('diabetes',1,'C10FB',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes',1,'C10FB00',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes',1,'C10FC',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes',1,'C10FC00',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes',1,'C10FD',NULL,'Type 2 diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C10FD00',NULL,'Type 2 diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'C10FE',NULL,'Type 2 diabetes mellitus with diabetic cataract'),('diabetes',1,'C10FE00',NULL,'Type 2 diabetes mellitus with diabetic cataract'),('diabetes',1,'C10FF',NULL,'Type 2 diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C10FF00',NULL,'Type 2 diabetes mellitus with peripheral angiopathy'),('diabetes',1,'C10FG',NULL,'Type 2 diabetes mellitus with arthropathy'),('diabetes',1,'C10FG00',NULL,'Type 2 diabetes mellitus with arthropathy'),('diabetes',1,'C10FH',NULL,'Type 2 diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C10FH00',NULL,'Type 2 diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'C10FJ',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes',1,'C10FJ00',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes',1,'C10FK',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes',1,'C10FK00',NULL,'Hyperosmolar non-ketotic state in type 2 diabetes mellitus'),('diabetes',1,'C10FL',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes',1,'C10FL00',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes',1,'C10FM',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'C10FM00',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'C10FN',NULL,'Type 2 diabetes mellitus with ketoacidosis'),('diabetes',1,'C10FN00',NULL,'Type 2 diabetes mellitus with ketoacidosis'),('diabetes',1,'C10FP',NULL,'Type 2 diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C10FP00',NULL,'Type 2 diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C10FQ',NULL,'Type 2 diabetes mellitus with exudative maculopathy'),('diabetes',1,'C10FQ00',NULL,'Type 2 diabetes mellitus with exudative maculopathy'),('diabetes',1,'C10FR',NULL,'Type 2 diabetes mellitus with gastroparesis'),('diabetes',1,'C10FR00',NULL,'Type 2 diabetes mellitus with gastroparesis'),('diabetes',1,'C10FS',NULL,'Maternally inherited diabetes mellitus'),('diabetes',1,'C10FS00',NULL,'Maternally inherited diabetes mellitus'),('diabetes',1,'C10G.',NULL,'Secondary pancreatic diabetes mellitus'),('diabetes',1,'C10G.00',NULL,'Secondary pancreatic diabetes mellitus'),('diabetes',1,'C10G0',NULL,'Secondary pancreatic diabetes mellitus without complication'),('diabetes',1,'C10G000',NULL,'Secondary pancreatic diabetes mellitus without complication'),('diabetes',1,'C10H.',NULL,'Diabetes mellitus induced by non-steroid drugs'),('diabetes',1,'C10H.00',NULL,'Diabetes mellitus induced by non-steroid drugs'),('diabetes',1,'C10H0',NULL,'Diabetes mellitus induced by non-steroid drugs without complication'),('diabetes',1,'C10H000',NULL,'Diabetes mellitus induced by non-steroid drugs without complication'),('diabetes',1,'C10M.',NULL,'Lipoatrophic diabetes mellitus'),('diabetes',1,'C10M.00',NULL,'Lipoatrophic diabetes mellitus'),('diabetes',1,'C10M0',NULL,'Lipoatrophic diabetes mellitus without complication'),('diabetes',1,'C10M000',NULL,'Lipoatrophic diabetes mellitus without complication'),('diabetes',1,'C10N.',NULL,'Secondary diabetes mellitus'),('diabetes',1,'C10N.00',NULL,'Secondary diabetes mellitus'),('diabetes',1,'C10N0',NULL,'Secondary diabetes mellitus without complication'),('diabetes',1,'C10N000',NULL,'Secondary diabetes mellitus without complication'),('diabetes',1,'C10N1',NULL,'Cystic fibrosis related diabetes mellitus'),('diabetes',1,'C10N100',NULL,'Cystic fibrosis related diabetes mellitus'),('diabetes',1,'C10Q.',NULL,'Maturity onset diabetes of the young type 5'),('diabetes',1,'C10Q.00',NULL,'Maturity onset diabetes of the young type 5'),('diabetes',1,'C10y.',NULL,'Diabetes mellitus with other specified manifestation'),('diabetes',1,'C10y.00',NULL,'Diabetes mellitus with other specified manifestation'),('diabetes',1,'C10y0',NULL,'Diabetes mellitus, juvenile type, with other specified manifestation'),('diabetes',1,'C10y000',NULL,'Diabetes mellitus, juvenile type, with other specified manifestation'),('diabetes',1,'C10y1',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes',1,'C10y100',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes',1,'C10yy',NULL,'Other specified diabetes mellitus with other specified complications'),('diabetes',1,'C10yy00',NULL,'Other specified diabetes mellitus with other specified complications'),('diabetes',1,'C10yz',NULL,'Diabetes mellitus NOS with other specified manifestation'),('diabetes',1,'C10yz00',NULL,'Diabetes mellitus NOS with other specified manifestation'),('diabetes',1,'C10z.',NULL,'Diabetes mellitus with unspecified complication'),('diabetes',1,'C10z.00',NULL,'Diabetes mellitus with unspecified complication'),('diabetes',1,'C10z0',NULL,'Diabetes mellitus, juvenile type, with unspecified complication'),('diabetes',1,'C10z000',NULL,'Diabetes mellitus, juvenile type, with unspecified complication'),('diabetes',1,'C10z1',NULL,'Diabetes mellitus, adult onset, with unspecified complication'),('diabetes',1,'C10z100',NULL,'Diabetes mellitus, adult onset, with unspecified complication'),('diabetes',1,'C10zy',NULL,'Other specified diabetes mellitus with unspecified complications'),('diabetes',1,'C10zy00',NULL,'Other specified diabetes mellitus with unspecified complications'),('diabetes',1,'C10zz',NULL,'Diabetes mellitus NOS with unspecified complication'),('diabetes',1,'C10zz00',NULL,'Diabetes mellitus NOS with unspecified complication'),('diabetes',1,'C1A0.',NULL,'Metabolic syndrome'),('diabetes',1,'C1A0.00',NULL,'Metabolic syndrome'),('diabetes',1,'Cyu2.',NULL,'[X]Diabetes mellitus'),('diabetes',1,'Cyu2.00',NULL,'[X]Diabetes mellitus'),('diabetes',1,'Cyu20',NULL,'[X]Other specified diabetes mellitus'),('diabetes',1,'Cyu2000',NULL,'[X]Other specified diabetes mellitus'),('diabetes',1,'Cyu21',NULL,'[X]Malnutrition-related diabetes mellitus with other specified complications'),('diabetes',1,'Cyu2100',NULL,'[X]Malnutrition-related diabetes mellitus with other specified complications'),('diabetes',1,'Cyu22',NULL,'[X]Malnutrition-related diabetes mellitus with unspecified complications'),('diabetes',1,'Cyu2200',NULL,'[X]Malnutrition-related diabetes mellitus with unspecified complications'),('diabetes',1,'Cyu23',NULL,'[X]Unspecified diabetes mellitus with renal complications'),('diabetes',1,'Cyu2300',NULL,'[X]Unspecified diabetes mellitus with renal complications'),('diabetes',1,'L180.',NULL,'Diabetes mellitus during pregnancy, childbirth and the puerperium'),('diabetes',1,'L180.00',NULL,'Diabetes mellitus during pregnancy, childbirth and the puerperium'),
('diabetes',1,'L1800',NULL,'Diabetes mellitus - unspecified whether during pregnancy or the puerperium'),('diabetes',1,'L180000',NULL,'Diabetes mellitus - unspecified whether during pregnancy or the puerperium'),('diabetes',1,'L1801',NULL,'Diabetes mellitus during pregnancy - baby delivered'),('diabetes',1,'L180100',NULL,'Diabetes mellitus during pregnancy - baby delivered'),('diabetes',1,'L1802',NULL,'Diabetes mellitus in the puerperium - baby delivered during current episode of care'),('diabetes',1,'L180200',NULL,'Diabetes mellitus in the puerperium - baby delivered during current episode of care'),('diabetes',1,'L1803',NULL,'Diabetes mellitus during pregnancy - baby not yet delivered'),('diabetes',1,'L180300',NULL,'Diabetes mellitus during pregnancy - baby not yet delivered'),('diabetes',1,'L1804',NULL,'Diabetes mellitus in the pueperium - baby delivered during previous episode of care'),('diabetes',1,'L180400',NULL,'Diabetes mellitus in the pueperium - baby delivered during previous episode of care'),('diabetes',1,'L1805',NULL,'Pre-existing diabetes mellitus, insulin-dependent'),('diabetes',1,'L180500',NULL,'Pre-existing diabetes mellitus, insulin-dependent'),('diabetes',1,'L1806',NULL,'Pre-existing diabetes mellitus, non-insulin-dependent'),('diabetes',1,'L180600',NULL,'Pre-existing diabetes mellitus, non-insulin-dependent'),('diabetes',1,'L1807',NULL,'Pre-existing malnutrition-related diabetes mellitus'),('diabetes',1,'L180700',NULL,'Pre-existing malnutrition-related diabetes mellitus'),('diabetes',1,'L1808',NULL,'Diabetes mellitus arising in pregnancy'),('diabetes',1,'L180800',NULL,'Diabetes mellitus arising in pregnancy'),('diabetes',1,'L1809',NULL,'Gestational diabetes mellitus'),('diabetes',1,'L180900',NULL,'Gestational diabetes mellitus'),('diabetes',1,'L180A',NULL,'Pre-existing type 1 diabetes mellitus in pregnancy'),('diabetes',1,'L180A00',NULL,'Pre-existing type 1 diabetes mellitus in pregnancy'),('diabetes',1,'L180B',NULL,'Pre-existing type 2 diabetes mellitus in pregnancy'),('diabetes',1,'L180B00',NULL,'Pre-existing type 2 diabetes mellitus in pregnancy'),('diabetes',1,'L180X',NULL,'Pre-existing diabetes mellitus, unspecified'),('diabetes',1,'L180X00',NULL,'Pre-existing diabetes mellitus, unspecified'),('diabetes',1,'L180z',NULL,'Diabetes mellitus during pregnancy, childbirth or the puerperium NOS'),('diabetes',1,'L180z00',NULL,'Diabetes mellitus during pregnancy, childbirth or the puerperium NOS'),('diabetes',1,'Lyu29',NULL,'[X]Pre-existing diabetes mellitus, unspecified'),('diabetes',1,'Lyu2900',NULL,'[X]Pre-existing diabetes mellitus, unspecified'),('diabetes',1,'PKyP.',NULL,'Diabetes insipidus, diabetes mellitus, optic atrophy and deafness'),('diabetes',1,'PKyP.00',NULL,'Diabetes insipidus, diabetes mellitus, optic atrophy and deafness'),('diabetes',1,'Q441.',NULL,'Neonatal diabetes mellitus'),('diabetes',1,'Q441.00',NULL,'Neonatal diabetes mellitus'),('diabetes',1,'ZV13F',NULL,'[V]Personal history of gestational diabetes mellitus'),('diabetes',1,'ZV13F00',NULL,'[V]Personal history of gestational diabetes mellitus');
INSERT INTO #codesreadv2
VALUES ('hypertension',1,'G2...',NULL,'Hypertensive disease'),('hypertension',1,'G2...00',NULL,'Hypertensive disease'),('hypertension',1,'G2z..',NULL,'Hypertensive disease NOS'),('hypertension',1,'G2z..00',NULL,'Hypertensive disease NOS'),('hypertension',1,'G2y..',NULL,'Other specified hypertensive disease'),('hypertension',1,'G2y..00',NULL,'Other specified hypertensive disease'),('hypertension',1,'G28..',NULL,'Stage 2 hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G28..00',NULL,'Stage 2 hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G26..',NULL,'Severe hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G26..00',NULL,'Severe hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G25..',NULL,'Stage 1 hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G25..00',NULL,'Stage 1 hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'G251.',NULL,'Stage 1 hypertension (NICE 2011) with evidence of end organ damage'),('hypertension',1,'G251.00',NULL,'Stage 1 hypertension (NICE 2011) with evidence of end organ damage'),('hypertension',1,'G250.',NULL,'Stage 1 hypertension (NICE 2011) without evidence of end organ damage'),('hypertension',1,'G250.00',NULL,'Stage 1 hypertension (NICE 2011) without evidence of end organ damage'),('hypertension',1,'G24..',NULL,'Secondary hypertension'),('hypertension',1,'G24..00',NULL,'Secondary hypertension'),('hypertension',1,'G24z.',NULL,'Secondary hypertension NOS'),('hypertension',1,'G24z.00',NULL,'Secondary hypertension NOS'),('hypertension',1,'G24zz',NULL,'Secondary hypertension NOS'),('hypertension',1,'G24zz00',NULL,'Secondary hypertension NOS'),('hypertension',1,'G24z0',NULL,'Secondary renovascular hypertension NOS'),('hypertension',1,'G24z000',NULL,'Secondary renovascular hypertension NOS'),('hypertension',1,'G244.',NULL,'Hypertension secondary to endocrine disorders'),('hypertension',1,'G244.00',NULL,'Hypertension secondary to endocrine disorders'),('hypertension',1,'G241.',NULL,'Secondary benign hypertension'),('hypertension',1,'G241.00',NULL,'Secondary benign hypertension'),('hypertension',1,'G241z',NULL,'Secondary benign hypertension NOS'),('hypertension',1,'G241z00',NULL,'Secondary benign hypertension NOS'),('hypertension',1,'G2410',NULL,'Secondary benign renovascular hypertension'),('hypertension',1,'G241000',NULL,'Secondary benign renovascular hypertension'),('hypertension',1,'G240.',NULL,'Secondary malignant hypertension'),('hypertension',1,'G240.00',NULL,'Secondary malignant hypertension'),('hypertension',1,'G240z',NULL,'Secondary malignant hypertension NOS'),('hypertension',1,'G240z00',NULL,'Secondary malignant hypertension NOS'),('hypertension',1,'G2400',NULL,'Secondary malignant renovascular hypertension'),('hypertension',1,'G240000',NULL,'Secondary malignant renovascular hypertension'),('hypertension',1,'G20..',NULL,'Essential hypertension'),('hypertension',1,'G20..00',NULL,'Essential hypertension'),('hypertension',1,'G20z.',NULL,'Essential hypertension NOS'),('hypertension',1,'G20z.00',NULL,'Essential hypertension NOS'),('hypertension',1,'G203.',NULL,'Diastolic hypertension'),('hypertension',1,'G203.00',NULL,'Diastolic hypertension'),('hypertension',1,'G202.',NULL,'Systolic hypertension'),('hypertension',1,'G202.00',NULL,'Systolic hypertension'),('hypertension',1,'G201.',NULL,'Benign essential hypertension'),('hypertension',1,'G201.00',NULL,'Benign essential hypertension'),('hypertension',1,'G200.',NULL,'Malignant essential hypertension'),('hypertension',1,'G200.00',NULL,'Malignant essential hypertension'),('hypertension',1,'Gyu2.',NULL,'[X]Hypertensive diseases'),('hypertension',1,'Gyu2.00',NULL,'[X]Hypertensive diseases'),('hypertension',1,'Gyu21',NULL,'[X]Hypertension secondary to other renal disorders'),('hypertension',1,'Gyu2100',NULL,'[X]Hypertension secondary to other renal disorders'),('hypertension',1,'Gyu20',NULL,'[X]Other secondary hypertension'),('hypertension',1,'Gyu2000',NULL,'[X]Other secondary hypertension');
INSERT INTO #codesreadv2
VALUES ('alcohol-heavy-drinker',1,'136b.',NULL,'Feels should cut down drinking'),('alcohol-heavy-drinker',1,'136b.00',NULL,'Feels should cut down drinking'),('alcohol-heavy-drinker',1,'136c.',NULL,'Higher risk drinking'),('alcohol-heavy-drinker',1,'136c.00',NULL,'Higher risk drinking'),('alcohol-heavy-drinker',1,'136K.',NULL,'Alcohol intake above recommended sensible limits'),('alcohol-heavy-drinker',1,'136K.00',NULL,'Alcohol intake above recommended sensible limits'),('alcohol-heavy-drinker',1,'136P.',NULL,'Heavy drinker'),('alcohol-heavy-drinker',1,'136P.00',NULL,'Heavy drinker'),('alcohol-heavy-drinker',1,'136Q.',NULL,'Very heavy drinker'),('alcohol-heavy-drinker',1,'136Q.00',NULL,'Very heavy drinker'),('alcohol-heavy-drinker',1,'136R.',NULL,'Binge drinker'),('alcohol-heavy-drinker',1,'136R.00',NULL,'Binge drinker'),('alcohol-heavy-drinker',1,'136S.',NULL,'Hazardous alcohol use'),('alcohol-heavy-drinker',1,'136S.00',NULL,'Hazardous alcohol use'),('alcohol-heavy-drinker',1,'136T.',NULL,'Harmful alcohol use'),('alcohol-heavy-drinker',1,'136T.00',NULL,'Harmful alcohol use'),('alcohol-heavy-drinker',1,'136W.',NULL,'Alcohol misuse'),('alcohol-heavy-drinker',1,'136W.00',NULL,'Alcohol misuse'),('alcohol-heavy-drinker',1,'136Y.',NULL,'Drinks in morning to get rid of hangover'),('alcohol-heavy-drinker',1,'136Y.00',NULL,'Drinks in morning to get rid of hangover'),('alcohol-heavy-drinker',1,'E23..','12','Alcohol problem drinking'),('alcohol-heavy-drinker',1,'E23..','12','Alcohol problem drinking');
INSERT INTO #codesreadv2
VALUES ('alcohol-light-drinker',1,'1362.',NULL,'Trivial drinker - <1u/day'),('alcohol-light-drinker',1,'1362.00',NULL,'Trivial drinker - <1u/day'),('alcohol-light-drinker',1,'136N.',NULL,'Light drinker'),('alcohol-light-drinker',1,'136N.00',NULL,'Light drinker'),('alcohol-light-drinker',1,'136d.',NULL,'Lower risk drinking'),('alcohol-light-drinker',1,'136d.00',NULL,'Lower risk drinking');
INSERT INTO #codesreadv2
VALUES ('alcohol-moderate-drinker',1,'136O.',NULL,'Moderate drinker'),('alcohol-moderate-drinker',1,'136O.00',NULL,'Moderate drinker'),('alcohol-moderate-drinker',1,'136F.',NULL,'Spirit drinker'),('alcohol-moderate-drinker',1,'136F.00',NULL,'Spirit drinker'),('alcohol-moderate-drinker',1,'136G.',NULL,'Beer drinker'),('alcohol-moderate-drinker',1,'136G.00',NULL,'Beer drinker'),('alcohol-moderate-drinker',1,'136H.',NULL,'Drinks beer and spirits'),('alcohol-moderate-drinker',1,'136H.00',NULL,'Drinks beer and spirits'),('alcohol-moderate-drinker',1,'136I.',NULL,'Drinks wine'),('alcohol-moderate-drinker',1,'136I.00',NULL,'Drinks wine'),('alcohol-moderate-drinker',1,'136J.',NULL,'Social drinker'),('alcohol-moderate-drinker',1,'136J.00',NULL,'Social drinker'),('alcohol-moderate-drinker',1,'136L.',NULL,'Alcohol intake within recommended sensible limits'),('alcohol-moderate-drinker',1,'136L.00',NULL,'Alcohol intake within recommended sensible limits'),('alcohol-moderate-drinker',1,'136Z.',NULL,'Alcohol consumption NOS'),('alcohol-moderate-drinker',1,'136Z.00',NULL,'Alcohol consumption NOS'),('alcohol-moderate-drinker',1,'136a.',NULL,'Increasing risk drinking'),('alcohol-moderate-drinker',1,'136a.00',NULL,'Increasing risk drinking');
INSERT INTO #codesreadv2
VALUES ('alcohol-non-drinker',1,'1361.',NULL,'Teetotaller'),('alcohol-non-drinker',1,'1361.00',NULL,'Teetotaller'),('alcohol-non-drinker',1,'136M.',NULL,'Current non drinker'),('alcohol-non-drinker',1,'136M.00',NULL,'Current non drinker');
INSERT INTO #codesreadv2
VALUES ('alcohol-weekly-intake',1,'136V.',NULL,'Alcohol units per week'),('alcohol-weekly-intake',1,'136V.00',NULL,'Alcohol units per week'),('alcohol-weekly-intake',1,'136..',NULL,'Alcohol consumption'),('alcohol-weekly-intake',1,'136..00',NULL,'Alcohol consumption');
INSERT INTO #codesreadv2
VALUES ('bmi',1,'22K..',NULL,'Body Mass Index'),('bmi',1,'22K..00',NULL,'Body Mass Index'),('bmi',1,'22KE.',NULL,'Obese class III (body mass index equal to or greater than 40.0)'),('bmi',1,'22KE.00',NULL,'Obese class III (body mass index equal to or greater than 40.0)'),('bmi',1,'22KD.',NULL,'Obese class II (body mass index 35.0 - 39.9)'),('bmi',1,'22KD.00',NULL,'Obese class II (body mass index 35.0 - 39.9)'),('bmi',1,'22KC.',NULL,'Obese class I (body mass index 30.0 - 34.9)'),('bmi',1,'22KC.00',NULL,'Obese class I (body mass index 30.0 - 34.9)'),('bmi',1,'22KB.',NULL,'Baseline body mass index'),('bmi',1,'22KB.00',NULL,'Baseline body mass index'),('bmi',1,'22KA.',NULL,'Target body mass index'),('bmi',1,'22KA.00',NULL,'Target body mass index'),('bmi',1,'22K9.',NULL,'Body mass index centile'),('bmi',1,'22K9.00',NULL,'Body mass index centile'),('bmi',1,'22K9K',NULL,'Downs syndrome body mass index centile'),('bmi',1,'22K9K00',NULL,'Downs syndrome body mass index centile'),('bmi',1,'22K9J',NULL,'Child body mass index greater than 99.6th centile'),('bmi',1,'22K9J00',NULL,'Child body mass index greater than 99.6th centile'),('bmi',1,'22K9H',NULL,'Child body mass index 98.1st-99.6th centile'),('bmi',1,'22K9H00',NULL,'Child body mass index 98.1st-99.6th centile'),('bmi',1,'22K9G',NULL,'Child body mass index on 98th centile'),('bmi',1,'22K9G00',NULL,'Child body mass index on 98th centile'),('bmi',1,'22K9F',NULL,'Child body mass index 92nd-97th centile'),('bmi',1,'22K9F00',NULL,'Child body mass index 92nd-97th centile'),('bmi',1,'22K9E',NULL,'Child body mass index on 91st centile'),('bmi',1,'22K9E00',NULL,'Child body mass index on 91st centile'),('bmi',1,'22K9D',NULL,'Child body mass index 76th-90th centile'),('bmi',1,'22K9D00',NULL,'Child body mass index 76th-90th centile'),('bmi',1,'22K9C',NULL,'Child body mass index on 75th centile'),('bmi',1,'22K9C00',NULL,'Child body mass index on 75th centile'),('bmi',1,'22K9B',NULL,'Child body mass index 51st-74th centile'),('bmi',1,'22K9B00',NULL,'Child body mass index 51st-74th centile'),('bmi',1,'22K9A',NULL,'Child body mass index on 50th centile'),('bmi',1,'22K9A00',NULL,'Child body mass index on 50th centile'),('bmi',1,'22K99',NULL,'Child body mass index 26th-49th centile'),('bmi',1,'22K9900',NULL,'Child body mass index 26th-49th centile'),('bmi',1,'22K98',NULL,'Child body mass index on 25th centile'),('bmi',1,'22K9800',NULL,'Child body mass index on 25th centile'),('bmi',1,'22K97',NULL,'Child body mass index 10th-24th centile'),('bmi',1,'22K9700',NULL,'Child body mass index 10th-24th centile'),('bmi',1,'22K96',NULL,'Child body mass index on 9th centile'),('bmi',1,'22K9600',NULL,'Child body mass index on 9th centile'),('bmi',1,'22K95',NULL,'Child body mass index 3rd-8th centile'),('bmi',1,'22K9500',NULL,'Child body mass index 3rd-8th centile'),('bmi',1,'22K94',NULL,'Child body mass index on 2nd centile'),('bmi',1,'22K9400',NULL,'Child body mass index on 2nd centile'),('bmi',1,'22K93',NULL,'Child body mass index 0.4th-1.9th centile'),('bmi',1,'22K9300',NULL,'Child body mass index 0.4th-1.9th centile'),('bmi',1,'22K92',NULL,'Child body mass index less than 0.4th centile'),('bmi',1,'22K9200',NULL,'Child body mass index less than 0.4th centile'),('bmi',1,'22K91',NULL,'Child body mass index centile'),('bmi',1,'22K9100',NULL,'Child body mass index centile'),('bmi',1,'22K90',NULL,'Baseline body mass index centile'),('bmi',1,'22K9000',NULL,'Baseline body mass index centile'),('bmi',1,'22K8.',NULL,'Body mass index 20-24 - normal'),('bmi',1,'22K8.00',NULL,'Body mass index 20-24 - normal'),('bmi',1,'22K7.',NULL,'Body mass index 40+ - severely obese'),('bmi',1,'22K7.00',NULL,'Body mass index 40+ - severely obese'),('bmi',1,'22K6.',NULL,'Body mass index less than 20'),('bmi',1,'22K6.00',NULL,'Body mass index less than 20'),('bmi',1,'22K5.',NULL,'Body mass index 30+ - obesity'),('bmi',1,'22K5.00',NULL,'Body mass index 30+ - obesity'),('bmi',1,'22K4.',NULL,'Body mass index index 25-29 - overweight'),('bmi',1,'22K4.00',NULL,'Body mass index index 25-29 - overweight'),('bmi',1,'22K3.',NULL,'Body Mass Index low K/M2'),('bmi',1,'22K3.00',NULL,'Body Mass Index low K/M2'),('bmi',1,'22K2.',NULL,'Body Mass Index high K/M2'),('bmi',1,'22K2.00',NULL,'Body Mass Index high K/M2'),('bmi',1,'22K1.',NULL,'Body Mass Index normal K/M2'),('bmi',1,'22K1.00',NULL,'Body Mass Index normal K/M2'),('bmi',1,'C3808',NULL,'Childhood obesity'),('bmi',1,'C380800',NULL,'Childhood obesity'),('bmi',2,'22K..',NULL,'Body Mass Index'),('bmi',2,'22K..00',NULL,'Body Mass Index');
INSERT INTO #codesreadv2
VALUES ('smoking-status-current',1,'137P.',NULL,'Cigarette smoker'),('smoking-status-current',1,'137P.00',NULL,'Cigarette smoker'),('smoking-status-current',1,'13p3.',NULL,'Smoking status at 52 weeks'),('smoking-status-current',1,'13p3.00',NULL,'Smoking status at 52 weeks'),('smoking-status-current',1,'1374.',NULL,'Moderate smoker - 10-19 cigs/d'),('smoking-status-current',1,'1374.00',NULL,'Moderate smoker - 10-19 cigs/d'),('smoking-status-current',1,'137G.',NULL,'Trying to give up smoking'),('smoking-status-current',1,'137G.00',NULL,'Trying to give up smoking'),('smoking-status-current',1,'137R.',NULL,'Current smoker'),('smoking-status-current',1,'137R.00',NULL,'Current smoker'),('smoking-status-current',1,'1376.',NULL,'Very heavy smoker - 40+cigs/d'),('smoking-status-current',1,'1376.00',NULL,'Very heavy smoker - 40+cigs/d'),('smoking-status-current',1,'1375.',NULL,'Heavy smoker - 20-39 cigs/day'),('smoking-status-current',1,'1375.00',NULL,'Heavy smoker - 20-39 cigs/day'),('smoking-status-current',1,'1373.',NULL,'Light smoker - 1-9 cigs/day'),('smoking-status-current',1,'1373.00',NULL,'Light smoker - 1-9 cigs/day'),('smoking-status-current',1,'137M.',NULL,'Rolls own cigarettes'),('smoking-status-current',1,'137M.00',NULL,'Rolls own cigarettes'),('smoking-status-current',1,'137o.',NULL,'Waterpipe tobacco consumption'),('smoking-status-current',1,'137o.00',NULL,'Waterpipe tobacco consumption'),('smoking-status-current',1,'137m.',NULL,'Failed attempt to stop smoking'),('smoking-status-current',1,'137m.00',NULL,'Failed attempt to stop smoking'),('smoking-status-current',1,'137h.',NULL,'Minutes from waking to first tobacco consumption'),('smoking-status-current',1,'137h.00',NULL,'Minutes from waking to first tobacco consumption'),('smoking-status-current',1,'137g.',NULL,'Cigarette pack-years'),('smoking-status-current',1,'137g.00',NULL,'Cigarette pack-years'),('smoking-status-current',1,'137f.',NULL,'Reason for restarting smoking'),('smoking-status-current',1,'137f.00',NULL,'Reason for restarting smoking'),('smoking-status-current',1,'137e.',NULL,'Smoking restarted'),('smoking-status-current',1,'137e.00',NULL,'Smoking restarted'),('smoking-status-current',1,'137d.',NULL,'Not interested in stopping smoking'),('smoking-status-current',1,'137d.00',NULL,'Not interested in stopping smoking'),('smoking-status-current',1,'137c.',NULL,'Thinking about stopping smoking'),('smoking-status-current',1,'137c.00',NULL,'Thinking about stopping smoking'),('smoking-status-current',1,'137b.',NULL,'Ready to stop smoking'),('smoking-status-current',1,'137b.00',NULL,'Ready to stop smoking'),('smoking-status-current',1,'137C.',NULL,'Keeps trying to stop smoking'),('smoking-status-current',1,'137C.00',NULL,'Keeps trying to stop smoking'),('smoking-status-current',1,'137J.',NULL,'Cigar smoker'),('smoking-status-current',1,'137J.00',NULL,'Cigar smoker'),('smoking-status-current',1,'137H.',NULL,'Pipe smoker'),('smoking-status-current',1,'137H.00',NULL,'Pipe smoker'),('smoking-status-current',1,'137a.',NULL,'Pipe tobacco consumption'),('smoking-status-current',1,'137a.00',NULL,'Pipe tobacco consumption'),('smoking-status-current',1,'137Z.',NULL,'Tobacco consumption NOS'),('smoking-status-current',1,'137Z.00',NULL,'Tobacco consumption NOS'),('smoking-status-current',1,'137Y.',NULL,'Cigar consumption'),('smoking-status-current',1,'137Y.00',NULL,'Cigar consumption'),('smoking-status-current',1,'137X.',NULL,'Cigarette consumption'),('smoking-status-current',1,'137X.00',NULL,'Cigarette consumption'),('smoking-status-current',1,'137V.',NULL,'Smoking reduced'),('smoking-status-current',1,'137V.00',NULL,'Smoking reduced'),('smoking-status-current',1,'137Q.',NULL,'Smoking started'),('smoking-status-current',1,'137Q.00',NULL,'Smoking started');
INSERT INTO #codesreadv2
VALUES ('smoking-status-currently-not',1,'137L.',NULL,'Current non-smoker'),('smoking-status-currently-not',1,'137L.00',NULL,'Current non-smoker');
INSERT INTO #codesreadv2
VALUES ('smoking-status-ex',1,'137l.',NULL,'Ex roll-up cigarette smoker'),('smoking-status-ex',1,'137l.00',NULL,'Ex roll-up cigarette smoker'),('smoking-status-ex',1,'137j.',NULL,'Ex-cigarette smoker'),('smoking-status-ex',1,'137j.00',NULL,'Ex-cigarette smoker'),('smoking-status-ex',1,'137S.',NULL,'Ex smoker'),('smoking-status-ex',1,'137S.00',NULL,'Ex smoker'),('smoking-status-ex',1,'137O.',NULL,'Ex cigar smoker'),('smoking-status-ex',1,'137O.00',NULL,'Ex cigar smoker'),('smoking-status-ex',1,'137N.',NULL,'Ex pipe smoker'),('smoking-status-ex',1,'137N.00',NULL,'Ex pipe smoker'),('smoking-status-ex',1,'137F.',NULL,'Ex-smoker - amount unknown'),('smoking-status-ex',1,'137F.00',NULL,'Ex-smoker - amount unknown'),('smoking-status-ex',1,'137B.',NULL,'Ex-very heavy smoker (40+/day)'),('smoking-status-ex',1,'137B.00',NULL,'Ex-very heavy smoker (40+/day)'),('smoking-status-ex',1,'137A.',NULL,'Ex-heavy smoker (20-39/day)'),('smoking-status-ex',1,'137A.00',NULL,'Ex-heavy smoker (20-39/day)'),('smoking-status-ex',1,'1379.',NULL,'Ex-moderate smoker (10-19/day)'),('smoking-status-ex',1,'1379.00',NULL,'Ex-moderate smoker (10-19/day)'),('smoking-status-ex',1,'1378.',NULL,'Ex-light smoker (1-9/day)'),('smoking-status-ex',1,'1378.00',NULL,'Ex-light smoker (1-9/day)'),('smoking-status-ex',1,'137K.',NULL,'Stopped smoking'),('smoking-status-ex',1,'137K.00',NULL,'Stopped smoking'),('smoking-status-ex',1,'137K0',NULL,'Recently stopped smoking'),('smoking-status-ex',1,'137K000',NULL,'Recently stopped smoking'),('smoking-status-ex',1,'137T.',NULL,'Date ceased smoking'),('smoking-status-ex',1,'137T.00',NULL,'Date ceased smoking'),('smoking-status-ex',1,'13p4.',NULL,'Smoking free weeks'),('smoking-status-ex',1,'13p4.00',NULL,'Smoking free weeks');
INSERT INTO #codesreadv2
VALUES ('smoking-status-ex-trivial',1,'1377.',NULL,'Ex-trivial smoker (<1/day)'),('smoking-status-ex-trivial',1,'1377.00',NULL,'Ex-trivial smoker (<1/day)');
INSERT INTO #codesreadv2
VALUES ('smoking-status-never',1,'1371.',NULL,'Never smoked tobacco'),('smoking-status-never',1,'1371.00',NULL,'Never smoked tobacco');
INSERT INTO #codesreadv2
VALUES ('smoking-status-passive',1,'137I.',NULL,'Passive smoker'),('smoking-status-passive',1,'137I.00',NULL,'Passive smoker'),('smoking-status-passive',1,'137I0',NULL,'Exposed to tobacco smoke at home'),('smoking-status-passive',1,'137I000',NULL,'Exposed to tobacco smoke at home'),('smoking-status-passive',1,'13WF4',NULL,'Passive smoking risk'),('smoking-status-passive',1,'13WF400',NULL,'Passive smoking risk');
INSERT INTO #codesreadv2
VALUES ('smoking-status-trivial',1,'1372.',NULL,'Trivial smoker - < 1 cig/day'),('smoking-status-trivial',1,'1372.00',NULL,'Trivial smoker - < 1 cig/day');
INSERT INTO #codesreadv2
VALUES ('covid-vaccination',1,'65F0.',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'65F0.00',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'65F01',NULL,'Administration of first dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'65F0100',NULL,'Administration of first dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'65F02',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'65F0200',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'65F06',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccination'),('covid-vaccination',1,'65F0600',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccination'),('covid-vaccination',1,'65F07',NULL,'Immunisation course to achieve immunity against SARS-CoV-2'),('covid-vaccination',1,'65F0700',NULL,'Immunisation course to achieve immunity against SARS-CoV-2'),('covid-vaccination',1,'65F08',NULL,'Immunisation course to maintain protection against SARS-CoV-2'),('covid-vaccination',1,'65F0800',NULL,'Immunisation course to maintain protection against SARS-CoV-2'),('covid-vaccination',1,'65F09',NULL,'Administration of third dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'65F0900',NULL,'Administration of third dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'65F0A',NULL,'Administration of fourth dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'65F0A00',NULL,'Administration of fourth dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'9bJ..',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech)'),('covid-vaccination',1,'9bJ..00',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech)')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesreadv2;

IF OBJECT_ID('tempdb..#codesctv3') IS NOT NULL DROP TABLE #codesctv3;
CREATE TABLE #codesctv3 (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesctv3
VALUES ('diabetes',1,'C10..',NULL,'DM - Diabetes mellitus'),('diabetes',1,'C100.',NULL,'Diabetes mellitus with no mention of complication'),('diabetes',1,'C1000',NULL,'Diabetes mellitus, juvenile type, with no mention of complication'),('diabetes',1,'C1001',NULL,'Maturity onset diabetes'),('diabetes',1,'C100z',NULL,'Diabetes mellitus NOS with no mention of complication'),('diabetes',1,'C101.',NULL,'Diabetic ketoacidosis'),('diabetes',1,'C1010',NULL,'Diabetes mellitus, juvenile type, with ketoacidosis'),('diabetes',1,'C1011',NULL,'Diabetes mellitus, adult onset, with ketoacidosis'),('diabetes',1,'C101y',NULL,'Other specified diabetes mellitus with ketoacidosis'),('diabetes',1,'C101z',NULL,'Diabetes mellitus NOS with ketoacidosis'),('diabetes',1,'C102.',NULL,'Diabetes mellitus with hyperosmolar coma'),('diabetes',1,'C1020',NULL,'Diabetes mellitus, juvenile type, with hyperosmolar coma'),('diabetes',1,'C1021',NULL,'Diabetes mellitus, adult onset, with hyperosmolar coma'),('diabetes',1,'C102z',NULL,'Diabetes mellitus NOS with hyperosmolar coma'),('diabetes',1,'C103.',NULL,'Diabetes mellitus with ketoacidotic coma'),('diabetes',1,'C1030',NULL,'Diabetes mellitus, juvenile type, with ketoacidotic coma'),('diabetes',1,'C1031',NULL,'Diabetes mellitus, adult onset, with ketoacidotic coma'),('diabetes',1,'C103y',NULL,'Other specified diabetes mellitus with coma'),('diabetes',1,'C103z',NULL,'Diabetes mellitus NOS with ketoacidotic coma'),('diabetes',1,'C1040',NULL,'Diabetes mellitus, juvenile type, with renal manifestation'),('diabetes',1,'C1041',NULL,'Diabetes mellitus, adult onset, with renal manifestation'),('diabetes',1,'C104y',NULL,'Other specified diabetes mellitus with renal complications'),('diabetes',1,'C104z',NULL,'Diabetes mellitus with nephropathy NOS'),('diabetes',1,'C105.',NULL,'Diabetes mellitus with ophthalmic manifestation'),('diabetes',1,'C1050',NULL,'Diabetes mellitus, juvenile type, with ophthalmic manifestation'),('diabetes',1,'C1051',NULL,'Diabetes mellitus, adult onset, with ophthalmic manifestation'),('diabetes',1,'C105y',NULL,'Other specified diabetes mellitus with ophthalmic complications'),('diabetes',1,'C105z',NULL,'Diabetes mellitus NOS with ophthalmic manifestation'),('diabetes',1,'C1060',NULL,'Diabetes mellitus, juvenile type, with neurological manifestation'),('diabetes',1,'C1061',NULL,'Diabetes mellitus, adult onset, with neurological manifestation'),('diabetes',1,'C106y',NULL,'Other specified diabetes mellitus with neurological complications'),('diabetes',1,'C106z',NULL,'Diabetes mellitus NOS with neurological manifestation'),('diabetes',1,'C1070',NULL,'Diabetes mellitus, juvenile type, with peripheral circulatory disorder'),('diabetes',1,'C1071',NULL,'Diabetes mellitus, adult onset, with peripheral circulatory disorder'),('diabetes',1,'C1072',NULL,'Diabetes mellitus, adult with gangrene'),('diabetes',1,'C107y',NULL,'Other specified diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C107z',NULL,'Diabetes mellitus NOS with peripheral circulatory disorder'),('diabetes',1,'C1080',NULL,'Insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C1081',NULL,'Insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C1082',NULL,'Insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C1083',NULL,'Insulin-dependent diabetes mellitus with multiple complications'),('diabetes',1,'C1085',NULL,'Insulin-dependent diabetes mellitus with ulcer'),('diabetes',1,'C1086',NULL,'Insulin-dependent diabetes mellitus with gangrene'),('diabetes',1,'C1087',NULL,'IDDM - Insulin-dependent diabetes mellitus with retinopathy'),('diabetes',1,'C1088',NULL,'Insulin-dependent diabetes mellitus - poor control'),('diabetes',1,'C1089',NULL,'Insulin-dependent diabetes maturity onset'),('diabetes',1,'C108y',NULL,'Other specified diabetes mellitus with multiple complications'),('diabetes',1,'C108z',NULL,'Unspecified diabetes mellitus with multiple complications'),('diabetes',1,'C1090',NULL,'Non-insulin-dependent diabetes mellitus with renal complications'),('diabetes',1,'C1091',NULL,'Non-insulin-dependent diabetes mellitus with ophthalmic complications'),('diabetes',1,'C1092',NULL,'Non-insulin-dependent diabetes mellitus with neurological complications'),('diabetes',1,'C1093',NULL,'Non-insulin-dependent diabetes mellitus with multiple complications'),('diabetes',1,'C1094',NULL,'Non-insulin-dependent diabetes mellitus with ulcer'),('diabetes',1,'C1095',NULL,'Non-insulin-dependent diabetes mellitus with gangrene'),('diabetes',1,'C1096',NULL,'NIDDM - Non-insulin-dependent diabetes mellitus with retinopathy'),('diabetes',1,'C1097',NULL,'Non-insulin-dependent diabetes mellitus - poor control'),('diabetes',1,'C10A0',NULL,'Malnutrition-related diabetes mellitus with coma'),('diabetes',1,'C10A1',NULL,'Malnutrition-related diabetes mellitus with ketoacidosis'),('diabetes',1,'C10A2',NULL,'Malnutrition-related diabetes mellitus with renal complications'),('diabetes',1,'C10A3',NULL,'Malnutrition-related diabetes mellitus with ophthalmic complications'),('diabetes',1,'C10A4',NULL,'Malnutrition-related diabetes mellitus with neurological complications'),('diabetes',1,'C10A5',NULL,'Malnutrition-related diabetes mellitus with peripheral circulatory complications'),('diabetes',1,'C10A6',NULL,'Malnutrition-related diabetes mellitus with multiple complications'),('diabetes',1,'C10A7',NULL,'Malnutrition-related diabetes mellitus without complications'),('diabetes',1,'C10B0',NULL,'Steroid-induced diabetes mellitus without complication'),('diabetes',1,'C10y.',NULL,'Diabetes mellitus with other specified manifestation'),('diabetes',1,'C10y0',NULL,'Diabetes mellitus, juvenile type, with other specified manifestation'),('diabetes',1,'C10y1',NULL,'Diabetes mellitus, adult onset, with other specified manifestation'),('diabetes',1,'C10yy',NULL,'Other specified diabetes mellitus with other specified complications'),('diabetes',1,'C10yz',NULL,'Diabetes mellitus NOS with other specified manifestation'),('diabetes',1,'C10z.',NULL,'Diabetes mellitus with unspecified complication'),('diabetes',1,'C10z0',NULL,'Diabetes mellitus, juvenile type, with unspecified complication'),('diabetes',1,'C10z1',NULL,'Diabetes mellitus, adult onset, with unspecified complication'),('diabetes',1,'C10zy',NULL,'Other specified diabetes mellitus with unspecified complications'),('diabetes',1,'C10zz',NULL,'Diabetes mellitus NOS with unspecified complication'),('diabetes',1,'Cyu20',NULL,'[X]Other specified diabetes mellitus'),('diabetes',1,'Cyu21',NULL,'[X]Malnutrition-related diabetes mellitus with other specified complications'),('diabetes',1,'Cyu22',NULL,'[X]Malnutrition-related diabetes mellitus with unspecified complications'),('diabetes',1,'Cyu23',NULL,'[X]Unspecified diabetes mellitus with renal complications'),('diabetes',1,'L180.',NULL,'Diabetes mellitus during pregnancy, childbirth and the puerperium'),('diabetes',1,'L1800',NULL,'Diabetes mellitus - unspecified whether during pregnancy or the puerperium'),('diabetes',1,'L1801',NULL,'Diabetes mellitus during pregnancy - baby delivered'),('diabetes',1,'L1802',NULL,'Diabetes mellitus in the puerperium - baby delivered during current episode of care'),('diabetes',1,'L1803',NULL,'Diabetes mellitus during pregnancy - baby not yet delivered'),('diabetes',1,'L1804',NULL,'Diabetes mellitus in the puerperium - baby delivered during previous episode of care'),('diabetes',1,'L1805',NULL,'Pre-existing diabetes mellitus, insulin-dependent'),('diabetes',1,'L1806',NULL,'Pre-existing diabetes mellitus, non-insulin-dependent'),('diabetes',1,'L1807',NULL,'Pre-existing malnutrition-related diabetes mellitus'),('diabetes',1,'L1808',NULL,'Diabetes mellitus arising in pregnancy'),('diabetes',1,'L180z',NULL,'Diabetes mellitus during pregnancy, childbirth or the puerperium NOS'),('diabetes',1,'Lyu29',NULL,'[X]Pre-existing diabetes mellitus, unspecified'),('diabetes',1,'Q441.',NULL,'Neonatal diabetes mellitus'),('diabetes',1,'X40J4',NULL,'Insulin-dependent diabetes mellitus'),('diabetes',1,'X40J5',NULL,'Non-insulin-dependent diabetes mellitus'),('diabetes',1,'X40J6',NULL,'Insulin treated Type 2 diabetes mellitus'),('diabetes',1,'X40J7',NULL,'Malnutrition-related diabetes mellitus'),('diabetes',1,'X40J8',NULL,'Malnutrition-related diabetes mellitus - fibrocalculous'),('diabetes',1,'X40J9',NULL,'Malnutrition-related diabetes mellitus - protein-deficient'),('diabetes',1,'X40JA',NULL,'Secondary diabetes mellitus'),('diabetes',1,'X40JB',NULL,'Secondary pancreatic diabetes mellitus'),('diabetes',1,'X40JC',NULL,'Secondary endocrine diabetes mellitus'),('diabetes',1,'X40JE',NULL,'Reavens syndrome'),('diabetes',1,'X40JF',NULL,'Transitory neonatal diabetes mellitus'),('diabetes',1,'X40JG',NULL,'Genetic syndromes of diabetes mellitus'),('diabetes',1,'X40JI',NULL,'Maturity onset diabetes in youth type 1'),('diabetes',1,'X40JJ',NULL,'Diabetes mellitus autosomal dominant type 2'),('diabetes',1,'X40JN',NULL,'Lipodystrophy, partial, with Reiger anomaly, short stature, and insulinopenic diabetes mellitus'),('diabetes',1,'X40JQ',NULL,'Muscular atrophy, ataxia, retinitis pigmentosa, and diabetes mellitus'),('diabetes',1,'X40JV',NULL,'Hypogonadism, diabetes mellitus, alopecia ,mental retardation and electrocardiographic abnormalities'),('diabetes',1,'X40JX',NULL,'Pineal hyperplasia, insulin-resistant diabetes mellitus and somatic abnormalities'),('diabetes',1,'X40JY',NULL,'Congenital insulin-dependent diabetes mellitus with fatal secretory diarrhoea'),('diabetes',1,'X40Ja',NULL,'Abnormal metabolic state in diabetes mellitus'),('diabetes',1,'X50GO',NULL,'Soft tissue complication of diabetes mellitus'),('diabetes',1,'XE10E',NULL,'Diabetes mellitus, juvenile type, with no mention of complication'),('diabetes',1,'XE10F',NULL,'Diabetes mellitus, adult onset, with no mention of complication'),
('diabetes',1,'XE10G',NULL,'Diabetes mellitus with renal manifestation'),('diabetes',1,'XE10H',NULL,'Diabetes mellitus with neurological manifestation'),('diabetes',1,'XE10I',NULL,'Diabetes mellitus with peripheral circulatory disorder'),('diabetes',1,'XE12C',NULL,'Insulin dependent diabetes mel'),('diabetes',1,'XE15k',NULL,'Diabetes mellitus with polyneuropathy'),('diabetes',1,'XM19i',NULL,'[EDTA] Diabetes Type I (insulin dependent) associated with renal failure'),('diabetes',1,'XM19j',NULL,'[EDTA] Diabetes Type II (non-insulin-dependent) associated with renal failure'),('diabetes',1,'XM1Qx',NULL,'Diabetes mellitus with gangrene'),('diabetes',1,'XSETH',NULL,'Maturity onset diabetes mellitus in young'),('diabetes',1,'XSETK',NULL,'Drug-induced diabetes mellitus'),('diabetes',1,'XSETp',NULL,'Diabetes mellitus due to insulin receptor antibodies'),('diabetes',1,'Xa08a',NULL,'Small for gestation neonatal diabetes mellitus'),('diabetes',1,'Xa4g7',NULL,'Unstable type 1 diabetes mellitus'),('diabetes',1,'Xa9FG',NULL,'Postpancreatectomy diabetes mellitus'),('diabetes',1,'XaA6b',NULL,'Perceived control of insulin-dependent diabetes'),('diabetes',1,'XaELP',NULL,'Insulin-dependent diabetes without complication'),('diabetes',1,'XaELQ',NULL,'Non-insulin-dependent diabetes mellitus without complication'),('diabetes',1,'XaEnn',NULL,'Type I diabetes mellitus with mononeuropathy'),('diabetes',1,'XaEno',NULL,'Insulin dependent diabetes mellitus with polyneuropathy'),('diabetes',1,'XaEnp',NULL,'Type II diabetes mellitus with mononeuropathy'),('diabetes',1,'XaEnq',NULL,'Type 2 diabetes mellitus with polyneuropathy'),('diabetes',1,'XaF04',NULL,'Type 1 diabetes mellitus with nephropathy'),('diabetes',1,'XaF05',NULL,'Type 2 diabetes mellitus with nephropathy'),('diabetes',1,'XaFWG',NULL,'Type 1 diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'XaFWI',NULL,'Type II diabetes mellitus with hypoglycaemic coma'),('diabetes',1,'XaFm8',NULL,'Type 1 diabetes mellitus with diabetic cataract'),('diabetes',1,'XaFmA',NULL,'Type II diabetes mellitus with diabetic cataract'),('diabetes',1,'XaFmK',NULL,'Type I diabetes mellitus with peripheral angiopathy'),('diabetes',1,'XaFmL',NULL,'Type 1 diabetes mellitus with arthropathy'),('diabetes',1,'XaFmM',NULL,'Type 1 diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'XaFn7',NULL,'Non-insulin-dependent diabetes mellitus with peripheral angiopathy'),('diabetes',1,'XaFn8',NULL,'Non-insulin dependent diabetes mellitus with arthropathy'),('diabetes',1,'XaFn9',NULL,'Non-insulin dependent diabetes mellitus with neuropathic arthropathy'),('diabetes',1,'XaIrf',NULL,'Hyperosmolar non-ketotic state in type II diabetes mellitus'),('diabetes',1,'XaIyz',NULL,'Diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'XaIz0',NULL,'Diabetes mellitus with persistent proteinuria'),('diabetes',1,'XaIzM',NULL,'Type 1 diabetes mellitus with persistent proteinuria'),('diabetes',1,'XaIzN',NULL,'Type 1 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'XaIzQ',NULL,'Type 2 diabetes mellitus with persistent proteinuria'),('diabetes',1,'XaIzR',NULL,'Type 2 diabetes mellitus with persistent microalbuminuria'),('diabetes',1,'XaJQp',NULL,'Type II diabetes mellitus with exudative maculopathy'),('diabetes',1,'XaJSr',NULL,'Type I diabetes mellitus with exudative maculopathy'),('diabetes',1,'XaJUI',NULL,'Diabetes mellitus induced by non-steroid drugs'),('diabetes',1,'XaJlL',NULL,'Secondary pancreatic diabetes mellitus without complication'),('diabetes',1,'XaJlM',NULL,'Diabetes mellitus induced by non-steroid drugs without complication'),('diabetes',1,'XaJlQ',NULL,'Lipoatrophic diabetes mellitus without complication'),('diabetes',1,'XaJlR',NULL,'Secondary diabetes mellitus without complication'),('diabetes',1,'XaKyW',NULL,'Type I diabetes mellitus with gastroparesis'),('diabetes',1,'XaKyX',NULL,'Type II diabetes mellitus with gastroparesis'),('diabetes',1,'XaMzI',NULL,'Cystic fibrosis related diabetes mellitus'),('diabetes',1,'XaOPt',NULL,'Maternally inherited diabetes mellitus'),('diabetes',1,'XaOPu',NULL,'Latent autoimmune diabetes mellitus in adult'),('diabetes',1,'XacoB',NULL,'Maturity onset diabetes of the young type 5'),('diabetes',1,'XaIfG',NULL,'Type II diabetes on insulin'),('diabetes',1,'XaIfI',NULL,'Type II diabetes on diet only');
INSERT INTO #codesctv3
VALUES ('hypertension',1,'G24..',NULL,'Secondary hypertension'),('hypertension',1,'G240.',NULL,'Malignant secondary hypertension'),('hypertension',1,'G241.',NULL,'Secondary benign hypertension'),('hypertension',1,'G244.',NULL,'Hypertension secondary to endocrine disorders'),('hypertension',1,'G24z.',NULL,'Secondary hypertension NOS'),('hypertension',1,'Gyu20',NULL,'[X]Other secondary hypertension'),('hypertension',1,'Gyu21',NULL,'[X]Hypertension secondary to other renal disorders'),('hypertension',1,'Xa0kX',NULL,'Hypertension due to renovascular disease'),('hypertension',1,'XE0Ub',NULL,'Systemic arterial hypertension'),('hypertension',1,'G2400',NULL,'Secondary malignant renovascular hypertension'),('hypertension',1,'G240z',NULL,'Secondary malignant hypertension NOS'),('hypertension',1,'G2410',NULL,'Secondary benign renovascular hypertension'),('hypertension',1,'G241z',NULL,'Secondary benign hypertension NOS'),('hypertension',1,'G24z0',NULL,'Secondary renovascular hypertension NOS'),('hypertension',1,'G20..',NULL,'Primary hypertension'),('hypertension',1,'G202.',NULL,'Systolic hypertension'),('hypertension',1,'G20z.',NULL,'Essential hypertension NOS'),('hypertension',1,'XE0Uc',NULL,'Primary hypertension'),('hypertension',1,'XE0W8',NULL,'Hypertension'),('hypertension',1,'XSDSb',NULL,'Diastolic hypertension'),('hypertension',1,'Xa0Cs',NULL,'Labile hypertension'),('hypertension',1,'Xa3fQ',NULL,'Malignant hypertension'),('hypertension',1,'XaZWm',NULL,'Stage 1 hypertension'),('hypertension',1,'XaZWn',NULL,'Severe hypertension'),('hypertension',1,'XaZbz',NULL,'Stage 2 hypertension (NICE - National Institute for Health and Clinical Excellence 2011)'),('hypertension',1,'XaZzo',NULL,'Nocturnal hypertension'),('hypertension',1,'G2...',NULL,'Hypertensive disease'),('hypertension',1,'G200.',NULL,'Malignant essential hypertension'),('hypertension',1,'G201.',NULL,'Benign essential hypertension'),('hypertension',1,'XE0Ud',NULL,'Essential hypertension NOS'),('hypertension',1,'Xa41E',NULL,'Maternal hypertension'),('hypertension',1,'Xab9L',NULL,'Stage 1 hypertension (NICE 2011) without evidence of end organ damage'),('hypertension',1,'Xab9M',NULL,'Stage 1 hypertension (NICE 2011) with evidence of end organ damage'),('hypertension',1,'G2y..',NULL,'Other specified hypertensive disease'),('hypertension',1,'G2z..',NULL,'Hypertensive disease NOS'),('hypertension',1,'Gyu2.',NULL,'[X]Hypertensive diseases'),('hypertension',1,'XM19D',NULL,'[EDTA] Renal vascular disease due to hypertension (no primary renal disease) associated with renal failure'),('hypertension',1,'XM19E',NULL,'[EDTA] Renal vascular disease due to malignant hypertension (no primary renal disease) associated with renal failure');
INSERT INTO #codesctv3
VALUES ('alcohol-light-drinker',1,'1362.00',NULL,'Trivial drinker - <1u/day');
INSERT INTO #codesctv3
VALUES ('alcohol-non-drinker',1,'1361.',NULL,'Teetotaller'),('alcohol-non-drinker',1,'136M.',NULL,'Current non-drinker');
INSERT INTO #codesctv3
VALUES ('bmi',1,'22K..',NULL,'Body Mass Index'),('bmi',1,'22K1.',NULL,'Body Mass Index normal K/M2'),('bmi',1,'22K2.',NULL,'Body Mass Index high K/M2'),('bmi',1,'22K3.',NULL,'Body Mass Index low K/M2'),('bmi',1,'22K4.',NULL,'Body mass index index 25-29 - overweight'),('bmi',1,'22K5.',NULL,'Body mass index 30+ - obesity'),('bmi',1,'X76CO',NULL,'Quetelet index'),('bmi',1,'Xa7wG',NULL,'Observation of body mass index'),('bmi',1,'Xaa0k',NULL,'Childhood obesity'),('bmi',1,'Xaatm',NULL,'Child BMI centile'),('bmi',1,'Xabdn',NULL,'Downs syndrome BMI centile'),('bmi',1,'XabHx',NULL,'Obese class I (BMI 30.0-34.9)'),('bmi',1,'XabHy',NULL,'Obese class II (BMI 35.0-39.9)'),('bmi',1,'XabHz',NULL,'Obese cls III (BMI eq/gr 40.0)'),('bmi',1,'XabSe',NULL,'Child BMI < 0.4th centile'),('bmi',1,'XabSf',NULL,'Child BMI 0.4th-1.9th centile'),('bmi',1,'XabSg',NULL,'Child BMI on 2nd centile'),('bmi',1,'XabSh',NULL,'Child BMI 3rd-8th centile'),('bmi',1,'XabSj',NULL,'Child BMI on 9th centile'),('bmi',1,'XabSk',NULL,'Child BMI 10th-24th centile'),('bmi',1,'XabSl',NULL,'Child BMI on 25th centile'),('bmi',1,'XabSm',NULL,'Child BMI 26th-49th centile'),('bmi',1,'XabSn',NULL,'Child BMI on 50th centile'),('bmi',1,'XabTe',NULL,'Child BMI on 75th centile'),('bmi',1,'XabTf',NULL,'Child BMI 76th-90th centile'),('bmi',1,'XabTg',NULL,'Child BMI on 91st centile'),('bmi',1,'XabTh',NULL,'Child BMI 92nd-97th centile'),('bmi',1,'XabTi',NULL,'Child BMI on 98th centile'),('bmi',1,'XabTj',NULL,'Child BMI 98.1-99.6 centile'),('bmi',1,'XabTk',NULL,'Child BMI > 99.6th centile'),('bmi',1,'XabTZ',NULL,'Child BMI 51st-74th centile'),('bmi',1,'XaCDR',NULL,'Body mass index less than 20'),('bmi',1,'XaJJH',NULL,'BMI 40+ - severely obese'),('bmi',1,'XaJqk',NULL,'Body mass index 20-24 - normal'),('bmi',1,'XaVwA',NULL,'Body mass index centile'),('bmi',1,'XaZck',NULL,'Baseline BMI centile'),('bmi',1,'XaZcl',NULL,'Baseline body mass index'),('bmi',2,'22K..',NULL,'Body Mass Index');
INSERT INTO #codesctv3
VALUES ('smoking-status-current',1,'1373.',NULL,'Lt cigaret smok, 1-9 cigs/day'),('smoking-status-current',1,'1374.',NULL,'Mod cigaret smok, 10-19 cigs/d'),('smoking-status-current',1,'1375.',NULL,'Hvy cigaret smok, 20-39 cigs/d'),('smoking-status-current',1,'1376.',NULL,'Very hvy cigs smoker,40+cigs/d'),('smoking-status-current',1,'137C.',NULL,'Keeps trying to stop smoking'),('smoking-status-current',1,'137D.',NULL,'Admitted tobacco cons untrue ?'),('smoking-status-current',1,'137G.',NULL,'Trying to give up smoking'),('smoking-status-current',1,'137H.',NULL,'Pipe smoker'),('smoking-status-current',1,'137J.',NULL,'Cigar smoker'),('smoking-status-current',1,'137M.',NULL,'Rolls own cigarettes'),('smoking-status-current',1,'137P.',NULL,'Cigarette smoker'),('smoking-status-current',1,'137Q.',NULL,'Smoking started'),('smoking-status-current',1,'137R.',NULL,'Current smoker'),('smoking-status-current',1,'137Z.',NULL,'Tobacco consumption NOS'),('smoking-status-current',1,'Ub1tI',NULL,'Cigarette consumption'),('smoking-status-current',1,'Ub1tJ',NULL,'Cigar consumption'),('smoking-status-current',1,'Ub1tK',NULL,'Pipe tobacco consumption'),('smoking-status-current',1,'XaBSp',NULL,'Smoking restarted'),('smoking-status-current',1,'XaIIu',NULL,'Smoking reduced'),('smoking-status-current',1,'XaIkW',NULL,'Thinking about stop smoking'),('smoking-status-current',1,'XaIkX',NULL,'Ready to stop smoking'),('smoking-status-current',1,'XaIkY',NULL,'Not interested stop smoking'),('smoking-status-current',1,'XaItg',NULL,'Reason for restarting smoking'),('smoking-status-current',1,'XaIuQ',NULL,'Cigarette pack-years'),('smoking-status-current',1,'XaJX2',NULL,'Min from wake to 1st tobac con'),('smoking-status-current',1,'XaWNE',NULL,'Failed attempt to stop smoking'),('smoking-status-current',1,'XaZIE',NULL,'Waterpipe tobacco consumption'),('smoking-status-current',1,'XE0og',NULL,'Tobacco smoking consumption'),('smoking-status-current',1,'XE0oq',NULL,'Cigarette smoker'),('smoking-status-current',1,'XE0or',NULL,'Smoking started');
INSERT INTO #codesctv3
VALUES ('smoking-status-currently-not',1,'Ub0oq',NULL,'Non-smoker'),('smoking-status-currently-not',1,'137L.',NULL,'Current non-smoker');
INSERT INTO #codesctv3
VALUES ('smoking-status-ex',1,'1378.',NULL,'Ex-light smoker (1-9/day)'),('smoking-status-ex',1,'1379.',NULL,'Ex-moderate smoker (10-19/day)'),('smoking-status-ex',1,'137A.',NULL,'Ex-heavy smoker (20-39/day)'),('smoking-status-ex',1,'137B.',NULL,'Ex-very heavy smoker (40+/day)'),('smoking-status-ex',1,'137F.',NULL,'Ex-smoker - amount unknown'),('smoking-status-ex',1,'137K.',NULL,'Stopped smoking'),('smoking-status-ex',1,'137N.',NULL,'Ex-pipe smoker'),('smoking-status-ex',1,'137O.',NULL,'Ex-cigar smoker'),('smoking-status-ex',1,'137T.',NULL,'Date ceased smoking'),('smoking-status-ex',1,'Ub1na',NULL,'Ex-smoker'),('smoking-status-ex',1,'Xa1bv',NULL,'Ex-cigarette smoker'),('smoking-status-ex',1,'XaIr7',NULL,'Smoking free weeks'),('smoking-status-ex',1,'XaKlS',NULL,'[V]PH of tobacco abuse'),('smoking-status-ex',1,'XaQ8V',NULL,'Ex roll-up cigarette smoker'),('smoking-status-ex',1,'XaQzw',NULL,'Recently stopped smoking'),('smoking-status-ex',1,'XE0ok',NULL,'Ex-light cigaret smok, 1-9/day'),('smoking-status-ex',1,'XE0ol',NULL,'Ex-mod cigaret smok, 10-19/day'),('smoking-status-ex',1,'XE0om',NULL,'Ex-heav cigaret smok,20-39/day'),('smoking-status-ex',1,'XE0on',NULL,'Ex-very hv cigaret smk,40+/day');
INSERT INTO #codesctv3
VALUES ('smoking-status-ex-trivial',1,'XE0oj',NULL,'Ex-triv cigaret smoker, <1/day'),('smoking-status-ex-trivial',1,'1377.',NULL,'Ex-trivial smoker (<1/day)');
INSERT INTO #codesctv3
VALUES ('smoking-status-never',1,'XE0oh',NULL,'Never smoked tobacco'),('smoking-status-never',1,'1371.',NULL,'Never smoked tobacco');
INSERT INTO #codesctv3
VALUES ('smoking-status-passive',1,'137I.',NULL,'Passive smoker'),('smoking-status-passive',1,'Ub0pe',NULL,'Exposed to tobacco smoke at work'),('smoking-status-passive',1,'Ub0pf',NULL,'Exposed to tobacco smoke at home'),('smoking-status-passive',1,'Ub0pg',NULL,'Exposed to tobacco smoke in public places'),('smoking-status-passive',1,'13WF4',NULL,'Passive smoking risk');
INSERT INTO #codesctv3
VALUES ('smoking-status-trivial',1,'XagO3',NULL,'Occasional tobacco smoker'),('smoking-status-trivial',1,'XE0oi',NULL,'Triv cigaret smok, < 1 cig/day'),('smoking-status-trivial',1,'1372.',NULL,'Trivial smoker - < 1 cig/day');
INSERT INTO #codesctv3
VALUES ('covid-vaccination',1,'Y210d',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'Y29e7',NULL,'Administration of first dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'Y29e8',NULL,'Administration of second dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'Y2a0e',NULL,'SARS-2 Coronavirus vaccine'),('covid-vaccination',1,'Y2a0f',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech) part 1'),('covid-vaccination',1,'Y2a3a',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech) part 2'),('covid-vaccination',1,'65F06',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccination'),('covid-vaccination',1,'65F09',NULL,'Administration of third dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'65F0A',NULL,'Administration of fourth dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'9bJ..',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech)'),('covid-vaccination',1,'Y2a10',NULL,'COVID-19 Vac AstraZeneca (ChAdOx1 S recomb) 5x10000000000 viral particles/0.5ml dose sol for inj MDV part 1'),('covid-vaccination',1,'Y2a39',NULL,'COVID-19 Vac AstraZeneca (ChAdOx1 S recomb) 5x10000000000 viral particles/0.5ml dose sol for inj MDV part 2'),('covid-vaccination',1,'Y2b9d',NULL,'COVID-19 mRNA (nucleoside modified) Vaccine Moderna 0.1mg/0.5mL dose dispersion for injection multidose vials part 2'),('covid-vaccination',1,'Y2f45',NULL,'Administration of third dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'Y2f48',NULL,'Administration of fourth dose of SARS-CoV-2 vaccine'),('covid-vaccination',1,'Y2f57',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech) booster'),('covid-vaccination',1,'Y31cc',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) antigen vaccination'),('covid-vaccination',1,'Y31e6',NULL,'Administration of SARS-CoV-2 mRNA vaccine'),('covid-vaccination',1,'Y31e7',NULL,'Administration of first dose of SARS-CoV-2 mRNA vaccine'),('covid-vaccination',1,'Y31e8',NULL,'Administration of second dose of SARS-CoV-2 mRNA vaccine')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesctv3;

IF OBJECT_ID('tempdb..#codessnomed') IS NOT NULL DROP TABLE #codessnomed;
CREATE TABLE #codessnomed (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codessnomed
VALUES ('bmi',1,'6497000',NULL,'Decreased body mass index (finding)'),('bmi',1,'35425004',NULL,'Normal body mass index (finding)'),('bmi',1,'48499001',NULL,'Increased body mass index (finding)'),('bmi',1,'162863004',NULL,'Body mass index 25-29 - overweight'),('bmi',1,'162864005',NULL,'BMI 30+ - obesity'),('bmi',1,'301331008',NULL,'Observation of body mass index'),('bmi',1,'310252000',NULL,'BMI less than 20'),('bmi',1,'408512008',NULL,'Body mass index 40+ - morbidly obese'),('bmi',1,'412768003',NULL,'Body mass index 20-24 - normal'),('bmi',1,'427090001',NULL,'Body mass index less than 16.5'),('bmi',1,'450451007',NULL,'Childhood overweight BMI greater than 85 percentile'),('bmi',1,'722595002',NULL,'Overweight in adulthood with BMI of 25 or more but less than 30'),('bmi',1,'920141000000102',NULL,'Child BMI (body mass index) less than 0.4th centile'),('bmi',1,'920161000000101',NULL,'Child BMI (body mass index) 0.4th-1.9th centile'),('bmi',1,'920181000000105',NULL,'Child BMI (body mass index) on 2nd centile'),('bmi',1,'920201000000109',NULL,'Child BMI (body mass index) 3rd-8th centile'),('bmi',1,'920231000000103',NULL,'Child BMI (body mass index) on 9th centile'),('bmi',1,'920251000000105',NULL,'Child BMI (body mass index) 10th-24th centile'),('bmi',1,'920271000000101',NULL,'Child BMI (body mass index) on 25th centile'),('bmi',1,'920291000000102',NULL,'Child BMI (body mass index) 26th-49th centile'),('bmi',1,'920311000000101',NULL,'Child BMI (body mass index) on 50th centile'),('bmi',1,'920841000000108',NULL,'Child BMI (body mass index) 51st-74th centile'),('bmi',1,'920931000000108',NULL,'Child BMI (body mass index) on 75th centile'),('bmi',1,'920951000000101',NULL,'Child BMI (body mass index) 76th-90th centile'),('bmi',1,'920971000000105',NULL,'Child BMI (body mass index) on 91st centile'),('bmi',1,'920991000000109',NULL,'Child BMI (body mass index) 92nd-97th centile'),('bmi',1,'921011000000105',NULL,'Child BMI (body mass index) on 98th centile'),('bmi',1,'921031000000102',NULL,'Child BMI (body mass index) 98.1st-99.6th centile'),('bmi',1,'921051000000109',NULL,'Child BMI (body mass index) greater than 99.6th centile'),('bmi',1,'914721000000105',NULL,'Obese class I (body mass index 30.0 - 34.9)'),('bmi',1,'914731000000107',NULL,'Obese class II (body mass index 35.0 - 39.9)'),('bmi',1,'914741000000103',NULL,'Obese class III (body mass index equal to or greater than 40.0)'),('bmi',1,'443371000124107',NULL,'Body mass index 30.00 to 34.99'),('bmi',1,'443381000124105',NULL,'Body mass index 35.00 to 39.99'),('bmi',1,'60621009',NULL,'Quetelet index'),('bmi',1,'846931000000101',NULL,'Baseline BMI (body mass index)'),('bmi',1,'852451000000103',NULL,'Maximum body mass index (observable entity)'),('bmi',1,'852461000000100',NULL,'Minimum body mass index (observable entity)'),('bmi',1,'446974000',NULL,'Body mass index centile'),('bmi',1,'846911000000109',NULL,'Baseline BMI (body mass index) centile'),('bmi',1,'896691000000102',NULL,'Child BMI (body mass index) centile'),('bmi',1,'926011000000101',NULL,'Downs syndrome BMI (body mass index) centile'),('bmi',1,'722562008',NULL,'Foetal or neonatal effect or suspected effect of maternal obesity with adult body mass index 30 or greater but less than 40'),('bmi',1,'722563003',NULL,'Foetal or neonatal effect of maternal obesity with adult body mass index equal to or greater than 40'),('bmi',1,'705131003',NULL,'Child at risk for overweight body mass index greater than 85 percentile'),('bmi',1,'43991000119102',NULL,'History of childhood obesity BMI 95-100 percentile'),('bmi',1,'698094009',NULL,'Calculation of body mass index'),('bmi',1,'444862003',NULL,'Childhood obesity BMI 95-100 percentile'),('bmi',2,'301331008',NULL,'Finding of body mass index (finding)');
INSERT INTO #codessnomed
VALUES ('smoking-status-current',1,'266929003',NULL,'Smoking started (life style)'),('smoking-status-current',1,'836001000000109',NULL,'Waterpipe tobacco consumption (observable entity)'),('smoking-status-current',1,'77176002',NULL,'Smoker (life style)'),('smoking-status-current',1,'65568007',NULL,'Cigarette smoker (life style)'),('smoking-status-current',1,'394873005',NULL,'Not interested in stopping smoking (finding)'),('smoking-status-current',1,'394872000',NULL,'Ready to stop smoking (finding)'),('smoking-status-current',1,'394871007',NULL,'Thinking about stopping smoking (observable entity)'),('smoking-status-current',1,'266918002',NULL,'Tobacco smoking consumption (observable entity)'),('smoking-status-current',1,'230057008',NULL,'Cigar consumption (observable entity)'),('smoking-status-current',1,'230056004',NULL,'Cigarette consumption (observable entity)'),('smoking-status-current',1,'160623006',NULL,'Smoking: [started] or [restarted]'),('smoking-status-current',1,'160622001',NULL,'Smoker (& cigarette)'),('smoking-status-current',1,'160619003',NULL,'Rolls own cigarettes (finding)'),('smoking-status-current',1,'160616005',NULL,'Trying to give up smoking (finding)'),('smoking-status-current',1,'160612007',NULL,'Keeps trying to stop smoking (finding)'),('smoking-status-current',1,'160606002',NULL,'Very heavy cigarette smoker (40+ cigs/day) (life style)'),('smoking-status-current',1,'160605003',NULL,'Heavy cigarette smoker (20-39 cigs/day) (life style)'),('smoking-status-current',1,'160604004',NULL,'Moderate cigarette smoker (10-19 cigs/day) (life style)'),('smoking-status-current',1,'160603005',NULL,'Light cigarette smoker (1-9 cigs/day) (life style)'),('smoking-status-current',1,'59978006',NULL,'Cigar smoker (life style)'),('smoking-status-current',1,'446172000',NULL,'Failed attempt to stop smoking (finding)'),('smoking-status-current',1,'413173009',NULL,'Minutes from waking to first tobacco consumption (observable entity)'),('smoking-status-current',1,'401201003',NULL,'Cigarette pack-years (observable entity)'),('smoking-status-current',1,'401159003',NULL,'Reason for restarting smoking (observable entity)'),('smoking-status-current',1,'308438006',NULL,'Smoking restarted (life style)'),('smoking-status-current',1,'230058003',NULL,'Pipe tobacco consumption (observable entity)'),('smoking-status-current',1,'134406006',NULL,'Smoking reduced (observable entity)'),('smoking-status-current',1,'82302008',NULL,'Pipe smoker (life style)');
INSERT INTO #codessnomed
VALUES ('smoking-status-currently-not',1,'160618006',NULL,'Current non-smoker (life style)'),('smoking-status-currently-not',1,'8392000',NULL,'Non-smoker (life style)');
INSERT INTO #codessnomed
VALUES ('smoking-status-ex',1,'160617001',NULL,'Stopped smoking (life style)'),('smoking-status-ex',1,'160620009',NULL,'Ex-pipe smoker (life style)'),('smoking-status-ex',1,'160621008',NULL,'Ex-cigar smoker (life style)'),('smoking-status-ex',1,'160625004',NULL,'Date ceased smoking (observable entity)'),('smoking-status-ex',1,'266922007',NULL,'Ex-light cigarette smoker (1-9/day) (life style)'),('smoking-status-ex',1,'266923002',NULL,'Ex-moderate cigarette smoker (10-19/day) (life style)'),('smoking-status-ex',1,'266924008',NULL,'Ex-heavy cigarette smoker (20-39/day) (life style)'),('smoking-status-ex',1,'266925009',NULL,'Ex-very heavy cigarette smoker (40+/day) (life style)'),('smoking-status-ex',1,'281018007',NULL,'Ex-cigarette smoker (life style)'),('smoking-status-ex',1,'395177003',NULL,'Smoking free weeks (observable entity)'),('smoking-status-ex',1,'492191000000103',NULL,'Ex roll-up cigarette smoker (finding)'),('smoking-status-ex',1,'517211000000106',NULL,'Recently stopped smoking (finding)'),('smoking-status-ex',1,'8517006',NULL,'Ex-smoker (life style)');
INSERT INTO #codessnomed
VALUES ('smoking-status-ex-trivial',1,'266921000',NULL,'Ex-trivial cigarette smoker (<1/day) (life style)');
INSERT INTO #codessnomed
VALUES ('smoking-status-never',1,'160601007',NULL,'Non-smoker (& [never smoked tobacco])'),('smoking-status-never',1,'266919005',NULL,'Never smoked tobacco (life style)');
INSERT INTO #codessnomed
VALUES ('smoking-status-passive',1,'43381005',NULL,'Passive smoker (finding)'),('smoking-status-passive',1,'161080002',NULL,'Passive smoking risk (environment)'),('smoking-status-passive',1,'228523000',NULL,'Exposed to tobacco smoke at work (finding)'),('smoking-status-passive',1,'228524006',NULL,'Exposed to tobacco smoke at home (finding)'),('smoking-status-passive',1,'228525007',NULL,'Exposed to tobacco smoke in public places (finding)'),('smoking-status-passive',1,'713142003',NULL,'At risk from passive smoking (finding)'),('smoking-status-passive',1,'722451000000101',NULL,'Passive smoking (qualifier value)');
INSERT INTO #codessnomed
VALUES ('smoking-status-trivial',1,'266920004',NULL,'Trivial cigarette smoker (less than one cigarette/day) (life style)'),('smoking-status-trivial',1,'428041000124106',NULL,'Occasional tobacco smoker (finding)');
INSERT INTO #codessnomed
VALUES ('covid-vaccination',1,'1240491000000103',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'2807821000000115',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'840534001',NULL,'Severe acute respiratory syndrome coronavirus 2 vaccination (procedure)')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codessnomed;

IF OBJECT_ID('tempdb..#codesemis') IS NOT NULL DROP TABLE #codesemis;
CREATE TABLE #codesemis (
  [concept] [varchar](255) NOT NULL,
  [version] INT NOT NULL,
	[code] [varchar](20) COLLATE Latin1_General_CS_AS NOT NULL,
	[term] [varchar](20) COLLATE Latin1_General_CS_AS NULL,
	[description] [varchar](255) NULL
) ON [PRIMARY];

INSERT INTO #codesemis
VALUES ('diabetes',1,'^ESCTGE801661',NULL,'Gestational diabetes, delivered'),('diabetes',1,'^ESCTGE801662',NULL,'Gestational diabetes mellitus complicating pregnancy'),('diabetes',1,'^ESCTMA257526',NULL,'Maternal diabetes mellitus with hypoglycaemia affecting foetus OR newborn'),('diabetes',1,'EMISQNU2',NULL,'Number of admissions for ketoacidosis'),('diabetes',1,'ESCTDI20',NULL,'Diabetic ketoacidosis without coma'),('diabetes',1,'ESCTDI22',NULL,'Diabetic severe hyperglycaemia'),('diabetes',1,'ESCTDI23',NULL,'Diabetic hyperosmolar non-ketotic state'),('diabetes',1,'ESCTDR3',NULL,'Drug-induced diabetes mellitus'),('diabetes',1,'ESCTSE11',NULL,'Secondary endocrine diabetes mellitus');
INSERT INTO #codesemis
VALUES ('hypertension',1,'EMISNQST25',NULL,'Stage 2 hypertension'),('hypertension',1,'^ESCTMA364280',NULL,'Malignant hypertension'),('hypertension',1,'EMISNQST25',NULL,'Stage 2 hypertension');
INSERT INTO #codesemis
VALUES ('bmi',1,'EMISNQBM1',NULL,'BMI centile');
INSERT INTO #codesemis
VALUES ('covid-vaccination',1,'^ESCT1348323',NULL,'Administration of first dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'^ESCT1348324',NULL,'Administration of first dose of 2019-nCoV (novel coronavirus) vaccine'),('covid-vaccination',1,'COCO138186NEMIS',NULL,'COVID-19 mRNA Vaccine BNT162b2 30micrograms/0.3ml dose concentrate for suspension for injection multidose vials (Pfizer-BioNTech) (Pfizer-BioNTech)'),('covid-vaccination',1,'^ESCT1348325',NULL,'Administration of second dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'^ESCT1348326',NULL,'Administration of second dose of 2019-nCoV (novel coronavirus) vaccine'),('covid-vaccination',1,'^ESCT1428354',NULL,'Administration of third dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'^ESCT1428342',NULL,'Administration of fourth dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'^ESCT1428348',NULL,'Administration of fifth dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'^ESCT1348298',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccination'),('covid-vaccination',1,'^ESCT1348301',NULL,'COVID-19 vaccination'),('covid-vaccination',1,'^ESCT1299050',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'^ESCT1301222',NULL,'SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccination'),('covid-vaccination',1,'CODI138564NEMIS',NULL,'Covid-19 mRna (nucleoside modified) Vaccine Moderna  Dispersion for injection  0.1 mg/0.5 ml dose, multidose vial'),('covid-vaccination',1,'TASO138184NEMIS',NULL,'Covid-19 Vaccine AstraZeneca (ChAdOx1 S recombinant)  Solution for injection  5x10 billion viral particle/0.5 ml multidose vial'),('covid-vaccination',1,'PCSDT18491_1375',NULL,'Administration of first dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'PCSDT18491_1376',NULL,'Administration of second dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'PCSDT18491_716',NULL,'Administration of second dose of SARS-CoV-2 vacc'),('covid-vaccination',1,'PCSDT18491_903',NULL,'Administration of first dose of SARS-CoV-2 vacccine'),('covid-vaccination',1,'PCSDT3370_2254',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'PCSDT3919_2185',NULL,'Administration of first dose of SARS-CoV-2 vacccine'),('covid-vaccination',1,'PCSDT3919_662',NULL,'Administration of second dose of SARS-CoV-2 vacc'),('covid-vaccination',1,'PCSDT4803_1723',NULL,'2019-nCoV (novel coronavirus) vaccination'),('covid-vaccination',1,'PCSDT5823_2264',NULL,'Administration of second dose of SARS-CoV-2 vacc'),('covid-vaccination',1,'PCSDT5823_2757',NULL,'Administration of second dose of SARS-CoV-2 (severe acute respiratory syndrome coronavirus 2) vaccine'),('covid-vaccination',1,'PCSDT5823_2902',NULL,'Administration of first dose of SARS-CoV-2 vacccine'),('covid-vaccination',1,'^ESCT1348300',NULL,'Severe acute respiratory syndrome coronavirus 2 vaccination'),('covid-vaccination',1,'ASSO138368NEMIS',NULL,'COVID-19 Vaccine Janssen (Ad26.COV2-S [recombinant]) 0.5ml dose suspension for injection multidose vials (Janssen-Cilag Ltd)'),('covid-vaccination',1,'COCO141057NEMIS',NULL,'Comirnaty Children 5-11 years COVID-19 mRNA Vaccine 10micrograms/0.2ml dose concentrate for dispersion for injection multidose vials (Pfizer Ltd)'),('covid-vaccination',1,'COSO141059NEMIS',NULL,'COVID-19 Vaccine Covishield (ChAdOx1 S [recombinant]) 5x10,000,000,000 viral particles/0.5ml dose solution for injection multidose vials (Serum Institute of India)'),('covid-vaccination',1,'COSU138776NEMIS',NULL,'COVID-19 Vaccine Valneva (inactivated adjuvanted whole virus) 40antigen units/0.5ml dose suspension for injection multidose vials (Valneva UK Ltd)'),('covid-vaccination',1,'COSU138943NEMIS',NULL,'COVID-19 Vaccine Novavax (adjuvanted) 5micrograms/0.5ml dose suspension for injection multidose vials (Baxter Oncology GmbH)'),('covid-vaccination',1,'COSU141008NEMIS',NULL,'CoronaVac COVID-19 Vaccine (adjuvanted) 600U/0.5ml dose suspension for injection vials (Sinovac Life Sciences)'),('covid-vaccination',1,'COSU141037NEMIS',NULL,'COVID-19 Vaccine Sinopharm BIBP (inactivated adjuvanted) 6.5U/0.5ml dose suspension for injection vials (Beijing Institute of Biological Products)')

INSERT INTO #AllCodes
SELECT [concept], [version], [code], [description] from #codesemis;


IF OBJECT_ID('tempdb..#TempRefCodes') IS NOT NULL DROP TABLE #TempRefCodes;
CREATE TABLE #TempRefCodes (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, version INT NOT NULL, [description] VARCHAR(255));

-- Read v2 codes
INSERT INTO #TempRefCodes
SELECT PK_Reference_Coding_ID, dcr.concept, dcr.[version], dcr.[description]
FROM [SharedCare].[Reference_Coding] rc
INNER JOIN #codesreadv2 dcr on dcr.code = rc.MainCode
WHERE CodingType='ReadCodeV2'
AND (dcr.term IS NULL OR dcr.term = rc.Term)
and PK_Reference_Coding_ID != -1;

-- CTV3 codes
INSERT INTO #TempRefCodes
SELECT PK_Reference_Coding_ID, dcc.concept, dcc.[version], dcc.[description]
FROM [SharedCare].[Reference_Coding] rc
INNER JOIN #codesctv3 dcc on dcc.code = rc.MainCode
WHERE CodingType='CTV3'
and PK_Reference_Coding_ID != -1;

-- EMIS codes with a FK Reference Coding ID
INSERT INTO #TempRefCodes
SELECT FK_Reference_Coding_ID, ce.concept, ce.[version], ce.[description]
FROM [SharedCare].[Reference_Local_Code] rlc
INNER JOIN #codesemis ce on ce.code = rlc.LocalCode
WHERE FK_Reference_Coding_ID != -1;

IF OBJECT_ID('tempdb..#TempSNOMEDRefCodes') IS NOT NULL DROP TABLE #TempSNOMEDRefCodes;
CREATE TABLE #TempSNOMEDRefCodes (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [version] INT NOT NULL, [description] VARCHAR(255));

-- SNOMED codes
INSERT INTO #TempSNOMEDRefCodes
SELECT PK_Reference_SnomedCT_ID, dcs.concept, dcs.[version], dcs.[description]
FROM SharedCare.Reference_SnomedCT rs
INNER JOIN #codessnomed dcs on dcs.code = rs.ConceptID;

-- EMIS codes with a FK SNOMED ID but without a FK Reference Coding ID
INSERT INTO #TempSNOMEDRefCodes
SELECT FK_Reference_SnomedCT_ID, ce.concept, ce.[version], ce.[description]
FROM [SharedCare].[Reference_Local_Code] rlc
INNER JOIN #codesemis ce on ce.code = rlc.LocalCode
WHERE FK_Reference_Coding_ID = -1
AND FK_Reference_SnomedCT_ID != -1;

-- De-duped tables
IF OBJECT_ID('tempdb..#CodeSets') IS NOT NULL DROP TABLE #CodeSets;
CREATE TABLE #CodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#SnomedSets') IS NOT NULL DROP TABLE #SnomedSets;
CREATE TABLE #SnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#VersionedCodeSets') IS NOT NULL DROP TABLE #VersionedCodeSets;
CREATE TABLE #VersionedCodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, Concept VARCHAR(255), [Version] INT, [description] VARCHAR(255));

IF OBJECT_ID('tempdb..#VersionedSnomedSets') IS NOT NULL DROP TABLE #VersionedSnomedSets;
CREATE TABLE #VersionedSnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, Concept VARCHAR(255), [Version] INT, [description] VARCHAR(255));

INSERT INTO #VersionedCodeSets
SELECT DISTINCT * FROM #TempRefCodes;

INSERT INTO #VersionedSnomedSets
SELECT DISTINCT * FROM #TempSNOMEDRefCodes;

INSERT INTO #CodeSets
SELECT FK_Reference_Coding_ID, c.concept, [description]
FROM #VersionedCodeSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM #VersionedCodeSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

INSERT INTO #SnomedSets
SELECT FK_Reference_SnomedCT_ID, c.concept, [description]
FROM #VersionedSnomedSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM #VersionedSnomedSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

-- >>> Following code sets injected: hypertension v1/diabetes v1


-- PATIENTS WITH HYPERTENSION OR DIABETES ARE AT RISK OF CKD, SO WE NOW FIND THE EARLIEST DIAGNOSIS OF THESE TWO CONDITIONS

IF OBJECT_ID('tempdb..#hypertension') IS NOT NULL DROP TABLE #hypertension;
SELECT FK_Patient_Link_ID, MIN(EventDate) as EarliestDiagnosis
INTO #hypertension
FROM [RLS].[vw_GP_Events] gp
WHERE  gp.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND (
	gp.FK_Reference_SnomedCT_ID IN (SELECT FK_Reference_SnomedCT_ID FROM #VersionedSnomedSets WHERE Concept = 'hypertension' AND [Version]=1) OR
    gp.FK_Reference_Coding_ID IN (SELECT FK_Reference_Coding_ID FROM #VersionedCodeSets WHERE Concept = 'hypertension' AND [Version]=1)
	)
GROUP BY FK_Patient_Link_ID

IF OBJECT_ID('tempdb..#diabetes') IS NOT NULL DROP TABLE #diabetes;
SELECT FK_Patient_Link_ID, MIN(EventDate) as EarliestDiagnosis
INTO #diabetes
FROM [RLS].[vw_GP_Events] gp
WHERE  gp.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND (
	gp.FK_Reference_SnomedCT_ID IN (SELECT FK_Reference_SnomedCT_ID FROM #VersionedSnomedSets WHERE Concept = 'diabetes' AND [Version]=1) OR
    gp.FK_Reference_Coding_ID IN (SELECT FK_Reference_Coding_ID FROM #VersionedCodeSets WHERE Concept = 'diabetes' AND [Version]=1)
	)
GROUP BY FK_Patient_Link_ID

-- CREATE COHORT

IF OBJECT_ID('tempdb..#Cohort') IS NOT NULL DROP TABLE #Cohort;
SELECT p.FK_Patient_Link_ID,
		p.EthnicMainGroup,
		p.DeathDate,
		AtRiskOfCKD = 1
INTO #Cohort
FROM #Patients p
WHERE p.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #hypertension where EarliestDiagnosis <= @StartDate)  -- at risk of CKD
	OR p.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #diabetes where EarliestDiagnosis <= @StartDate)  -- at risk of CKD

-- TABLE OF GP EVENTS FOR COHORT TO SPEED UP REUSABLE QUERIES

IF OBJECT_ID('tempdb..#PatientEventData') IS NOT NULL DROP TABLE #PatientEventData;
SELECT 
  FK_Patient_Link_ID,
  CAST(EventDate AS DATE) AS EventDate,
  SuppliedCode,
  FK_Reference_SnomedCT_ID,
  FK_Reference_Coding_ID,
  [Value]
INTO #PatientEventData
FROM [RLS].vw_GP_Events
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Cohort);

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------



--┌────────────────────┐
--│ COVID vaccinations │
--└────────────────────┘

-- OBJECTIVE: To obtain a table with first, second, third... etc vaccine doses per patient.

-- ASSUMPTIONS:
--	-	GP records can often be duplicated. The assumption is that if a patient receives
--    two vaccines within 14 days of each other then it is likely that both codes refer
--    to the same vaccine.
--  - The vaccine can appear as a procedure or as a medication. We assume that the
--    presence of either represents a vaccination

-- INPUT: Takes two parameters:
--	- gp-events-table: string - (table name) the name of the table containing the GP events. Usually is "RLS.vw_GP_Events" but can be anything with the columns: FK_Patient_Link_ID, EventDate, and SuppliedCode
--	- gp-medications-table: string - (table name) the name of the table containing the GP medications. Usually is "RLS.vw_GP_Medications" but can be anything with the columns: FK_Patient_Link_ID, EventDate, and SuppliedCode

-- OUTPUT: A temp table as follows:
-- #COVIDVaccinations (FK_Patient_Link_ID, VaccineDate, DaysSinceFirstVaccine)
-- 	- FK_Patient_Link_ID - unique patient id
--	- VaccineDose1Date - date of first vaccine (YYYY-MM-DD)
--	-	VaccineDose2Date - date of second vaccine (YYYY-MM-DD)
--	-	VaccineDose3Date - date of third vaccine (YYYY-MM-DD)
--	-	VaccineDose4Date - date of fourth vaccine (YYYY-MM-DD)
--	-	VaccineDose5Date - date of fifth vaccine (YYYY-MM-DD)
--	-	VaccineDose6Date - date of sixth vaccine (YYYY-MM-DD)
--	-	VaccineDose7Date - date of seventh vaccine (YYYY-MM-DD)

-- Get patients with covid vaccine and earliest and latest date
-- >>> Following code sets injected: covid-vaccination v1


IF OBJECT_ID('tempdb..#VacEvents') IS NOT NULL DROP TABLE #VacEvents;
SELECT FK_Patient_Link_ID, CONVERT(DATE, EventDate) AS EventDate into #VacEvents
FROM #PatientEventData
WHERE SuppliedCode IN (
	SELECT [Code] FROM #AllCodes WHERE [Concept] = 'covid-vaccination' AND [Version] = 1
)
AND EventDate > '2020-12-01';

IF OBJECT_ID('tempdb..#VacMeds') IS NOT NULL DROP TABLE #VacMeds;
SELECT FK_Patient_Link_ID, CONVERT(DATE, MedicationDate) AS EventDate into #VacMeds
FROM RLS.vw_GP_Medications
WHERE SuppliedCode IN (
	SELECT [Code] FROM #AllCodes WHERE [Concept] = 'covid-vaccination' AND [Version] = 1
)
AND MedicationDate > '2020-12-01';

IF OBJECT_ID('tempdb..#COVIDVaccines') IS NOT NULL DROP TABLE #COVIDVaccines;
SELECT FK_Patient_Link_ID, EventDate into #COVIDVaccines FROM #VacEvents
UNION
SELECT FK_Patient_Link_ID, EventDate FROM #VacMeds;
--4426892 5m03

-- Tidy up
DROP TABLE #VacEvents;
DROP TABLE #VacMeds;

-- Get first vaccine dose
IF OBJECT_ID('tempdb..#VacTemp1') IS NOT NULL DROP TABLE #VacTemp1;
select FK_Patient_Link_ID, MIN(EventDate) AS VaccineDoseDate
into #VacTemp1
from #COVIDVaccines
group by FK_Patient_Link_ID;
--2046837

-- Get second vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp2') IS NOT NULL DROP TABLE #VacTemp2;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp2
from #VacTemp1 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--1810762

-- Get third vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp3') IS NOT NULL DROP TABLE #VacTemp3;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp3
from #VacTemp2 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--578468

-- Get fourth vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp4') IS NOT NULL DROP TABLE #VacTemp4;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp4
from #VacTemp3 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--1860

-- Get fifth vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp5') IS NOT NULL DROP TABLE #VacTemp5;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp5
from #VacTemp4 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--39

-- Get sixth vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp6') IS NOT NULL DROP TABLE #VacTemp6;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp6
from #VacTemp5 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--2

-- Get seventh vaccine dose (if exists) - assume dose within 14 days is same dose
IF OBJECT_ID('tempdb..#VacTemp7') IS NOT NULL DROP TABLE #VacTemp7;
select c.FK_Patient_Link_ID, MIN(c.EventDate) AS VaccineDoseDate
into #VacTemp7
from #VacTemp6 v
inner join #COVIDVaccines c on c.EventDate > DATEADD(day, 14, v.VaccineDoseDate) and c.FK_Patient_Link_ID = v.FK_Patient_Link_ID
group by c.FK_Patient_Link_ID;
--2

IF OBJECT_ID('tempdb..#COVIDVaccinations') IS NOT NULL DROP TABLE #COVIDVaccinations;
SELECT v1.FK_Patient_Link_ID, v1.VaccineDoseDate AS VaccineDose1Date,
v2.VaccineDoseDate AS VaccineDose2Date,
v3.VaccineDoseDate AS VaccineDose3Date,
v4.VaccineDoseDate AS VaccineDose4Date,
v5.VaccineDoseDate AS VaccineDose5Date,
v6.VaccineDoseDate AS VaccineDose6Date,
v7.VaccineDoseDate AS VaccineDose7Date
INTO #COVIDVaccinations
FROM #VacTemp1 v1
LEFT OUTER JOIN #VacTemp2 v2 ON v2.FK_Patient_Link_ID = v1.FK_Patient_Link_ID
LEFT OUTER JOIN #VacTemp3 v3 ON v3.FK_Patient_Link_ID = v1.FK_Patient_Link_ID
LEFT OUTER JOIN #VacTemp4 v4 ON v4.FK_Patient_Link_ID = v1.FK_Patient_Link_ID
LEFT OUTER JOIN #VacTemp5 v5 ON v5.FK_Patient_Link_ID = v1.FK_Patient_Link_ID
LEFT OUTER JOIN #VacTemp6 v6 ON v6.FK_Patient_Link_ID = v1.FK_Patient_Link_ID
LEFT OUTER JOIN #VacTemp7 v7 ON v7.FK_Patient_Link_ID = v1.FK_Patient_Link_ID;

-- Tidy up
DROP TABLE #VacTemp1;
DROP TABLE #VacTemp2;
DROP TABLE #VacTemp3;
DROP TABLE #VacTemp4;
DROP TABLE #VacTemp5;
DROP TABLE #VacTemp6;
DROP TABLE #VacTemp7;


--┌────────────────────┐
--│ Patient GP history │
--└────────────────────┘

-- OBJECTIVE: To produce a table showing the start and end dates for each practice the patient
--            has been registered at.

-- ASSUMPTIONS:
--	-	We do not have data on patients who move out of GM, though we do know that it happened. 
--    For these patients we record the GPPracticeCode as OutOfArea
--  - Where two adjacent time periods either overlap, or have a gap between them, we assume that
--    the most recent registration is more accurate and adjust the end date of the first time
--    period accordingly. This is an infrequent occurrence.

-- INPUT: No pre-requisites

-- OUTPUT: A temp table as follows:
-- #PatientGPHistory (FK_Patient_Link_ID, GPPracticeCode, StartDate, EndDate)
--	- FK_Patient_Link_ID - unique patient id
--	- GPPracticeCode - national GP practice id system
--	- StartDate - date the patient registered at the practice
--	- EndDate - date the patient left the practice

-- First let's get the raw data from the GP history table
IF OBJECT_ID('tempdb..#AllGPHistoryData') IS NOT NULL DROP TABLE #AllGPHistoryData;
SELECT 
	FK_Patient_Link_ID, CASE WHEN GPPracticeCode like 'ZZZ%' THEN 'OutOfArea' ELSE GPPracticeCode END AS GPPracticeCode, 
	CASE WHEN StartDate IS NULL THEN '1900-01-01' ELSE CAST(StartDate AS DATE) END AS StartDate, 
	CASE WHEN EndDate IS NULL THEN '2100-01-01' ELSE CAST(EndDate AS DATE) END AS EndDate 
INTO #AllGPHistoryData FROM rls.vw_Patient_GP_History
WHERE FK_Reference_Tenancy_ID=2 -- limit to GP feed makes it easier than trying to deal with the conflicting data coming from acute care
AND (StartDate < EndDate OR EndDate IS NULL) --Some time periods are instantaneous (start = end) - this ignores them
AND GPPracticeCode IS NOT NULL;
--4147852

IF OBJECT_ID('tempdb..#PatientGPHistory') IS NOT NULL DROP TABLE #PatientGPHistory;
CREATE TABLE #PatientGPHistory(FK_Patient_Link_ID BIGINT, GPPracticeCode NVARCHAR(50), StartDate DATE, EndDate DATE);

IF OBJECT_ID('tempdb..#AllGPHistoryDataOrdered') IS NOT NULL DROP TABLE #AllGPHistoryDataOrdered;
CREATE TABLE #AllGPHistoryDataOrdered(FK_Patient_Link_ID BIGINT, GPPracticeCode NVARCHAR(50), StartDate DATE, EndDate DATE, RowNumber INT);

IF OBJECT_ID('tempdb..#AllGPHistoryDataOrderedJoined') IS NOT NULL DROP TABLE #AllGPHistoryDataOrderedJoined;
CREATE TABLE #AllGPHistoryDataOrderedJoined(
  FK_Patient_Link_ID BIGINT,
  GP1 NVARCHAR(50),
  R1 INT,
  S1 DATE,
  E1 DATE,
  GP2 NVARCHAR(50),
  S2 DATE,
  E2 DATE,
  R2 INT,
);

-- Easier to get rid of everyone who only has one GP history entry
IF OBJECT_ID('tempdb..#PatientGPHistoryJustOneEntryIds') IS NOT NULL DROP TABLE #PatientGPHistoryJustOneEntryIds;
SELECT FK_Patient_Link_ID INTO #PatientGPHistoryJustOneEntryIds FROM #AllGPHistoryData
GROUP BY FK_Patient_Link_ID
HAVING COUNT(*) = 1;

-- Holding table for their data
IF OBJECT_ID('tempdb..#PatientGPHistoryJustOneEntry') IS NOT NULL DROP TABLE #PatientGPHistoryJustOneEntry;
SELECT * INTO #PatientGPHistoryJustOneEntry FROM #AllGPHistoryData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientGPHistoryJustOneEntryIds);

-- Remove from main table
DELETE FROM #AllGPHistoryData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #PatientGPHistoryJustOneEntryIds);

DECLARE @size INT;
SET @size = (SELECT COUNT(*) FROM #AllGPHistoryData) + 1;

WHILE(@size > (SELECT COUNT(*) FROM #AllGPHistoryData))
BEGIN
  SET @size = (SELECT COUNT(*) FROM #AllGPHistoryData);

  -- Add row numbers so we can join with next row
  TRUNCATE TABLE #AllGPHistoryDataOrdered;
  INSERT INTO #AllGPHistoryDataOrdered
  SELECT *, ROW_NUMBER() OVER (PARTITION BY FK_Patient_Link_ID ORDER BY StartDate) AS RowNumber from #AllGPHistoryData;

  -- Join each patient row with the next one, but only look at the odd numbers to avoid duplicating
  TRUNCATE TABLE #AllGPHistoryDataOrderedJoined;
  INSERT INTO #AllGPHistoryDataOrderedJoined
  SELECT 
    o1.FK_Patient_Link_ID,o1.GPPracticeCode AS GP1,o1.RowNumber AS R1, 
    o1.StartDate AS S1, o1.EndDate AS E1, o2.GPPracticeCode AS GP2, 
    o2.StartDate as S2, o2.EndDate as E2, o2.RowNumber as R2
  FROM #AllGPHistoryDataOrdered o1
  LEFT OUTER JOIN #AllGPHistoryDataOrdered o2 ON o1.FK_Patient_Link_ID = o2.FK_Patient_Link_ID AND o1.RowNumber = o2.RowNumber - 1
  WHERE o1.RowNumber % 2 = 1
  ORDER BY o1.FK_Patient_Link_ID DESC, o1.StartDate;

  -- If GP is the same, then merge the time periods
  TRUNCATE TABLE #PatientGPHistory;
  INSERT INTO #PatientGPHistory
  SELECT FK_Patient_Link_ID, GP1, S1, CASE WHEN E2 > E1 THEN E2 ELSE E1 END AS E
  FROM #AllGPHistoryDataOrderedJoined
  WHERE GP1 = GP2;

  -- If GP is different, first insert the GP2 record
  INSERT INTO #PatientGPHistory
  SELECT FK_Patient_Link_ID, GP2, S2, E2 FROM #AllGPHistoryDataOrderedJoined
  WHERE GP1 != GP2;

  --  then insert the GP1 record
  INSERT into #PatientGPHistory
  SELECT FK_Patient_Link_ID, GP1, S1, S2 FROM #AllGPHistoryDataOrderedJoined
  WHERE GP1 != GP2;

  -- If the GP2 is null, implies it's the last row and didn't have a subsequent
  -- row to match on, so we just put it back in the gp history table
  INSERT into #PatientGPHistory
  SELECT FK_Patient_Link_ID, GP1, S1, E1 FROM #AllGPHistoryDataOrderedJoined
  WHERE GP2 IS NULL;

  -- Nuke the AllGPHistoryData table
  TRUNCATE TABLE #AllGPHistoryData;

  -- Repopulate with the current "final" snapshot
  INSERT INTO #AllGPHistoryData
  SELECT * FROM #PatientGPHistory;

END

-- Finally re-add the people with only one record
INSERT INTO #PatientGPHistory
SELECT * FROM #PatientGPHistoryJustOneEntry;
--┌───────────────────────────────────────┐
--│ GET practice and ccg for each patient │
--└───────────────────────────────────────┘

-- OBJECTIVE:	For each patient to get the practice id that they are registered to, and 
--						the CCG name that the practice belongs to.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: Two temp tables as follows:
-- #PatientPractice (FK_Patient_Link_ID, GPPracticeCode)
--	- FK_Patient_Link_ID - unique patient id
--	- GPPracticeCode - the nationally recognised practice id for the patient
-- #PatientPracticeAndCCG (FK_Patient_Link_ID, GPPracticeCode, CCG)
--	- FK_Patient_Link_ID - unique patient id
--	- GPPracticeCode - the nationally recognised practice id for the patient
--	- CCG - the name of the patient's CCG

-- If patients have a tenancy id of 2 we take this as their most likely GP practice
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientPractice') IS NOT NULL DROP TABLE #PatientPractice;
SELECT FK_Patient_Link_ID, MIN(GPPracticeCode) as GPPracticeCode INTO #PatientPractice FROM RLS.vw_Patient
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
AND GPPracticeCode IS NOT NULL
GROUP BY FK_Patient_Link_ID;
-- 1298467 rows
-- 00:00:11

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedPatientsForPracticeCode') IS NOT NULL DROP TABLE #UnmatchedPatientsForPracticeCode;
SELECT FK_Patient_Link_ID INTO #UnmatchedPatientsForPracticeCode FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientPractice;
-- 12702 rows
-- 00:00:00

-- If every GPPracticeCode is the same for all their linked patient ids then we use that
INSERT INTO #PatientPractice
SELECT FK_Patient_Link_ID, MIN(GPPracticeCode) FROM RLS.vw_Patient
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedPatientsForPracticeCode)
AND GPPracticeCode IS NOT NULL
GROUP BY FK_Patient_Link_ID
HAVING MIN(GPPracticeCode) = MAX(GPPracticeCode);
-- 12141
-- 00:00:00

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedPatientsForPracticeCode;
INSERT INTO #UnmatchedPatientsForPracticeCode
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientPractice;
-- 561 rows
-- 00:00:00

-- If there is a unique most recent gp practice then we use that
INSERT INTO #PatientPractice
SELECT p.FK_Patient_Link_ID, MIN(p.GPPracticeCode) FROM RLS.vw_Patient p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM RLS.vw_Patient
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedPatientsForPracticeCode)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
WHERE p.GPPracticeCode IS NOT NULL
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(GPPracticeCode) = MAX(GPPracticeCode);
-- 15

--┌──────────────────┐
--│ CCG lookup table │
--└──────────────────┘

-- OBJECTIVE: To provide lookup table for CCG names. The GMCR provides the CCG id (e.g. '00T', '01G') but not 
--            the CCG name. This table can be used in other queries when the output is required to be a ccg 
--            name rather than an id.

-- INPUT: No pre-requisites

-- OUTPUT: A temp table as follows:
-- #CCGLookup (CcgId, CcgName)
-- 	- CcgId - Nationally recognised ccg id
--	- CcgName - Bolton, Stockport etc..

IF OBJECT_ID('tempdb..#CCGLookup') IS NOT NULL DROP TABLE #CCGLookup;
CREATE TABLE #CCGLookup (CcgId nchar(3), CcgName nvarchar(20));
INSERT INTO #CCGLookup VALUES ('01G', 'Salford'); 
INSERT INTO #CCGLookup VALUES ('00T', 'Bolton'); 
INSERT INTO #CCGLookup VALUES ('01D', 'HMR'); 
INSERT INTO #CCGLookup VALUES ('02A', 'Trafford'); 
INSERT INTO #CCGLookup VALUES ('01W', 'Stockport');
INSERT INTO #CCGLookup VALUES ('00Y', 'Oldham'); 
INSERT INTO #CCGLookup VALUES ('02H', 'Wigan'); 
INSERT INTO #CCGLookup VALUES ('00V', 'Bury'); 
INSERT INTO #CCGLookup VALUES ('14L', 'Manchester'); 
INSERT INTO #CCGLookup VALUES ('01Y', 'Tameside Glossop'); 

IF OBJECT_ID('tempdb..#PatientPracticeAndCCG') IS NOT NULL DROP TABLE #PatientPracticeAndCCG;
SELECT p.FK_Patient_Link_ID, ISNULL(pp.GPPracticeCode,'') AS GPPracticeCode, ISNULL(ccg.CcgName, '') AS CCG
INTO #PatientPracticeAndCCG
FROM #Patients p
LEFT OUTER JOIN #PatientPractice pp ON pp.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN SharedCare.Reference_GP_Practice gp ON gp.OrganisationCode = pp.GPPracticeCode
LEFT OUTER JOIN #CCGLookup ccg ON ccg.CcgId = gp.Commissioner;

-- FIND PATIENTS THAT HAVE LEFT GM DURING STUDY PERIOD AND THE DATE THAT THEY LEFT

IF OBJECT_ID('tempdb..#GM_GPs') IS NOT NULL DROP TABLE #GM_GPs;
SELECT * 
INTO #GM_GPs
FROM #PatientGPHistory
WHERE 
--StartDate <= @StartDate and EndDate > @StartDate and 
GPPracticeCode <> 'OutOfArea'

IF OBJECT_ID('tempdb..#GM_GP_range') IS NOT NULL DROP TABLE #GM_GP_range;
SELECT FK_Patient_Link_ID, MIN(StartDate) AS MinDate, MAX(EndDate) AS MaxDate
INTO #GM_GP_range
FROM #GM_GPs
GROUP BY FK_Patient_Link_ID
ORDER BY FK_Patient_Link_ID, MIN(StartDate)

IF OBJECT_ID('tempdb..#GPExitDates') IS NOT NULL DROP TABLE #GPExitDates;
SELECT *,
	MovedOutOfGMDate = CASE WHEN MaxDate <  @EndDate THEN MaxDate ELSE NULL END
INTO #GPExitDates
FROM #GM_GP_range



-- FIND NUMBER OF ATTENDED GP APPOINTMENTS FROM MARCH 2018 TO MARCH 2022

IF OBJECT_ID('tempdb..#gp_appointments') IS NOT NULL DROP TABLE #gp_appointments;
SELECT G.FK_Patient_Link_ID, 
	G.AppointmentDate, 
	BeforeOrAfter1stMarch2020 = CASE WHEN G.AppointmentDate < '2020-03-01' THEN 'BEFORE' ELSE 'AFTER' END
INTO #gp_appointments
FROM RLS.vw_GP_Appointments G
WHERE AppointmentCancelledDate IS NULL 
AND AppointmentDate BETWEEN '2018-03-01' AND '2022-03-01'
AND G.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Cohort) 

SELECT FK_Patient_Link_ID, BeforeOrAfter1stMarch2020, COUNT(*) as gp_appointments
INTO #count_gp_appointments
FROM #gp_appointments
GROUP BY FK_Patient_Link_ID, BeforeOrAfter1stMarch2020
ORDER BY FK_Patient_Link_ID, BeforeOrAfter1stMarch2020

-- FIND NUMBER OF A&E APPOINTMENTS FROM MARCH 2018 TO MARCH 2022

IF OBJECT_ID('tempdb..#ae_encounters') IS NOT NULL DROP TABLE #ae_encounters;
SELECT a.FK_Patient_Link_ID, 
	a.AttendanceDate, 
	BeforeOrAfter1stMarch2020 = CASE WHEN a.AttendanceDate < '2020-03-01' THEN 'BEFORE' ELSE 'AFTER' END
INTO #ae_encounters
FROM RLS.vw_Acute_AE a
WHERE EventType = 'Attendance'
AND a.AttendanceDate BETWEEN '2018-03-01' AND '2022-03-01'
AND a.FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Cohort) 

SELECT FK_Patient_Link_ID, BeforeOrAfter1stMarch2020, COUNT(*) AS ae_encounters
INTO #count_ae_encounters
FROM #ae_encounters
GROUP BY FK_Patient_Link_ID, BeforeOrAfter1stMarch2020
ORDER BY FK_Patient_Link_ID, BeforeOrAfter1stMarch2020


-- Get patient list of those with COVID death within 28 days of positive test
IF OBJECT_ID('tempdb..#COVIDDeath') IS NOT NULL DROP TABLE #COVIDDeath;
SELECT DISTINCT FK_Patient_Link_ID 
INTO #COVIDDeath FROM RLS.vw_COVID19
WHERE DeathWithin28Days = 'Y'
	AND EventDate <= @EndDate

--┌─────┐
--│ Sex │
--└─────┘

-- OBJECTIVE: To get the Sex for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientSex (FK_Patient_Link_ID, Sex)
-- 	- FK_Patient_Link_ID - unique patient id
--	- Sex - M/F

-- ASSUMPTIONS:
--	- Patient data is obtained from multiple sources. Where patients have multiple sexes we determine the sex as follows:
--	-	If the patients has a sex in their primary care data feed we use that as most likely to be up to date
--	-	If every sex for a patient is the same, then we use that
--	-	If there is a single most recently updated sex in the database then we use that
--	-	Otherwise the patient's sex is considered unknown

-- Get all patients sex for the cohort
IF OBJECT_ID('tempdb..#AllPatientSexs') IS NOT NULL DROP TABLE #AllPatientSexs;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	Sex
INTO #AllPatientSexs
FROM RLS.vw_Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND Sex IS NOT NULL;


-- If patients have a tenancy id of 2 we take this as their most likely Sex
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientSex') IS NOT NULL DROP TABLE #PatientSex;
SELECT FK_Patient_Link_ID, MIN(Sex) as Sex INTO #PatientSex FROM #AllPatientSexs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedSexPatients') IS NOT NULL DROP TABLE #UnmatchedSexPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedSexPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientSex;

-- If every Sex is the same for all their linked patient ids then we use that
INSERT INTO #PatientSex
SELECT FK_Patient_Link_ID, MIN(Sex) FROM #AllPatientSexs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedSexPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedSexPatients;
INSERT INTO #UnmatchedSexPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientSex;

-- If there is a unique most recent Sex then use that
INSERT INTO #PatientSex
SELECT p.FK_Patient_Link_ID, MIN(p.Sex) FROM #AllPatientSexs p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientSexs
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedSexPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(Sex) = MAX(Sex);

-- Tidy up - helpful in ensuring the tempdb doesn't run out of space mid-query
DROP TABLE #AllPatientSexs;
DROP TABLE #UnmatchedSexPatients;
--┌────────────────────────────┐
--│ Index Multiple Deprivation │
--└────────────────────────────┘

-- OBJECTIVE: To get the 2019 Index of Multiple Deprivation (IMD) decile for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientIMDDecile (FK_Patient_Link_ID, IMD2019Decile1IsMostDeprived10IsLeastDeprived)
-- 	- FK_Patient_Link_ID - unique patient id
--	- IMD2019Decile1IsMostDeprived10IsLeastDeprived - number 1 to 10 inclusive

-- Get all patients IMD_Score (which is a rank) for the cohort and map to decile
-- (Data on mapping thresholds at: https://www.gov.uk/government/statistics/english-indices-of-deprivation-2019
IF OBJECT_ID('tempdb..#AllPatientIMDDeciles') IS NOT NULL DROP TABLE #AllPatientIMDDeciles;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	CASE 
		WHEN IMD_Score <= 3284 THEN 1
		WHEN IMD_Score <= 6568 THEN 2
		WHEN IMD_Score <= 9853 THEN 3
		WHEN IMD_Score <= 13137 THEN 4
		WHEN IMD_Score <= 16422 THEN 5
		WHEN IMD_Score <= 19706 THEN 6
		WHEN IMD_Score <= 22990 THEN 7
		WHEN IMD_Score <= 26275 THEN 8
		WHEN IMD_Score <= 29559 THEN 9
		ELSE 10
	END AS IMD2019Decile1IsMostDeprived10IsLeastDeprived 
INTO #AllPatientIMDDeciles
FROM RLS.vw_Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND IMD_Score IS NOT NULL
AND IMD_Score != -1;
-- 972479 rows
-- 00:00:11

-- If patients have a tenancy id of 2 we take this as their most likely IMD_Score
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientIMDDecile') IS NOT NULL DROP TABLE #PatientIMDDecile;
SELECT FK_Patient_Link_ID, MIN(IMD2019Decile1IsMostDeprived10IsLeastDeprived) as IMD2019Decile1IsMostDeprived10IsLeastDeprived INTO #PatientIMDDecile FROM #AllPatientIMDDeciles
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID;
-- 247377 rows
-- 00:00:00

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedImdPatients') IS NOT NULL DROP TABLE #UnmatchedImdPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedImdPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientIMDDecile;
-- 38710 rows
-- 00:00:00

-- If every IMD_Score is the same for all their linked patient ids then we use that
INSERT INTO #PatientIMDDecile
SELECT FK_Patient_Link_ID, MIN(IMD2019Decile1IsMostDeprived10IsLeastDeprived) FROM #AllPatientIMDDeciles
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedImdPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(IMD2019Decile1IsMostDeprived10IsLeastDeprived) = MAX(IMD2019Decile1IsMostDeprived10IsLeastDeprived);
-- 36656
-- 00:00:00

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedImdPatients;
INSERT INTO #UnmatchedImdPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientIMDDecile;
-- 2054 rows
-- 00:00:00

-- If there is a unique most recent imd decile then use that
INSERT INTO #PatientIMDDecile
SELECT p.FK_Patient_Link_ID, MIN(p.IMD2019Decile1IsMostDeprived10IsLeastDeprived) FROM #AllPatientIMDDeciles p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientIMDDeciles
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedImdPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(IMD2019Decile1IsMostDeprived10IsLeastDeprived) = MAX(IMD2019Decile1IsMostDeprived10IsLeastDeprived);
-- 489
-- 00:00:00
--┌───────────────┐
--│ Year of birth │
--└───────────────┘

-- OBJECTIVE: To get the year of birth for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientYearOfBirth (FK_Patient_Link_ID, YearOfBirth)
-- 	- FK_Patient_Link_ID - unique patient id
--	- YearOfBirth - INT

-- ASSUMPTIONS:
--	- Patient data is obtained from multiple sources. Where patients have multiple YOBs we determine the YOB as follows:
--	-	If the patients has a YOB in their primary care data feed we use that as most likely to be up to date
--	-	If every YOB for a patient is the same, then we use that
--	-	If there is a single most recently updated YOB in the database then we use that
--	-	Otherwise we take the highest YOB for the patient that is not in the future

-- Get all patients year of birth for the cohort
IF OBJECT_ID('tempdb..#AllPatientYearOfBirths') IS NOT NULL DROP TABLE #AllPatientYearOfBirths;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	YEAR(Dob) AS YearOfBirth
INTO #AllPatientYearOfBirths
FROM RLS.vw_Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND Dob IS NOT NULL;


-- If patients have a tenancy id of 2 we take this as their most likely YOB
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientYearOfBirth') IS NOT NULL DROP TABLE #PatientYearOfBirth;
SELECT FK_Patient_Link_ID, MIN(YearOfBirth) as YearOfBirth INTO #PatientYearOfBirth FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedYobPatients') IS NOT NULL DROP TABLE #UnmatchedYobPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedYobPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- If every YOB is the same for all their linked patient ids then we use that
INSERT INTO #PatientYearOfBirth
SELECT FK_Patient_Link_ID, MIN(YearOfBirth) FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedYobPatients;
INSERT INTO #UnmatchedYobPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- If there is a unique most recent YOB then use that
INSERT INTO #PatientYearOfBirth
SELECT p.FK_Patient_Link_ID, MIN(p.YearOfBirth) FROM #AllPatientYearOfBirths p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientYearOfBirths
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(YearOfBirth) = MAX(YearOfBirth);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedYobPatients;
INSERT INTO #UnmatchedYobPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientYearOfBirth;

-- Otherwise just use the highest value (with the exception that can't be in the future)
INSERT INTO #PatientYearOfBirth
SELECT FK_Patient_Link_ID, MAX(YearOfBirth) FROM #AllPatientYearOfBirths
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedYobPatients)
GROUP BY FK_Patient_Link_ID
HAVING MAX(YearOfBirth) <= YEAR(GETDATE());

-- Tidy up - helpful in ensuring the tempdb doesn't run out of space mid-query
DROP TABLE #AllPatientYearOfBirths;
DROP TABLE #UnmatchedYobPatients;
--┌───────────────────────────────┐
--│ Lower level super output area │
--└───────────────────────────────┘

-- OBJECTIVE: To get the LSOA for each patient.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort

-- OUTPUT: A temp table as follows:
-- #PatientLSOA (FK_Patient_Link_ID, LSOA)
-- 	- FK_Patient_Link_ID - unique patient id
--	- LSOA_Code - nationally recognised LSOA identifier

-- ASSUMPTIONS:
--	- Patient data is obtained from multiple sources. Where patients have multiple LSOAs we determine the LSOA as follows:
--	-	If the patients has an LSOA in their primary care data feed we use that as most likely to be up to date
--	-	If every LSOA for a paitent is the same, then we use that
--	-	If there is a single most recently updated LSOA in the database then we use that
--	-	Otherwise the patient's LSOA is considered unknown

-- Get all patients LSOA for the cohort
IF OBJECT_ID('tempdb..#AllPatientLSOAs') IS NOT NULL DROP TABLE #AllPatientLSOAs;
SELECT 
	FK_Patient_Link_ID,
	FK_Reference_Tenancy_ID,
	HDMModifDate,
	LSOA_Code
INTO #AllPatientLSOAs
FROM RLS.vw_Patient p
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND LSOA_Code IS NOT NULL;


-- If patients have a tenancy id of 2 we take this as their most likely LSOA_Code
-- as this is the GP data feed and so most likely to be up to date
IF OBJECT_ID('tempdb..#PatientLSOA') IS NOT NULL DROP TABLE #PatientLSOA;
SELECT FK_Patient_Link_ID, MIN(LSOA_Code) as LSOA_Code INTO #PatientLSOA FROM #AllPatientLSOAs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Tenancy_ID = 2
GROUP BY FK_Patient_Link_ID
HAVING MIN(LSOA_Code) = MAX(LSOA_Code);

-- Find the patients who remain unmatched
IF OBJECT_ID('tempdb..#UnmatchedLsoaPatients') IS NOT NULL DROP TABLE #UnmatchedLsoaPatients;
SELECT FK_Patient_Link_ID INTO #UnmatchedLsoaPatients FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientLSOA;
-- 38710 rows
-- 00:00:00

-- If every LSOA_Code is the same for all their linked patient ids then we use that
INSERT INTO #PatientLSOA
SELECT FK_Patient_Link_ID, MIN(LSOA_Code) FROM #AllPatientLSOAs
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedLsoaPatients)
GROUP BY FK_Patient_Link_ID
HAVING MIN(LSOA_Code) = MAX(LSOA_Code);

-- Find any still unmatched patients
TRUNCATE TABLE #UnmatchedLsoaPatients;
INSERT INTO #UnmatchedLsoaPatients
SELECT FK_Patient_Link_ID FROM #Patients
EXCEPT
SELECT FK_Patient_Link_ID FROM #PatientLSOA;

-- If there is a unique most recent lsoa then use that
INSERT INTO #PatientLSOA
SELECT p.FK_Patient_Link_ID, MIN(p.LSOA_Code) FROM #AllPatientLSOAs p
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(HDMModifDate) MostRecentDate FROM #AllPatientLSOAs
	WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #UnmatchedLsoaPatients)
	GROUP BY FK_Patient_Link_ID
) sub ON sub.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND sub.MostRecentDate = p.HDMModifDate
GROUP BY p.FK_Patient_Link_ID
HAVING MIN(LSOA_Code) = MAX(LSOA_Code);

-- Tidy up - helpful in ensuring the tempdb doesn't run out of space mid-query
DROP TABLE #AllPatientLSOAs;
DROP TABLE #UnmatchedLsoaPatients;
--┌─────┐
--│ BMI │
--└─────┘

-- OBJECTIVE: To get the BMI for each patient in a cohort.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort
-- Also takes one parameter:
--	- gp-events-table: string - (table name) the name of the table containing the GP events. Usually is "RLS.vw_GP_Events" but can be anything with the columns: FK_Patient_Link_ID, EventDate, FK_Reference_Coding_ID, and FK_Reference_SnomedCT_ID
-- Also assumes there is an @IndexDate defined - The index date of the study


-- OUTPUT: A temp table as follows:
-- #PatientBMI (FK_Patient_Link_ID, BMI, DateOfBMIMeasurement)
--	- FK_Patient_Link_ID - unique patient id
--  - BMI
--  - DateOfBMIMeasurement

-- ASSUMPTIONS:
--	- We take the measurement closest to @IndexDate to be correct

-- >>> Following code sets injected: bmi v2

-- Get all BMI measurements 

IF OBJECT_ID('tempdb..#AllPatientBMI') IS NOT NULL DROP TABLE #AllPatientBMI;
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID,
	[Value]
INTO #AllPatientBMI
FROM RLS.vw_GP_Events
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
	AND FK_Reference_SnomedCT_ID IN (SELECT FK_Reference_SnomedCT_ID FROM #VersionedSnomedSets WHERE Concept = 'bmi'AND [Version]=1) 
	AND EventDate <= @IndexDate
UNION
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID,
	[Value]
FROM RLS.vw_GP_Events
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
	AND FK_Reference_Coding_ID IN (SELECT FK_Reference_Coding_ID FROM #VersionedCodeSets WHERE Concept = 'bmi' AND [Version]=1)
	AND EventDate <= @IndexDate


-- For closest BMI prior to index date
IF OBJECT_ID('tempdb..#TempCurrentBMI') IS NOT NULL DROP TABLE #TempCurrentBMI;
SELECT 
	a.FK_Patient_Link_ID, 
	Max([Value]) as [Value],
	Max(EventDate) as EventDate
INTO #TempCurrentBMI
FROM #AllPatientBMI a
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(EventDate) AS MostRecentDate 
	FROM #AllPatientBMI
	GROUP BY FK_Patient_Link_ID
) sub ON sub.MostRecentDate = a.EventDate and sub.FK_Patient_Link_ID = a.FK_Patient_Link_ID
GROUP BY a.FK_Patient_Link_ID;

-- Bring all together in final table
IF OBJECT_ID('tempdb..#PatientBMI') IS NOT NULL DROP TABLE #PatientBMI;
SELECT 
	p.FK_Patient_Link_ID,
	BMI = TRY_CONVERT(NUMERIC(16,5), [Value]),
	EventDate
INTO #PatientBMI 
FROM #Patients p
LEFT OUTER JOIN #TempCurrentBMI c on c.FK_Patient_Link_ID = p.FK_Patient_Link_ID
--┌────────────────┐
--│ Smoking status │
--└────────────────┘

-- OBJECTIVE: To get the smoking status for each patient in a cohort.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort
-- Also takes one parameter:
--	- gp-events-table: string - (table name) the name of the table containing the GP events. Usually is "RLS.vw_GP_Events" but can be anything with the columns: FK_Patient_Link_ID, EventDate, FK_Reference_Coding_ID, and FK_Reference_SnomedCT_ID

-- OUTPUT: A temp table as follows:
-- #PatientSmokingStatus (FK_Patient_Link_ID, PassiveSmoker, WorstSmokingStatus, CurrentSmokingStatus)
--	- FK_Patient_Link_ID - unique patient id
--	- PassiveSmoker - Y/N (whether a patient has ever had a code for passive smoking)
--	- WorstSmokingStatus - [non-trivial-smoker/trivial-smoker/non-smoker]
--	- CurrentSmokingStatus - [non-trivial-smoker/trivial-smoker/non-smoker]

-- ASSUMPTIONS:
--	- We take the most recent smoking status in a patient's record to be correct
--	- However, there is likely confusion between the "non smoker" and "never smoked" codes. Especially as sometimes the synonyms for these codes overlap. Therefore, a patient wih a most recent smoking status of "never", but who has previous smoking codes, would be classed as WorstSmokingStatus=non-trivial-smoker / CurrentSmokingStatus=non-smoker

-- >>> Following code sets injected: smoking-status-current v1/smoking-status-currently-not v1/smoking-status-ex v1/smoking-status-ex-trivial v1/smoking-status-never v1/smoking-status-passive v1/smoking-status-trivial v1
-- Get all patients year of birth for the cohort
IF OBJECT_ID('tempdb..#AllPatientSmokingStatusCodes') IS NOT NULL DROP TABLE #AllPatientSmokingStatusCodes;
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID
INTO #AllPatientSmokingStatusCodes
FROM #PatientEventData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_SnomedCT_ID IN (
	SELECT FK_Reference_SnomedCT_ID FROM #VersionedSnomedSets 
	WHERE Concept IN (
		'smoking-status-current',
		'smoking-status-currently-not',
		'smoking-status-ex',
		'smoking-status-ex-trivial',
		'smoking-status-never',
		'smoking-status-passive',
		'smoking-status-trivial'
	)
	AND [Version]=1
) 
UNION
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID
FROM #PatientEventData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Coding_ID IN (
	SELECT FK_Reference_Coding_ID FROM #VersionedCodeSets 
	WHERE Concept IN (
		'smoking-status-current',
		'smoking-status-currently-not',
		'smoking-status-ex',
		'smoking-status-ex-trivial',
		'smoking-status-never',
		'smoking-status-passive',
		'smoking-status-trivial'
	)
	AND [Version]=1
);

IF OBJECT_ID('tempdb..#AllPatientSmokingStatusConcept') IS NOT NULL DROP TABLE #AllPatientSmokingStatusConcept;
SELECT 
	a.FK_Patient_Link_ID,
	EventDate,
	CASE WHEN c.Concept IS NULL THEN s.Concept ELSE c.Concept END AS Concept,
	-1 AS Severity
INTO #AllPatientSmokingStatusConcept
FROM #AllPatientSmokingStatusCodes a
LEFT OUTER JOIN #VersionedCodeSets c on c.FK_Reference_Coding_ID = a.FK_Reference_Coding_ID
LEFT OUTER JOIN #VersionedSnomedSets s on s.FK_Reference_SnomedCT_ID = a.FK_Reference_SnomedCT_ID;

UPDATE #AllPatientSmokingStatusConcept
SET Severity = 2
WHERE Concept IN ('smoking-status-current');
UPDATE #AllPatientSmokingStatusConcept
SET Severity = 2
WHERE Concept IN ('smoking-status-ex');
UPDATE #AllPatientSmokingStatusConcept
SET Severity = 1
WHERE Concept IN ('smoking-status-ex-trivial');
UPDATE #AllPatientSmokingStatusConcept
SET Severity = 1
WHERE Concept IN ('smoking-status-trivial');
UPDATE #AllPatientSmokingStatusConcept
SET Severity = 0
WHERE Concept IN ('smoking-status-never');
UPDATE #AllPatientSmokingStatusConcept
SET Severity = 0
WHERE Concept IN ('smoking-status-currently-not');

-- passive smokers
IF OBJECT_ID('tempdb..#TempPassiveSmokers') IS NOT NULL DROP TABLE #TempPassiveSmokers;
select DISTINCT FK_Patient_Link_ID into #TempPassiveSmokers from #AllPatientSmokingStatusConcept
where Concept = 'smoking-status-passive';

-- For "worst" smoking status
IF OBJECT_ID('tempdb..#TempWorst') IS NOT NULL DROP TABLE #TempWorst;
SELECT 
	FK_Patient_Link_ID, 
	CASE 
		WHEN MAX(Severity) = 2 THEN 'non-trivial-smoker'
		WHEN MAX(Severity) = 1 THEN 'trivial-smoker'
		WHEN MAX(Severity) = 0 THEN 'non-smoker'
	END AS [Status]
INTO #TempWorst
FROM #AllPatientSmokingStatusConcept
WHERE Severity >= 0
GROUP BY FK_Patient_Link_ID;

-- For "current" smoking status
IF OBJECT_ID('tempdb..#TempCurrent') IS NOT NULL DROP TABLE #TempCurrent;
SELECT 
	a.FK_Patient_Link_ID, 
	CASE 
		WHEN MAX(Severity) = 2 THEN 'non-trivial-smoker'
		WHEN MAX(Severity) = 1 THEN 'trivial-smoker'
		WHEN MAX(Severity) = 0 THEN 'non-smoker'
	END AS [Status]
INTO #TempCurrent
FROM #AllPatientSmokingStatusConcept a
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(EventDate) AS MostRecentDate FROM #AllPatientSmokingStatusConcept
	WHERE Severity >= 0
	GROUP BY FK_Patient_Link_ID
) sub ON sub.MostRecentDate = a.EventDate and sub.FK_Patient_Link_ID = a.FK_Patient_Link_ID
GROUP BY a.FK_Patient_Link_ID;

-- Bring all together in final table
IF OBJECT_ID('tempdb..#PatientSmokingStatus') IS NOT NULL DROP TABLE #PatientSmokingStatus;
SELECT 
	p.FK_Patient_Link_ID,
	CASE WHEN ps.FK_Patient_Link_ID IS NULL THEN 'N' ELSE 'Y' END AS PassiveSmoker,
	CASE WHEN w.[Status] IS NULL THEN 'non-smoker' ELSE w.[Status] END AS WorstSmokingStatus,
	CASE WHEN c.[Status] IS NULL THEN 'non-smoker' ELSE c.[Status] END AS CurrentSmokingStatus
INTO #PatientSmokingStatus FROM #Patients p
LEFT OUTER JOIN #TempPassiveSmokers ps on ps.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #TempWorst w on w.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #TempCurrent c on c.FK_Patient_Link_ID = p.FK_Patient_Link_ID;
--┌────────────────┐
--│ Alcohol Intake │
--└────────────────┘

-- OBJECTIVE: To get the alcohol status for each patient in a cohort.

-- INPUT: Assumes there exists a temp table as follows:
-- #Patients (FK_Patient_Link_ID)
--  A distinct list of FK_Patient_Link_IDs for each patient in the cohort
-- Also takes one parameter:
--	- gp-events-table: string - (table name) the name of the table containing the GP events. Usually is "RLS.vw_GP_Events" but can be anything with the columns: FK_Patient_Link_ID, EventDate, FK_Reference_Coding_ID, and FK_Reference_SnomedCT_ID

-- OUTPUT: A temp table as follows:
-- #PatientAlcoholIntake (FK_Patient_Link_ID, CurrentAlcoholIntake)
--	- FK_Patient_Link_ID - unique patient id
--  - WorstAlcoholIntake - [heavy drinker/moderate drinker/light drinker/non-drinker] - worst code
--	- CurrentAlcoholIntake - [heavy drinker/moderate drinker/light drinker/non-drinker] - most recent code

-- ASSUMPTIONS:
--	- We take the most recent alcohol intake code in a patient's record to be correct

-- >>> Following code sets injected: alcohol-non-drinker v1/alcohol-light-drinker v1/alcohol-moderate-drinker v1/alcohol-heavy-drinker v1/alcohol-weekly-intake v1

-- Get all patients year of birth for the cohort
IF OBJECT_ID('tempdb..#AllPatientAlcoholIntakeCodes') IS NOT NULL DROP TABLE #AllPatientAlcoholIntakeCodes;
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID,
	[Value]
INTO #AllPatientAlcoholIntakeCodes
FROM #PatientEventData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_SnomedCT_ID IN (
	SELECT FK_Reference_SnomedCT_ID FROM #VersionedSnomedSets 
	WHERE Concept IN (
	'alcohol-non-drinker', 
	'alcohol-light-drinker',
	'alcohol-moderate-drinker',
	'alcohol-heavy-drinker',
	'alcohol-weekly-intake'
	)
	AND [Version]=1
) 
UNION
SELECT 
	FK_Patient_Link_ID,
	CAST(EventDate AS DATE) AS EventDate,
	FK_Reference_Coding_ID,
	FK_Reference_SnomedCT_ID,
	[Value]
FROM #PatientEventData
WHERE FK_Patient_Link_ID IN (SELECT FK_Patient_Link_ID FROM #Patients)
AND FK_Reference_Coding_ID IN (
	SELECT FK_Reference_Coding_ID FROM #VersionedCodeSets 
	WHERE Concept IN (
	'alcohol-non-drinker', 
	'alcohol-light-drinker',
	'alcohol-moderate-drinker',
	'alcohol-heavy-drinker',
	'alcohol-weekly-intake'
	)
	AND [Version]=1
);

IF OBJECT_ID('tempdb..#AllPatientAlcoholIntakeConcept') IS NOT NULL DROP TABLE #AllPatientAlcoholIntakeConcept;
SELECT 
	a.FK_Patient_Link_ID,
	EventDate,
	CASE WHEN c.Concept IS NULL THEN s.Concept ELSE c.Concept END AS Concept,
	-1 AS Severity,
	[Value]
INTO #AllPatientAlcoholIntakeConcept
FROM #AllPatientAlcoholIntakeCodes a
LEFT OUTER JOIN #VersionedCodeSets c on c.FK_Reference_Coding_ID = a.FK_Reference_Coding_ID
LEFT OUTER JOIN #VersionedSnomedSets s on s.FK_Reference_SnomedCT_ID = a.FK_Reference_SnomedCT_ID;

UPDATE #AllPatientAlcoholIntakeConcept
SET Severity = 3
WHERE Concept = 'alcohol-heavy-drinker' OR (Concept = 'alcohol-weekly-intake' AND TRY_CONVERT(NUMERIC(16,5), [Value]) > 14) ;
UPDATE #AllPatientAlcoholIntakeConcept
SET Severity = 2
WHERE Concept = 'alcohol-moderate-drinker' OR (Concept = 'alcohol-weekly-intake' AND TRY_CONVERT(NUMERIC(16,5), [Value]) BETWEEN 7 AND 14);
UPDATE #AllPatientAlcoholIntakeConcept
SET Severity = 1
WHERE Concept = 'alcohol-light-drinker' OR (Concept = 'alcohol-weekly-intake' AND TRY_CONVERT(NUMERIC(16,5), [Value]) BETWEEN 0 AND 7);
UPDATE #AllPatientAlcoholIntakeConcept
SET Severity = 0
WHERE Concept = 'alcohol-non-drinker' OR (Concept = 'alcohol-weekly-intake' AND TRY_CONVERT(NUMERIC(16,5), [Value]) = 0 );

-- For "worst" alcohol intake
IF OBJECT_ID('tempdb..#TempWorstAlc') IS NOT NULL DROP TABLE #TempWorstAlc;
SELECT 
	FK_Patient_Link_ID, 
	CASE 
		WHEN MAX(Severity) = 3 THEN 'heavy drinker'
		WHEN MAX(Severity) = 2 THEN 'moderate drinker'
		WHEN MAX(Severity) = 1 THEN 'light drinker'
		WHEN MAX(Severity) = 0 THEN 'non-drinker'
	END AS [Status]
INTO #TempWorstAlc
FROM #AllPatientAlcoholIntakeConcept
WHERE Severity >= 0
GROUP BY FK_Patient_Link_ID;

-- For "current" alcohol intake
IF OBJECT_ID('tempdb..#TempCurrentAlc') IS NOT NULL DROP TABLE #TempCurrentAlc;
SELECT 
	a.FK_Patient_Link_ID, 
	CASE 
		WHEN MAX(Severity) = 3 THEN 'heavy drinker'
		WHEN MAX(Severity) = 2 THEN 'moderate drinker'
		WHEN MAX(Severity) = 1 THEN 'light drinker'
		WHEN MAX(Severity) = 0 THEN 'non-drinker'
	END AS [Status]
INTO #TempCurrentAlc
FROM #AllPatientAlcoholIntakeConcept a
INNER JOIN (
	SELECT FK_Patient_Link_ID, MAX(EventDate) AS MostRecentDate FROM #AllPatientAlcoholIntakeConcept
	WHERE Severity >= 0
	GROUP BY FK_Patient_Link_ID
) sub ON sub.MostRecentDate = a.EventDate and sub.FK_Patient_Link_ID = a.FK_Patient_Link_ID
GROUP BY a.FK_Patient_Link_ID;

-- Bring all together in final table
IF OBJECT_ID('tempdb..#PatientAlcoholIntake') IS NOT NULL DROP TABLE #PatientAlcoholIntake;
SELECT 
	p.FK_Patient_Link_ID,
	CASE WHEN w.[Status] IS NULL THEN 'unknown' ELSE w.[Status] END AS WorstAlcoholIntake,
	CASE WHEN c.[Status] IS NULL THEN 'unknown' ELSE c.[Status] END AS CurrentAlcoholIntake
INTO #PatientAlcoholIntake FROM #Patients p
LEFT OUTER JOIN #TempWorstAlc w on w.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #TempCurrentAlc c on c.FK_Patient_Link_ID = p.FK_Patient_Link_ID;

---- CREATE OUTPUT TABLE OF ALL INFO NEEDED FOR THE COHORT

SELECT  PatientId = p.FK_Patient_Link_ID, 
		PracticeExitDate = gpex.MovedOutOfGMDate,
		PracticeCCG = prac.CCG,
		YearOfBirth, 
		Sex,
		BMI,
		BMIDate = bmi.EventDate,
		EthnicMainGroup,
	    LSOA_Code,
		IMD2019Decile1IsMostDeprived10IsLeastDeprived,
		CurrentSmokingStatus = smok.CurrentSmokingStatus,
		WorstSmokingStatus = smok.WorstSmokingStatus,
		CurrentAlcoholIntake,
		WorstAlcoholIntake,
		DeathWithin28DaysCovid = CASE WHEN cd.FK_Patient_Link_ID  IS NOT NULL THEN 'Y' ELSE 'N' END,
		DeathDueToCovid_Year = CASE WHEN cd.FK_Patient_Link_ID IS NOT NULL THEN YEAR(p.DeathDate) ELSE null END,
		DeathDueToCovid_Month = CASE WHEN cd.FK_Patient_Link_ID IS NOT NULL THEN MONTH(p.DeathDate) ELSE null END,
		FirstVaccineYear =  YEAR(VaccineDose1Date),
		FirstVaccineMonth = MONTH(VaccineDose1Date),
		SecondVaccineYear =  YEAR(VaccineDose2Date),
		SecondVaccineMonth = MONTH(VaccineDose2Date),
		ThirdVaccineYear =  YEAR(VaccineDose3Date),
		ThirdVaccineMonth = MONTH(VaccineDose3Date),
		AEEncountersBefore1stMarch2020 = ae_b.ae_encounters,
		AEEncountersAfter1stMarch2020 = ae_a.ae_encounters,
		GPAppointmentsBefore1stMarch2020 = gp_b.gp_appointments,
		GPAppointmentsAfter1stMarch2020 =  gp_a.gp_appointments ,
		EvidenceOfCKD_egfr = NULL,
		EvidenceOfCKD_acr = NULL,
		AtRiskOfCKD,
		HypertensionAtStudyStart = CASE WHEN hyp.FK_Patient_Link_ID IS NOT NULL AND hyp.EarliestDiagnosis <= @StartDate THEN 1 ELSE 0 END,
		HypertensionDuringStudyPeriod = CASE WHEN hyp.FK_Patient_Link_ID IS NOT NULL AND hyp.EarliestDiagnosis BETWEEN @StartDate AND @EndDate THEN 1 ELSE 0 END,
		DiabetesAtStudyStart = CASE WHEN dia.FK_Patient_Link_ID IS NOT NULL AND dia.EarliestDiagnosis <= @StartDate THEN 1 ELSE 0 END,
		DiabetesDuringStudyPeriod = CASE WHEN dia.FK_Patient_Link_ID IS NOT NULL AND dia.EarliestDiagnosis BETWEEN @StartDate AND @EndDate THEN 1 ELSE 0 END
FROM #Cohort p
LEFT OUTER JOIN #PatientLSOA lsoa ON lsoa.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientYearOfBirth yob ON yob.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientSex sex ON sex.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientIMDDecile imd ON imd.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientBMI bmi ON bmi.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientSmokingStatus smok ON smok.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientAlcoholIntake alc ON alc.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #PatientPracticeAndCCG prac ON prac.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #GPExitDates gpex ON gpex.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #COVIDVaccinations vac ON vac.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #COVIDDeath cd ON cd.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #count_ae_encounters ae_b ON ae_b.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND ae_b.BeforeOrAfter1stMarch2020 = 'BEFORE'
LEFT OUTER JOIN #count_ae_encounters ae_a ON ae_a.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND ae_a.BeforeOrAfter1stMarch2020 = 'AFTER'
LEFT OUTER JOIN #count_gp_appointments gp_b ON gp_b.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND gp_b.BeforeOrAfter1stMarch2020 = 'BEFORE'
LEFT OUTER JOIN #count_gp_appointments gp_a ON gp_a.FK_Patient_Link_ID = p.FK_Patient_Link_ID AND gp_a.BeforeOrAfter1stMarch2020 = 'AFTER'
LEFT OUTER JOIN #hypertension hyp ON hyp.FK_Patient_Link_ID = p.FK_Patient_Link_ID
LEFT OUTER JOIN #diabetes dia ON dia.FK_Patient_Link_ID = p.FK_Patient_Link_ID
WHERE YEAR(@StartDate) - YearOfBirth > 18 -- OVER 18s ONLY
--320,594