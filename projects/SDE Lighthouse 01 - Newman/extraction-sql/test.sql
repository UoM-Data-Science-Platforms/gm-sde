--┌────────────────────────────────────────────────────────────┐
--│ Test file: adding code set to snowflake DB                 │
--└────────────────────────────────────────────────────────────┘

--┌───────────────────────────────────────────────────────────────────────────────────────────────┐
--│ This file loads whichever code set is specified, and inserts into a permanent snowflake table │
--└───────────────────────────────────────────────────────────────────────────────────────────────┘

-- INPUT: Two parameters
--  - code-set: string - the name of the code set to be used. Must be one from the repository.
--  - version: number - the code set version

USE DATABASE INTERMEDIATE;
USE SCHEMA GP_RECORD;

-- >>> Codesets required... Inserting the code set code
--
--┌────────────────────┐
--│ Clinical code sets │
--└────────────────────┘

-- OBJECTIVE: To populate temporary tables with the existing clinical code sets.
--            See the [SQL-generation-process.md](SQL-generation-process.md) for more details.

-- INPUT: No pre-requisites

-- OUTPUT: Five temp tables as follows:
--  AllCodes (Concept, Version, Code)
--  CodeSets (FK_Reference_Coding_ID, Concept)
--  SnomedSets (FK_Reference_SnomedCT_ID, FK_SNOMED_ID)
--  VersionedCodeSets (FK_Reference_Coding_ID, Concept, Version)
--  VersionedSnomedSets (FK_Reference_SnomedCT_ID, Version, FK_SNOMED_ID)

--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
--!!! DO NOT EDIT THIS FILE MANUALLY !!!
--!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

--#region Clinical code sets

DROP TABLE IF EXISTS AllCodes;
CREATE TEMPORARY TABLE AllCodes (
  Concept varchar(255) NOT NULL,
  Version INT NOT NULL,
  Code varchar(20) NOT NULL,
  description varchar (255) NULL 
);

DROP TABLE IF EXISTS codesreadv2;
CREATE TEMPORARY TABLE codesreadv2 (
  concept varchar(255) NOT NULL,
  version INT NOT NULL,
	code varchar(20) NOT NULL,
	term varchar(20) NULL,
	description varchar(255) NULL
);

INSERT INTO codesreadv2
VALUES('chronic-pancreatitis',1,'14CH.',NULL,'History of chronic pancreatitis'),('chronic-pancreatitis',1,'14CH.00',NULL,'History of chronic pancreatitis'),('chronic-pancreatitis',1,'J671.',NULL,'Chronic pancreatitis'),('chronic-pancreatitis',1,'J671.00',NULL,'Chronic pancreatitis'),('chronic-pancreatitis',1,'J6710',NULL,'Alcohol-induced chronic pancreatitis'),('chronic-pancreatitis',1,'J671000',NULL,'Alcohol-induced chronic pancreatitis'),('chronic-pancreatitis',1,'J6711',NULL,'Gallstone chronic pancreatitis'),('chronic-pancreatitis',1,'J671100',NULL,'Gallstone chronic pancreatitis'),('chronic-pancreatitis',1,'Jyu84',NULL,'[X]Other chronic pancreatitis'),('chronic-pancreatitis',1,'Jyu8400',NULL,'[X]Other chronic pancreatitis');
  
INSERT INTO AllCodes
SELECT concept, version, code, description from codesreadv2;

DROP TABLE IF EXISTS codesctv3;
CREATE TEMPORARY TABLE codesctv3 (
  concept varchar(255) NOT NULL,
  version INT NOT NULL,
	code varchar(20) NOT NULL,
	term varchar(20) NULL,
	description varchar(255) NULL
);

INSERT INTO codesctv3
VALUES('chronic-pancreatitis',1,'Jyu84',NULL,'[X]Other chronic pancreatitis'),('chronic-pancreatitis',1,'XaLov',NULL,'History of chronic pancreatitis'),('chronic-pancreatitis',1,'X308v',NULL,'Alcohol-induced chronic pancreatitis'),('chronic-pancreatitis',1,'J671.',NULL,'CP - Chronic pancreatitis'),('chronic-pancreatitis',1,'J671.',NULL,'Chronic pancreatitis'),('chronic-pancreatitis',1,'Xa7na',NULL,'Calcific chronic pancreatitis'),('chronic-pancreatitis',1,'X308u',NULL,'Gallstone chronic pancreatitis'),('chronic-pancreatitis',1,'X308w',NULL,'Idiopathic chronic pancreatitis'),('chronic-pancreatitis',1,'X308x',NULL,'Obstructive chronic pancreatitis'),('chronic-pancreatitis',1,'X308y',NULL,'Drug-induced chronic pancreatitis'),('chronic-pancreatitis',1,'X308z',NULL,'Familial chronic pancreatitis'),('chronic-pancreatitis',1,'X308z',NULL,'Hereditary chronic pancreatitis');
  
INSERT INTO AllCodes
SELECT concept, version, code, description from codesctv3;

DROP TABLE IF EXISTS codessnomed;
CREATE TEMPORARY TABLE codessnomed (
  concept varchar(255) NOT NULL,
  version INT NOT NULL,
	code varchar(20) NOT NULL,
	term varchar(20) NULL,
	description varchar(255) NULL
);

INSERT INTO codessnomed
VALUES('chronic-pancreatitis',1,'235494005',NULL,'Chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235951009',NULL,'Gallstone chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235952002',NULL,'Alcohol-induced chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235953007',NULL,'Idiopathic chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235954001',NULL,'Obstructive chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235955000',NULL,'Drug-induced chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'235956004',NULL,'Familial chronic pancreatitis (disorder)'),('chronic-pancreatitis',1,'247431000000103',NULL,'History of chronic pancreatitis (context-dependent category)'),('chronic-pancreatitis',1,'301009006',NULL,'Calcific chronic pancreatitis (disorder)');
  
INSERT INTO AllCodes
SELECT concept, version, code, description from codessnomed;

DROP TABLE IF EXISTS codesemis;
CREATE TEMPORARY TABLE codesemis (
  concept varchar(255) NOT NULL,
  version INT NOT NULL,
	code varchar(20) NOT NULL,
	term varchar(20) NULL,
	description varchar(255) NULL
);

INSERT INTO codesemis
VALUES('chronic-pancreatitis',1,'^ESCTCA588800',NULL,'Calcific chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTCH508775',NULL,'Chronic pancreatitis due to acute alcohol intoxication'),('chronic-pancreatitis',1,'^ESCTCP508106',NULL,'CP - Chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTDR508778',NULL,'Drug-induced chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTFA508779',NULL,'Familial chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTHE508780',NULL,'Hereditary chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTID508776',NULL,'Idiopathic chronic pancreatitis'),('chronic-pancreatitis',1,'^ESCTOB508777',NULL,'Obstructive chronic pancreatitis');
  
INSERT INTO AllCodes
SELECT concept, version, code, description from codesemis;


DROP TABLE IF EXISTS TempRefCodes;
CREATE TEMPORARY TABLE TempRefCodes (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, version INT NOT NULL, description VARCHAR(255));

-- Read v2 codes
INSERT INTO TempRefCodes
SELECT "PK_Reference_Coding_ID", dcr.concept, dcr.version, dcr.description
FROM INTERMEDIATE.GP_RECORD."Reference_Coding" rc
INNER JOIN codesreadv2 dcr on dcr.code = rc."MainCode"
WHERE "CodingType"='ReadCodeV2'
AND (dcr.term IS NULL OR dcr.term = rc."Term")
and "PK_Reference_Coding_ID" != -1;

-- CTV3 codes
INSERT INTO TempRefCodes
SELECT "PK_Reference_Coding_ID", dcc.concept, dcc.version, dcc.description
FROM INTERMEDIATE.GP_RECORD."Reference_Coding" rc
INNER JOIN codesctv3 dcc on dcc.code = rc."MainCode"
WHERE "CodingType"='CTV3'
and "PK_Reference_Coding_ID" != -1;


-- EMIS codes with a FK Reference Coding ID
/*INSERT INTO TempRefCodes
SELECT "FK_Reference_Coding_ID", ce.concept, ce.version, ce.description
FROM INTERMEDIATE.GP_RECORD."Reference_Local_Code" rlc
INNER JOIN codesemis ce on ce.code = rlc."LocalCode"
WHERE "FK_Reference_Coding_ID" != -1; */

DROP TABLE IF EXISTS TempSNOMEDRefCodes;
CREATE TEMPORARY TABLE TempSNOMEDRefCodes (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, version INT NOT NULL, description VARCHAR(255));

-- SNOMED codes
INSERT INTO TempSNOMEDRefCodes
SELECT "PK_Reference_SnomedCT_ID", dcs.concept, dcs.version, dcs.description
FROM INTERMEDIATE.GP_RECORD."Reference_SnomedCT" rs
INNER JOIN codessnomed dcs on dcs.code = rs."ConceptID";


-- EMIS codes with a FK SNOMED ID but without a FK Reference Coding ID
/*INSERT INTO TempRefCodes
SELECT "FK_Reference_SnomedCT_ID", ce.concept, ce.version, ce.description
FROM INTERMEDIATE.GP_RECORD."Reference_Local_Code" rlc
INNER JOIN codesemis ce on ce.code = rlc."LocalCode"
WHERE "FK_Reference_Coding_ID" = -1
AND "FK_Reference_SnomedCT_ID" != -1;*/


-- De-duped tables
DROP TABLE IF EXISTS CodeSets;
CREATE TEMPORARY TABLE CodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, description VARCHAR(255));

DROP TABLE IF EXISTS SnomedSets;
CREATE TEMPORARY TABLE SnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, concept VARCHAR(255) NOT NULL, description VARCHAR(255));

DROP TABLE IF EXISTS VersionedCodeSets;
CREATE TEMPORARY TABLE VersionedCodeSets (FK_Reference_Coding_ID BIGINT NOT NULL, Concept VARCHAR(255), Version INT, description VARCHAR(255));

DROP TABLE IF EXISTS VersionedSnomedSets;
CREATE TEMPORARY TABLE VersionedSnomedSets (FK_Reference_SnomedCT_ID BIGINT NOT NULL, Concept VARCHAR(255), Version INT, description VARCHAR(255));

INSERT INTO VersionedCodeSets
SELECT DISTINCT * FROM TempRefCodes;

INSERT INTO VersionedSnomedSets
SELECT DISTINCT * FROM TempSNOMEDRefCodes;

INSERT INTO CodeSets
SELECT FK_Reference_Coding_ID, c.concept, description
FROM VersionedCodeSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM VersionedCodeSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

INSERT INTO SnomedSets
SELECT FK_Reference_SnomedCT_ID, c.concept, description
FROM VersionedSnomedSets c
INNER JOIN (
  SELECT concept, MAX(version) AS maxVersion FROM VersionedSnomedSets
  GROUP BY concept)
sub ON sub.concept = c.concept AND c.version = sub.maxVersion;

--#endregion

-- >>> Following code sets injected: chronic-pancreatitis v1

INSERT INTO SDE_REPOSITORY.SHARED_UTILITIES.versionedsnomedsets_permanent
SELECT src.*
FROM versionedsnomedsets AS src
WHERE NOT EXISTS (SELECT *
                  FROM  SDE_REPOSITORY.SHARED_UTILITIES.versionedsnomedsets_permanent AS tgt
                  WHERE tgt.FK_REFERENCE_SNOMEDCT_ID = src."FK_REFERENCE_SNOMEDCT_ID"
                  );

INSERT INTO SDE_REPOSITORY.SHARED_UTILITIES.versionedcodesets_permanent
SELECT src.*
FROM versionedcodesets AS src
WHERE NOT EXISTS (SELECT *
                  FROM  SDE_REPOSITORY.SHARED_UTILITIES.versionedcodesets_permanent AS tgt
                  WHERE tgt.FK_REFERENCE_CODING_ID = src."FK_REFERENCE_CODING_ID"
                  );

---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------


